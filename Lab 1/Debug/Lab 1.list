
Lab 1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001bc  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00005db4  080001c0  080001c0  000011c0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000558  08005f78  08005f78  00006f78  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080064d0  080064d0  000081d4  2**0
                  CONTENTS
  4 .ARM          00000008  080064d0  080064d0  000074d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  080064d8  080064d8  000081d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080064d8  080064d8  000074d8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080064dc  080064dc  000074dc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001d4  20000000  080064e0  00008000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000170  200001d4  080066b4  000081d4  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000344  080066b4  00008344  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000081d4  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000a068  00000000  00000000  00008204  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002175  00000000  00000000  0001226c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000740  00000000  00000000  000143e8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 0000049a  00000000  00000000  00014b28  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0002a631  00000000  00000000  00014fc2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000943d  00000000  00000000  0003f5f3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000fdc4d  00000000  00000000  00048a30  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      000000fb  00000000  00000000  0014667d  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000028fc  00000000  00000000  00146778  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000005b  00000000  00000000  00149074  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_loc    0000341f  00000000  00000000  001490cf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_ranges 00000088  00000000  00000000  0014c4ee  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c0 <__do_global_dtors_aux>:
 80001c0:	b510      	push	{r4, lr}
 80001c2:	4c05      	ldr	r4, [pc, #20]	@ (80001d8 <__do_global_dtors_aux+0x18>)
 80001c4:	7823      	ldrb	r3, [r4, #0]
 80001c6:	b933      	cbnz	r3, 80001d6 <__do_global_dtors_aux+0x16>
 80001c8:	4b04      	ldr	r3, [pc, #16]	@ (80001dc <__do_global_dtors_aux+0x1c>)
 80001ca:	b113      	cbz	r3, 80001d2 <__do_global_dtors_aux+0x12>
 80001cc:	4804      	ldr	r0, [pc, #16]	@ (80001e0 <__do_global_dtors_aux+0x20>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	2301      	movs	r3, #1
 80001d4:	7023      	strb	r3, [r4, #0]
 80001d6:	bd10      	pop	{r4, pc}
 80001d8:	200001d4 	.word	0x200001d4
 80001dc:	00000000 	.word	0x00000000
 80001e0:	08005f5c 	.word	0x08005f5c

080001e4 <frame_dummy>:
 80001e4:	b508      	push	{r3, lr}
 80001e6:	4b03      	ldr	r3, [pc, #12]	@ (80001f4 <frame_dummy+0x10>)
 80001e8:	b11b      	cbz	r3, 80001f2 <frame_dummy+0xe>
 80001ea:	4903      	ldr	r1, [pc, #12]	@ (80001f8 <frame_dummy+0x14>)
 80001ec:	4803      	ldr	r0, [pc, #12]	@ (80001fc <frame_dummy+0x18>)
 80001ee:	f3af 8000 	nop.w
 80001f2:	bd08      	pop	{r3, pc}
 80001f4:	00000000 	.word	0x00000000
 80001f8:	200001d8 	.word	0x200001d8
 80001fc:	08005f5c 	.word	0x08005f5c

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <strlen>:
 80002a0:	4603      	mov	r3, r0
 80002a2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80002a6:	2a00      	cmp	r2, #0
 80002a8:	d1fb      	bne.n	80002a2 <strlen+0x2>
 80002aa:	1a18      	subs	r0, r3, r0
 80002ac:	3801      	subs	r0, #1
 80002ae:	4770      	bx	lr

080002b0 <__aeabi_drsub>:
 80002b0:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 80002b4:	e002      	b.n	80002bc <__adddf3>
 80002b6:	bf00      	nop

080002b8 <__aeabi_dsub>:
 80002b8:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

080002bc <__adddf3>:
 80002bc:	b530      	push	{r4, r5, lr}
 80002be:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002c2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002c6:	ea94 0f05 	teq	r4, r5
 80002ca:	bf08      	it	eq
 80002cc:	ea90 0f02 	teqeq	r0, r2
 80002d0:	bf1f      	itttt	ne
 80002d2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002d6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002da:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002de:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002e2:	f000 80e2 	beq.w	80004aa <__adddf3+0x1ee>
 80002e6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ea:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ee:	bfb8      	it	lt
 80002f0:	426d      	neglt	r5, r5
 80002f2:	dd0c      	ble.n	800030e <__adddf3+0x52>
 80002f4:	442c      	add	r4, r5
 80002f6:	ea80 0202 	eor.w	r2, r0, r2
 80002fa:	ea81 0303 	eor.w	r3, r1, r3
 80002fe:	ea82 0000 	eor.w	r0, r2, r0
 8000302:	ea83 0101 	eor.w	r1, r3, r1
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	2d36      	cmp	r5, #54	@ 0x36
 8000310:	bf88      	it	hi
 8000312:	bd30      	pophi	{r4, r5, pc}
 8000314:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000318:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800031c:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000320:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000324:	d002      	beq.n	800032c <__adddf3+0x70>
 8000326:	4240      	negs	r0, r0
 8000328:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800032c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000330:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000334:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000338:	d002      	beq.n	8000340 <__adddf3+0x84>
 800033a:	4252      	negs	r2, r2
 800033c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000340:	ea94 0f05 	teq	r4, r5
 8000344:	f000 80a7 	beq.w	8000496 <__adddf3+0x1da>
 8000348:	f1a4 0401 	sub.w	r4, r4, #1
 800034c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000350:	db0d      	blt.n	800036e <__adddf3+0xb2>
 8000352:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000356:	fa22 f205 	lsr.w	r2, r2, r5
 800035a:	1880      	adds	r0, r0, r2
 800035c:	f141 0100 	adc.w	r1, r1, #0
 8000360:	fa03 f20e 	lsl.w	r2, r3, lr
 8000364:	1880      	adds	r0, r0, r2
 8000366:	fa43 f305 	asr.w	r3, r3, r5
 800036a:	4159      	adcs	r1, r3
 800036c:	e00e      	b.n	800038c <__adddf3+0xd0>
 800036e:	f1a5 0520 	sub.w	r5, r5, #32
 8000372:	f10e 0e20 	add.w	lr, lr, #32
 8000376:	2a01      	cmp	r2, #1
 8000378:	fa03 fc0e 	lsl.w	ip, r3, lr
 800037c:	bf28      	it	cs
 800037e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000382:	fa43 f305 	asr.w	r3, r3, r5
 8000386:	18c0      	adds	r0, r0, r3
 8000388:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800038c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000390:	d507      	bpl.n	80003a2 <__adddf3+0xe6>
 8000392:	f04f 0e00 	mov.w	lr, #0
 8000396:	f1dc 0c00 	rsbs	ip, ip, #0
 800039a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800039e:	eb6e 0101 	sbc.w	r1, lr, r1
 80003a2:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 80003a6:	d31b      	bcc.n	80003e0 <__adddf3+0x124>
 80003a8:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 80003ac:	d30c      	bcc.n	80003c8 <__adddf3+0x10c>
 80003ae:	0849      	lsrs	r1, r1, #1
 80003b0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003b4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003b8:	f104 0401 	add.w	r4, r4, #1
 80003bc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003c0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80003c4:	f080 809a 	bcs.w	80004fc <__adddf3+0x240>
 80003c8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80003cc:	bf08      	it	eq
 80003ce:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003d2:	f150 0000 	adcs.w	r0, r0, #0
 80003d6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003da:	ea41 0105 	orr.w	r1, r1, r5
 80003de:	bd30      	pop	{r4, r5, pc}
 80003e0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003e4:	4140      	adcs	r0, r0
 80003e6:	eb41 0101 	adc.w	r1, r1, r1
 80003ea:	3c01      	subs	r4, #1
 80003ec:	bf28      	it	cs
 80003ee:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80003f2:	d2e9      	bcs.n	80003c8 <__adddf3+0x10c>
 80003f4:	f091 0f00 	teq	r1, #0
 80003f8:	bf04      	itt	eq
 80003fa:	4601      	moveq	r1, r0
 80003fc:	2000      	moveq	r0, #0
 80003fe:	fab1 f381 	clz	r3, r1
 8000402:	bf08      	it	eq
 8000404:	3320      	addeq	r3, #32
 8000406:	f1a3 030b 	sub.w	r3, r3, #11
 800040a:	f1b3 0220 	subs.w	r2, r3, #32
 800040e:	da0c      	bge.n	800042a <__adddf3+0x16e>
 8000410:	320c      	adds	r2, #12
 8000412:	dd08      	ble.n	8000426 <__adddf3+0x16a>
 8000414:	f102 0c14 	add.w	ip, r2, #20
 8000418:	f1c2 020c 	rsb	r2, r2, #12
 800041c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000420:	fa21 f102 	lsr.w	r1, r1, r2
 8000424:	e00c      	b.n	8000440 <__adddf3+0x184>
 8000426:	f102 0214 	add.w	r2, r2, #20
 800042a:	bfd8      	it	le
 800042c:	f1c2 0c20 	rsble	ip, r2, #32
 8000430:	fa01 f102 	lsl.w	r1, r1, r2
 8000434:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000438:	bfdc      	itt	le
 800043a:	ea41 010c 	orrle.w	r1, r1, ip
 800043e:	4090      	lslle	r0, r2
 8000440:	1ae4      	subs	r4, r4, r3
 8000442:	bfa2      	ittt	ge
 8000444:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000448:	4329      	orrge	r1, r5
 800044a:	bd30      	popge	{r4, r5, pc}
 800044c:	ea6f 0404 	mvn.w	r4, r4
 8000450:	3c1f      	subs	r4, #31
 8000452:	da1c      	bge.n	800048e <__adddf3+0x1d2>
 8000454:	340c      	adds	r4, #12
 8000456:	dc0e      	bgt.n	8000476 <__adddf3+0x1ba>
 8000458:	f104 0414 	add.w	r4, r4, #20
 800045c:	f1c4 0220 	rsb	r2, r4, #32
 8000460:	fa20 f004 	lsr.w	r0, r0, r4
 8000464:	fa01 f302 	lsl.w	r3, r1, r2
 8000468:	ea40 0003 	orr.w	r0, r0, r3
 800046c:	fa21 f304 	lsr.w	r3, r1, r4
 8000470:	ea45 0103 	orr.w	r1, r5, r3
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f1c4 040c 	rsb	r4, r4, #12
 800047a:	f1c4 0220 	rsb	r2, r4, #32
 800047e:	fa20 f002 	lsr.w	r0, r0, r2
 8000482:	fa01 f304 	lsl.w	r3, r1, r4
 8000486:	ea40 0003 	orr.w	r0, r0, r3
 800048a:	4629      	mov	r1, r5
 800048c:	bd30      	pop	{r4, r5, pc}
 800048e:	fa21 f004 	lsr.w	r0, r1, r4
 8000492:	4629      	mov	r1, r5
 8000494:	bd30      	pop	{r4, r5, pc}
 8000496:	f094 0f00 	teq	r4, #0
 800049a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800049e:	bf06      	itte	eq
 80004a0:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 80004a4:	3401      	addeq	r4, #1
 80004a6:	3d01      	subne	r5, #1
 80004a8:	e74e      	b.n	8000348 <__adddf3+0x8c>
 80004aa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ae:	bf18      	it	ne
 80004b0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004b4:	d029      	beq.n	800050a <__adddf3+0x24e>
 80004b6:	ea94 0f05 	teq	r4, r5
 80004ba:	bf08      	it	eq
 80004bc:	ea90 0f02 	teqeq	r0, r2
 80004c0:	d005      	beq.n	80004ce <__adddf3+0x212>
 80004c2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004c6:	bf04      	itt	eq
 80004c8:	4619      	moveq	r1, r3
 80004ca:	4610      	moveq	r0, r2
 80004cc:	bd30      	pop	{r4, r5, pc}
 80004ce:	ea91 0f03 	teq	r1, r3
 80004d2:	bf1e      	ittt	ne
 80004d4:	2100      	movne	r1, #0
 80004d6:	2000      	movne	r0, #0
 80004d8:	bd30      	popne	{r4, r5, pc}
 80004da:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004de:	d105      	bne.n	80004ec <__adddf3+0x230>
 80004e0:	0040      	lsls	r0, r0, #1
 80004e2:	4149      	adcs	r1, r1
 80004e4:	bf28      	it	cs
 80004e6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004ea:	bd30      	pop	{r4, r5, pc}
 80004ec:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80004f0:	bf3c      	itt	cc
 80004f2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80004f6:	bd30      	popcc	{r4, r5, pc}
 80004f8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004fc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 8000500:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8000504:	f04f 0000 	mov.w	r0, #0
 8000508:	bd30      	pop	{r4, r5, pc}
 800050a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800050e:	bf1a      	itte	ne
 8000510:	4619      	movne	r1, r3
 8000512:	4610      	movne	r0, r2
 8000514:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000518:	bf1c      	itt	ne
 800051a:	460b      	movne	r3, r1
 800051c:	4602      	movne	r2, r0
 800051e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000522:	bf06      	itte	eq
 8000524:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000528:	ea91 0f03 	teqeq	r1, r3
 800052c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000530:	bd30      	pop	{r4, r5, pc}
 8000532:	bf00      	nop

08000534 <__aeabi_ui2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000548:	f04f 0500 	mov.w	r5, #0
 800054c:	f04f 0100 	mov.w	r1, #0
 8000550:	e750      	b.n	80003f4 <__adddf3+0x138>
 8000552:	bf00      	nop

08000554 <__aeabi_i2d>:
 8000554:	f090 0f00 	teq	r0, #0
 8000558:	bf04      	itt	eq
 800055a:	2100      	moveq	r1, #0
 800055c:	4770      	bxeq	lr
 800055e:	b530      	push	{r4, r5, lr}
 8000560:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000564:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000568:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800056c:	bf48      	it	mi
 800056e:	4240      	negmi	r0, r0
 8000570:	f04f 0100 	mov.w	r1, #0
 8000574:	e73e      	b.n	80003f4 <__adddf3+0x138>
 8000576:	bf00      	nop

08000578 <__aeabi_f2d>:
 8000578:	0042      	lsls	r2, r0, #1
 800057a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800057e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000582:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000586:	bf1f      	itttt	ne
 8000588:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800058c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000590:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000594:	4770      	bxne	lr
 8000596:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800059a:	bf08      	it	eq
 800059c:	4770      	bxeq	lr
 800059e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 80005a2:	bf04      	itt	eq
 80005a4:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 80005a8:	4770      	bxeq	lr
 80005aa:	b530      	push	{r4, r5, lr}
 80005ac:	f44f 7460 	mov.w	r4, #896	@ 0x380
 80005b0:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80005b4:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80005b8:	e71c      	b.n	80003f4 <__adddf3+0x138>
 80005ba:	bf00      	nop

080005bc <__aeabi_ul2d>:
 80005bc:	ea50 0201 	orrs.w	r2, r0, r1
 80005c0:	bf08      	it	eq
 80005c2:	4770      	bxeq	lr
 80005c4:	b530      	push	{r4, r5, lr}
 80005c6:	f04f 0500 	mov.w	r5, #0
 80005ca:	e00a      	b.n	80005e2 <__aeabi_l2d+0x16>

080005cc <__aeabi_l2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005da:	d502      	bpl.n	80005e2 <__aeabi_l2d+0x16>
 80005dc:	4240      	negs	r0, r0
 80005de:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005e2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005e6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005ea:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ee:	f43f aed8 	beq.w	80003a2 <__adddf3+0xe6>
 80005f2:	f04f 0203 	mov.w	r2, #3
 80005f6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005fa:	bf18      	it	ne
 80005fc:	3203      	addne	r2, #3
 80005fe:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000602:	bf18      	it	ne
 8000604:	3203      	addne	r2, #3
 8000606:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800060a:	f1c2 0320 	rsb	r3, r2, #32
 800060e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000612:	fa20 f002 	lsr.w	r0, r0, r2
 8000616:	fa01 fe03 	lsl.w	lr, r1, r3
 800061a:	ea40 000e 	orr.w	r0, r0, lr
 800061e:	fa21 f102 	lsr.w	r1, r1, r2
 8000622:	4414      	add	r4, r2
 8000624:	e6bd      	b.n	80003a2 <__adddf3+0xe6>
 8000626:	bf00      	nop

08000628 <__aeabi_dmul>:
 8000628:	b570      	push	{r4, r5, r6, lr}
 800062a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 800062e:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000632:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000636:	bf1d      	ittte	ne
 8000638:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800063c:	ea94 0f0c 	teqne	r4, ip
 8000640:	ea95 0f0c 	teqne	r5, ip
 8000644:	f000 f8de 	bleq	8000804 <__aeabi_dmul+0x1dc>
 8000648:	442c      	add	r4, r5
 800064a:	ea81 0603 	eor.w	r6, r1, r3
 800064e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000652:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000656:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800065a:	bf18      	it	ne
 800065c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000660:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000664:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000668:	d038      	beq.n	80006dc <__aeabi_dmul+0xb4>
 800066a:	fba0 ce02 	umull	ip, lr, r0, r2
 800066e:	f04f 0500 	mov.w	r5, #0
 8000672:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000676:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800067a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800067e:	f04f 0600 	mov.w	r6, #0
 8000682:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000686:	f09c 0f00 	teq	ip, #0
 800068a:	bf18      	it	ne
 800068c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000690:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000694:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000698:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800069c:	d204      	bcs.n	80006a8 <__aeabi_dmul+0x80>
 800069e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006a2:	416d      	adcs	r5, r5
 80006a4:	eb46 0606 	adc.w	r6, r6, r6
 80006a8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006ac:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006b0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006b4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006b8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006bc:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80006c0:	bf88      	it	hi
 80006c2:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80006c6:	d81e      	bhi.n	8000706 <__aeabi_dmul+0xde>
 80006c8:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 80006cc:	bf08      	it	eq
 80006ce:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006d2:	f150 0000 	adcs.w	r0, r0, #0
 80006d6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006da:	bd70      	pop	{r4, r5, r6, pc}
 80006dc:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006e0:	ea46 0101 	orr.w	r1, r6, r1
 80006e4:	ea40 0002 	orr.w	r0, r0, r2
 80006e8:	ea81 0103 	eor.w	r1, r1, r3
 80006ec:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006f0:	bfc2      	ittt	gt
 80006f2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006f6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006fa:	bd70      	popgt	{r4, r5, r6, pc}
 80006fc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000700:	f04f 0e00 	mov.w	lr, #0
 8000704:	3c01      	subs	r4, #1
 8000706:	f300 80ab 	bgt.w	8000860 <__aeabi_dmul+0x238>
 800070a:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 800070e:	bfde      	ittt	le
 8000710:	2000      	movle	r0, #0
 8000712:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 8000716:	bd70      	pople	{r4, r5, r6, pc}
 8000718:	f1c4 0400 	rsb	r4, r4, #0
 800071c:	3c20      	subs	r4, #32
 800071e:	da35      	bge.n	800078c <__aeabi_dmul+0x164>
 8000720:	340c      	adds	r4, #12
 8000722:	dc1b      	bgt.n	800075c <__aeabi_dmul+0x134>
 8000724:	f104 0414 	add.w	r4, r4, #20
 8000728:	f1c4 0520 	rsb	r5, r4, #32
 800072c:	fa00 f305 	lsl.w	r3, r0, r5
 8000730:	fa20 f004 	lsr.w	r0, r0, r4
 8000734:	fa01 f205 	lsl.w	r2, r1, r5
 8000738:	ea40 0002 	orr.w	r0, r0, r2
 800073c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000740:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000744:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000748:	fa21 f604 	lsr.w	r6, r1, r4
 800074c:	eb42 0106 	adc.w	r1, r2, r6
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 040c 	rsb	r4, r4, #12
 8000760:	f1c4 0520 	rsb	r5, r4, #32
 8000764:	fa00 f304 	lsl.w	r3, r0, r4
 8000768:	fa20 f005 	lsr.w	r0, r0, r5
 800076c:	fa01 f204 	lsl.w	r2, r1, r4
 8000770:	ea40 0002 	orr.w	r0, r0, r2
 8000774:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000778:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800077c:	f141 0100 	adc.w	r1, r1, #0
 8000780:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000784:	bf08      	it	eq
 8000786:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800078a:	bd70      	pop	{r4, r5, r6, pc}
 800078c:	f1c4 0520 	rsb	r5, r4, #32
 8000790:	fa00 f205 	lsl.w	r2, r0, r5
 8000794:	ea4e 0e02 	orr.w	lr, lr, r2
 8000798:	fa20 f304 	lsr.w	r3, r0, r4
 800079c:	fa01 f205 	lsl.w	r2, r1, r5
 80007a0:	ea43 0302 	orr.w	r3, r3, r2
 80007a4:	fa21 f004 	lsr.w	r0, r1, r4
 80007a8:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007ac:	fa21 f204 	lsr.w	r2, r1, r4
 80007b0:	ea20 0002 	bic.w	r0, r0, r2
 80007b4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007b8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007bc:	bf08      	it	eq
 80007be:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007c2:	bd70      	pop	{r4, r5, r6, pc}
 80007c4:	f094 0f00 	teq	r4, #0
 80007c8:	d10f      	bne.n	80007ea <__aeabi_dmul+0x1c2>
 80007ca:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 80007ce:	0040      	lsls	r0, r0, #1
 80007d0:	eb41 0101 	adc.w	r1, r1, r1
 80007d4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3c01      	subeq	r4, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1a6>
 80007de:	ea41 0106 	orr.w	r1, r1, r6
 80007e2:	f095 0f00 	teq	r5, #0
 80007e6:	bf18      	it	ne
 80007e8:	4770      	bxne	lr
 80007ea:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007ee:	0052      	lsls	r2, r2, #1
 80007f0:	eb43 0303 	adc.w	r3, r3, r3
 80007f4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80007f8:	bf08      	it	eq
 80007fa:	3d01      	subeq	r5, #1
 80007fc:	d0f7      	beq.n	80007ee <__aeabi_dmul+0x1c6>
 80007fe:	ea43 0306 	orr.w	r3, r3, r6
 8000802:	4770      	bx	lr
 8000804:	ea94 0f0c 	teq	r4, ip
 8000808:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800080c:	bf18      	it	ne
 800080e:	ea95 0f0c 	teqne	r5, ip
 8000812:	d00c      	beq.n	800082e <__aeabi_dmul+0x206>
 8000814:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000818:	bf18      	it	ne
 800081a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081e:	d1d1      	bne.n	80007c4 <__aeabi_dmul+0x19c>
 8000820:	ea81 0103 	eor.w	r1, r1, r3
 8000824:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000828:	f04f 0000 	mov.w	r0, #0
 800082c:	bd70      	pop	{r4, r5, r6, pc}
 800082e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000832:	bf06      	itte	eq
 8000834:	4610      	moveq	r0, r2
 8000836:	4619      	moveq	r1, r3
 8000838:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800083c:	d019      	beq.n	8000872 <__aeabi_dmul+0x24a>
 800083e:	ea94 0f0c 	teq	r4, ip
 8000842:	d102      	bne.n	800084a <__aeabi_dmul+0x222>
 8000844:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000848:	d113      	bne.n	8000872 <__aeabi_dmul+0x24a>
 800084a:	ea95 0f0c 	teq	r5, ip
 800084e:	d105      	bne.n	800085c <__aeabi_dmul+0x234>
 8000850:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000854:	bf1c      	itt	ne
 8000856:	4610      	movne	r0, r2
 8000858:	4619      	movne	r1, r3
 800085a:	d10a      	bne.n	8000872 <__aeabi_dmul+0x24a>
 800085c:	ea81 0103 	eor.w	r1, r1, r3
 8000860:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000864:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000868:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800086c:	f04f 0000 	mov.w	r0, #0
 8000870:	bd70      	pop	{r4, r5, r6, pc}
 8000872:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000876:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800087a:	bd70      	pop	{r4, r5, r6, pc}

0800087c <__aeabi_ddiv>:
 800087c:	b570      	push	{r4, r5, r6, lr}
 800087e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000882:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000886:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800088a:	bf1d      	ittte	ne
 800088c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000890:	ea94 0f0c 	teqne	r4, ip
 8000894:	ea95 0f0c 	teqne	r5, ip
 8000898:	f000 f8a7 	bleq	80009ea <__aeabi_ddiv+0x16e>
 800089c:	eba4 0405 	sub.w	r4, r4, r5
 80008a0:	ea81 0e03 	eor.w	lr, r1, r3
 80008a4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008a8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008ac:	f000 8088 	beq.w	80009c0 <__aeabi_ddiv+0x144>
 80008b0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008b4:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 80008b8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008bc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008c0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008c4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008c8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008cc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008d0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008d4:	429d      	cmp	r5, r3
 80008d6:	bf08      	it	eq
 80008d8:	4296      	cmpeq	r6, r2
 80008da:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008de:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008e2:	d202      	bcs.n	80008ea <__aeabi_ddiv+0x6e>
 80008e4:	085b      	lsrs	r3, r3, #1
 80008e6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ea:	1ab6      	subs	r6, r6, r2
 80008ec:	eb65 0503 	sbc.w	r5, r5, r3
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80008fa:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000928:	085b      	lsrs	r3, r3, #1
 800092a:	ea4f 0232 	mov.w	r2, r2, rrx
 800092e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000932:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000936:	bf22      	ittt	cs
 8000938:	1ab6      	subcs	r6, r6, r2
 800093a:	4675      	movcs	r5, lr
 800093c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000940:	085b      	lsrs	r3, r3, #1
 8000942:	ea4f 0232 	mov.w	r2, r2, rrx
 8000946:	ebb6 0e02 	subs.w	lr, r6, r2
 800094a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800094e:	bf22      	ittt	cs
 8000950:	1ab6      	subcs	r6, r6, r2
 8000952:	4675      	movcs	r5, lr
 8000954:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000958:	ea55 0e06 	orrs.w	lr, r5, r6
 800095c:	d018      	beq.n	8000990 <__aeabi_ddiv+0x114>
 800095e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000962:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000966:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800096a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800096e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000972:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000976:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800097a:	d1c0      	bne.n	80008fe <__aeabi_ddiv+0x82>
 800097c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000980:	d10b      	bne.n	800099a <__aeabi_ddiv+0x11e>
 8000982:	ea41 0100 	orr.w	r1, r1, r0
 8000986:	f04f 0000 	mov.w	r0, #0
 800098a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800098e:	e7b6      	b.n	80008fe <__aeabi_ddiv+0x82>
 8000990:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000994:	bf04      	itt	eq
 8000996:	4301      	orreq	r1, r0
 8000998:	2000      	moveq	r0, #0
 800099a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800099e:	bf88      	it	hi
 80009a0:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80009a4:	f63f aeaf 	bhi.w	8000706 <__aeabi_dmul+0xde>
 80009a8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009ac:	bf04      	itt	eq
 80009ae:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009b2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009b6:	f150 0000 	adcs.w	r0, r0, #0
 80009ba:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009be:	bd70      	pop	{r4, r5, r6, pc}
 80009c0:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 80009c4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009c8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009cc:	bfc2      	ittt	gt
 80009ce:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009d2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009d6:	bd70      	popgt	{r4, r5, r6, pc}
 80009d8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009dc:	f04f 0e00 	mov.w	lr, #0
 80009e0:	3c01      	subs	r4, #1
 80009e2:	e690      	b.n	8000706 <__aeabi_dmul+0xde>
 80009e4:	ea45 0e06 	orr.w	lr, r5, r6
 80009e8:	e68d      	b.n	8000706 <__aeabi_dmul+0xde>
 80009ea:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ee:	ea94 0f0c 	teq	r4, ip
 80009f2:	bf08      	it	eq
 80009f4:	ea95 0f0c 	teqeq	r5, ip
 80009f8:	f43f af3b 	beq.w	8000872 <__aeabi_dmul+0x24a>
 80009fc:	ea94 0f0c 	teq	r4, ip
 8000a00:	d10a      	bne.n	8000a18 <__aeabi_ddiv+0x19c>
 8000a02:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a06:	f47f af34 	bne.w	8000872 <__aeabi_dmul+0x24a>
 8000a0a:	ea95 0f0c 	teq	r5, ip
 8000a0e:	f47f af25 	bne.w	800085c <__aeabi_dmul+0x234>
 8000a12:	4610      	mov	r0, r2
 8000a14:	4619      	mov	r1, r3
 8000a16:	e72c      	b.n	8000872 <__aeabi_dmul+0x24a>
 8000a18:	ea95 0f0c 	teq	r5, ip
 8000a1c:	d106      	bne.n	8000a2c <__aeabi_ddiv+0x1b0>
 8000a1e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a22:	f43f aefd 	beq.w	8000820 <__aeabi_dmul+0x1f8>
 8000a26:	4610      	mov	r0, r2
 8000a28:	4619      	mov	r1, r3
 8000a2a:	e722      	b.n	8000872 <__aeabi_dmul+0x24a>
 8000a2c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a30:	bf18      	it	ne
 8000a32:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a36:	f47f aec5 	bne.w	80007c4 <__aeabi_dmul+0x19c>
 8000a3a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a3e:	f47f af0d 	bne.w	800085c <__aeabi_dmul+0x234>
 8000a42:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a46:	f47f aeeb 	bne.w	8000820 <__aeabi_dmul+0x1f8>
 8000a4a:	e712      	b.n	8000872 <__aeabi_dmul+0x24a>

08000a4c <__gedf2>:
 8000a4c:	f04f 3cff 	mov.w	ip, #4294967295	@ 0xffffffff
 8000a50:	e006      	b.n	8000a60 <__cmpdf2+0x4>
 8000a52:	bf00      	nop

08000a54 <__ledf2>:
 8000a54:	f04f 0c01 	mov.w	ip, #1
 8000a58:	e002      	b.n	8000a60 <__cmpdf2+0x4>
 8000a5a:	bf00      	nop

08000a5c <__cmpdf2>:
 8000a5c:	f04f 0c01 	mov.w	ip, #1
 8000a60:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a64:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a68:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a6c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a70:	bf18      	it	ne
 8000a72:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a76:	d01b      	beq.n	8000ab0 <__cmpdf2+0x54>
 8000a78:	b001      	add	sp, #4
 8000a7a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a7e:	bf0c      	ite	eq
 8000a80:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a84:	ea91 0f03 	teqne	r1, r3
 8000a88:	bf02      	ittt	eq
 8000a8a:	ea90 0f02 	teqeq	r0, r2
 8000a8e:	2000      	moveq	r0, #0
 8000a90:	4770      	bxeq	lr
 8000a92:	f110 0f00 	cmn.w	r0, #0
 8000a96:	ea91 0f03 	teq	r1, r3
 8000a9a:	bf58      	it	pl
 8000a9c:	4299      	cmppl	r1, r3
 8000a9e:	bf08      	it	eq
 8000aa0:	4290      	cmpeq	r0, r2
 8000aa2:	bf2c      	ite	cs
 8000aa4:	17d8      	asrcs	r0, r3, #31
 8000aa6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000aaa:	f040 0001 	orr.w	r0, r0, #1
 8000aae:	4770      	bx	lr
 8000ab0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ab4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ab8:	d102      	bne.n	8000ac0 <__cmpdf2+0x64>
 8000aba:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000abe:	d107      	bne.n	8000ad0 <__cmpdf2+0x74>
 8000ac0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ac4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ac8:	d1d6      	bne.n	8000a78 <__cmpdf2+0x1c>
 8000aca:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ace:	d0d3      	beq.n	8000a78 <__cmpdf2+0x1c>
 8000ad0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ad4:	4770      	bx	lr
 8000ad6:	bf00      	nop

08000ad8 <__aeabi_cdrcmple>:
 8000ad8:	4684      	mov	ip, r0
 8000ada:	4610      	mov	r0, r2
 8000adc:	4662      	mov	r2, ip
 8000ade:	468c      	mov	ip, r1
 8000ae0:	4619      	mov	r1, r3
 8000ae2:	4663      	mov	r3, ip
 8000ae4:	e000      	b.n	8000ae8 <__aeabi_cdcmpeq>
 8000ae6:	bf00      	nop

08000ae8 <__aeabi_cdcmpeq>:
 8000ae8:	b501      	push	{r0, lr}
 8000aea:	f7ff ffb7 	bl	8000a5c <__cmpdf2>
 8000aee:	2800      	cmp	r0, #0
 8000af0:	bf48      	it	mi
 8000af2:	f110 0f00 	cmnmi.w	r0, #0
 8000af6:	bd01      	pop	{r0, pc}

08000af8 <__aeabi_dcmpeq>:
 8000af8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000afc:	f7ff fff4 	bl	8000ae8 <__aeabi_cdcmpeq>
 8000b00:	bf0c      	ite	eq
 8000b02:	2001      	moveq	r0, #1
 8000b04:	2000      	movne	r0, #0
 8000b06:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b0a:	bf00      	nop

08000b0c <__aeabi_dcmplt>:
 8000b0c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b10:	f7ff ffea 	bl	8000ae8 <__aeabi_cdcmpeq>
 8000b14:	bf34      	ite	cc
 8000b16:	2001      	movcc	r0, #1
 8000b18:	2000      	movcs	r0, #0
 8000b1a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b1e:	bf00      	nop

08000b20 <__aeabi_dcmple>:
 8000b20:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b24:	f7ff ffe0 	bl	8000ae8 <__aeabi_cdcmpeq>
 8000b28:	bf94      	ite	ls
 8000b2a:	2001      	movls	r0, #1
 8000b2c:	2000      	movhi	r0, #0
 8000b2e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b32:	bf00      	nop

08000b34 <__aeabi_dcmpge>:
 8000b34:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b38:	f7ff ffce 	bl	8000ad8 <__aeabi_cdrcmple>
 8000b3c:	bf94      	ite	ls
 8000b3e:	2001      	movls	r0, #1
 8000b40:	2000      	movhi	r0, #0
 8000b42:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b46:	bf00      	nop

08000b48 <__aeabi_dcmpgt>:
 8000b48:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b4c:	f7ff ffc4 	bl	8000ad8 <__aeabi_cdrcmple>
 8000b50:	bf34      	ite	cc
 8000b52:	2001      	movcc	r0, #1
 8000b54:	2000      	movcs	r0, #0
 8000b56:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b5a:	bf00      	nop

08000b5c <__aeabi_dcmpun>:
 8000b5c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b60:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b64:	d102      	bne.n	8000b6c <__aeabi_dcmpun+0x10>
 8000b66:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b6a:	d10a      	bne.n	8000b82 <__aeabi_dcmpun+0x26>
 8000b6c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b70:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b74:	d102      	bne.n	8000b7c <__aeabi_dcmpun+0x20>
 8000b76:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b7a:	d102      	bne.n	8000b82 <__aeabi_dcmpun+0x26>
 8000b7c:	f04f 0000 	mov.w	r0, #0
 8000b80:	4770      	bx	lr
 8000b82:	f04f 0001 	mov.w	r0, #1
 8000b86:	4770      	bx	lr

08000b88 <__aeabi_d2iz>:
 8000b88:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b8c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000b90:	d215      	bcs.n	8000bbe <__aeabi_d2iz+0x36>
 8000b92:	d511      	bpl.n	8000bb8 <__aeabi_d2iz+0x30>
 8000b94:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000b98:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b9c:	d912      	bls.n	8000bc4 <__aeabi_d2iz+0x3c>
 8000b9e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000ba2:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000ba6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000baa:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000bae:	fa23 f002 	lsr.w	r0, r3, r2
 8000bb2:	bf18      	it	ne
 8000bb4:	4240      	negne	r0, r0
 8000bb6:	4770      	bx	lr
 8000bb8:	f04f 0000 	mov.w	r0, #0
 8000bbc:	4770      	bx	lr
 8000bbe:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bc2:	d105      	bne.n	8000bd0 <__aeabi_d2iz+0x48>
 8000bc4:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000bc8:	bf08      	it	eq
 8000bca:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000bce:	4770      	bx	lr
 8000bd0:	f04f 0000 	mov.w	r0, #0
 8000bd4:	4770      	bx	lr
 8000bd6:	bf00      	nop

08000bd8 <KalmanFilter_C>:
 *      Author: Neil
 */

#include "KalmanFilter_C.h"

int KalmanFilter_C (kalman_state* kState, float measurement){
 8000bd8:	b480      	push	{r7}
 8000bda:	b083      	sub	sp, #12
 8000bdc:	af00      	add	r7, sp, #0
 8000bde:	6078      	str	r0, [r7, #4]
 8000be0:	ed87 0a00 	vstr	s0, [r7]

	kState->p = kState->p + kState->q;
 8000be4:	687b      	ldr	r3, [r7, #4]
 8000be6:	ed93 7a03 	vldr	s14, [r3, #12]
 8000bea:	687b      	ldr	r3, [r7, #4]
 8000bec:	edd3 7a00 	vldr	s15, [r3]
 8000bf0:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000bf4:	687b      	ldr	r3, [r7, #4]
 8000bf6:	edc3 7a03 	vstr	s15, [r3, #12]
    if (isinf(kState->p) || isnan(kState->p)) {
 8000bfa:	687b      	ldr	r3, [r7, #4]
 8000bfc:	edd3 7a03 	vldr	s15, [r3, #12]
 8000c00:	eef0 7ae7 	vabs.f32	s15, s15
 8000c04:	ed9f 7a5e 	vldr	s14, [pc, #376]	@ 8000d80 <KalmanFilter_C+0x1a8>
 8000c08:	eef4 7a47 	vcmp.f32	s15, s14
 8000c0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000c10:	bfd4      	ite	le
 8000c12:	2301      	movle	r3, #1
 8000c14:	2300      	movgt	r3, #0
 8000c16:	b2db      	uxtb	r3, r3
 8000c18:	f083 0301 	eor.w	r3, r3, #1
 8000c1c:	b2db      	uxtb	r3, r3
 8000c1e:	2b00      	cmp	r3, #0
 8000c20:	d107      	bne.n	8000c32 <KalmanFilter_C+0x5a>
 8000c22:	687b      	ldr	r3, [r7, #4]
 8000c24:	edd3 7a03 	vldr	s15, [r3, #12]
 8000c28:	eef4 7a67 	vcmp.f32	s15, s15
 8000c2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000c30:	d701      	bvc.n	8000c36 <KalmanFilter_C+0x5e>
        return KALMAN_OVERFLOW; // Overflow error
 8000c32:	2302      	movs	r3, #2
 8000c34:	e09e      	b.n	8000d74 <KalmanFilter_C+0x19c>
    }
    if ((kState->p + kState->r) < FLT_EPSILON){
 8000c36:	687b      	ldr	r3, [r7, #4]
 8000c38:	ed93 7a03 	vldr	s14, [r3, #12]
 8000c3c:	687b      	ldr	r3, [r7, #4]
 8000c3e:	edd3 7a01 	vldr	s15, [r3, #4]
 8000c42:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000c46:	ed9f 7a4f 	vldr	s14, [pc, #316]	@ 8000d84 <KalmanFilter_C+0x1ac>
 8000c4a:	eef4 7ac7 	vcmpe.f32	s15, s14
 8000c4e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000c52:	d501      	bpl.n	8000c58 <KalmanFilter_C+0x80>
    	return KALMAN_DIV_BY_ZERO;
 8000c54:	2301      	movs	r3, #1
 8000c56:	e08d      	b.n	8000d74 <KalmanFilter_C+0x19c>
    }
	kState->k = kState->p / (kState->p + kState->r);
 8000c58:	687b      	ldr	r3, [r7, #4]
 8000c5a:	edd3 6a03 	vldr	s13, [r3, #12]
 8000c5e:	687b      	ldr	r3, [r7, #4]
 8000c60:	ed93 7a03 	vldr	s14, [r3, #12]
 8000c64:	687b      	ldr	r3, [r7, #4]
 8000c66:	edd3 7a01 	vldr	s15, [r3, #4]
 8000c6a:	ee37 7a27 	vadd.f32	s14, s14, s15
 8000c6e:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8000c72:	687b      	ldr	r3, [r7, #4]
 8000c74:	edc3 7a04 	vstr	s15, [r3, #16]
    if (isinf(kState->k) || isnan(kState->k)) {
 8000c78:	687b      	ldr	r3, [r7, #4]
 8000c7a:	edd3 7a04 	vldr	s15, [r3, #16]
 8000c7e:	eef0 7ae7 	vabs.f32	s15, s15
 8000c82:	ed9f 7a3f 	vldr	s14, [pc, #252]	@ 8000d80 <KalmanFilter_C+0x1a8>
 8000c86:	eef4 7a47 	vcmp.f32	s15, s14
 8000c8a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000c8e:	bfd4      	ite	le
 8000c90:	2301      	movle	r3, #1
 8000c92:	2300      	movgt	r3, #0
 8000c94:	b2db      	uxtb	r3, r3
 8000c96:	f083 0301 	eor.w	r3, r3, #1
 8000c9a:	b2db      	uxtb	r3, r3
 8000c9c:	2b00      	cmp	r3, #0
 8000c9e:	d107      	bne.n	8000cb0 <KalmanFilter_C+0xd8>
 8000ca0:	687b      	ldr	r3, [r7, #4]
 8000ca2:	edd3 7a04 	vldr	s15, [r3, #16]
 8000ca6:	eef4 7a67 	vcmp.f32	s15, s15
 8000caa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000cae:	d701      	bvc.n	8000cb4 <KalmanFilter_C+0xdc>
        return KALMAN_OVERFLOW; // Overflow error
 8000cb0:	2302      	movs	r3, #2
 8000cb2:	e05f      	b.n	8000d74 <KalmanFilter_C+0x19c>
    }

	kState->x = kState->x + kState->k * (measurement - kState->x);
 8000cb4:	687b      	ldr	r3, [r7, #4]
 8000cb6:	ed93 7a02 	vldr	s14, [r3, #8]
 8000cba:	687b      	ldr	r3, [r7, #4]
 8000cbc:	edd3 6a04 	vldr	s13, [r3, #16]
 8000cc0:	687b      	ldr	r3, [r7, #4]
 8000cc2:	edd3 7a02 	vldr	s15, [r3, #8]
 8000cc6:	ed97 6a00 	vldr	s12, [r7]
 8000cca:	ee76 7a67 	vsub.f32	s15, s12, s15
 8000cce:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000cd2:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000cd6:	687b      	ldr	r3, [r7, #4]
 8000cd8:	edc3 7a02 	vstr	s15, [r3, #8]
    if (isinf(kState->x) || isnan(kState->x)) {
 8000cdc:	687b      	ldr	r3, [r7, #4]
 8000cde:	edd3 7a02 	vldr	s15, [r3, #8]
 8000ce2:	eef0 7ae7 	vabs.f32	s15, s15
 8000ce6:	ed9f 7a26 	vldr	s14, [pc, #152]	@ 8000d80 <KalmanFilter_C+0x1a8>
 8000cea:	eef4 7a47 	vcmp.f32	s15, s14
 8000cee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000cf2:	bfd4      	ite	le
 8000cf4:	2301      	movle	r3, #1
 8000cf6:	2300      	movgt	r3, #0
 8000cf8:	b2db      	uxtb	r3, r3
 8000cfa:	f083 0301 	eor.w	r3, r3, #1
 8000cfe:	b2db      	uxtb	r3, r3
 8000d00:	2b00      	cmp	r3, #0
 8000d02:	d107      	bne.n	8000d14 <KalmanFilter_C+0x13c>
 8000d04:	687b      	ldr	r3, [r7, #4]
 8000d06:	edd3 7a02 	vldr	s15, [r3, #8]
 8000d0a:	eef4 7a67 	vcmp.f32	s15, s15
 8000d0e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000d12:	d701      	bvc.n	8000d18 <KalmanFilter_C+0x140>
        return KALMAN_OVERFLOW; // Overflow error
 8000d14:	2302      	movs	r3, #2
 8000d16:	e02d      	b.n	8000d74 <KalmanFilter_C+0x19c>
    }

	kState->p = (1.0f-kState->k) * kState->p;
 8000d18:	687b      	ldr	r3, [r7, #4]
 8000d1a:	edd3 7a04 	vldr	s15, [r3, #16]
 8000d1e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8000d22:	ee37 7a67 	vsub.f32	s14, s14, s15
 8000d26:	687b      	ldr	r3, [r7, #4]
 8000d28:	edd3 7a03 	vldr	s15, [r3, #12]
 8000d2c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8000d30:	687b      	ldr	r3, [r7, #4]
 8000d32:	edc3 7a03 	vstr	s15, [r3, #12]
    if (isinf(kState->p) || isnan(kState->p)) {
 8000d36:	687b      	ldr	r3, [r7, #4]
 8000d38:	edd3 7a03 	vldr	s15, [r3, #12]
 8000d3c:	eef0 7ae7 	vabs.f32	s15, s15
 8000d40:	ed9f 7a0f 	vldr	s14, [pc, #60]	@ 8000d80 <KalmanFilter_C+0x1a8>
 8000d44:	eef4 7a47 	vcmp.f32	s15, s14
 8000d48:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000d4c:	bfd4      	ite	le
 8000d4e:	2301      	movle	r3, #1
 8000d50:	2300      	movgt	r3, #0
 8000d52:	b2db      	uxtb	r3, r3
 8000d54:	f083 0301 	eor.w	r3, r3, #1
 8000d58:	b2db      	uxtb	r3, r3
 8000d5a:	2b00      	cmp	r3, #0
 8000d5c:	d107      	bne.n	8000d6e <KalmanFilter_C+0x196>
 8000d5e:	687b      	ldr	r3, [r7, #4]
 8000d60:	edd3 7a03 	vldr	s15, [r3, #12]
 8000d64:	eef4 7a67 	vcmp.f32	s15, s15
 8000d68:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000d6c:	d701      	bvc.n	8000d72 <KalmanFilter_C+0x19a>
        return KALMAN_OVERFLOW; // Overflow error
 8000d6e:	2302      	movs	r3, #2
 8000d70:	e000      	b.n	8000d74 <KalmanFilter_C+0x19c>
    }

    return KALMAN_SUCCESS;
 8000d72:	2300      	movs	r3, #0
}
 8000d74:	4618      	mov	r0, r3
 8000d76:	370c      	adds	r7, #12
 8000d78:	46bd      	mov	sp, r7
 8000d7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d7e:	4770      	bx	lr
 8000d80:	7f7fffff 	.word	0x7f7fffff
 8000d84:	34000000 	.word	0x34000000

08000d88 <KalmanFilter_C_CMSIS>:
 *      Author: Neil
 */

#include "KalmanFilter_C_CMSIS.h"

int KalmanFilter_C_CMSIS(kalman_state* kState, float measurement) {
 8000d88:	b580      	push	{r7, lr}
 8000d8a:	b086      	sub	sp, #24
 8000d8c:	af00      	add	r7, sp, #0
 8000d8e:	6078      	str	r0, [r7, #4]
 8000d90:	ed87 0a00 	vstr	s0, [r7]
    float32_t temp1[1], temp2[1], one[1] = {1.0f};
 8000d94:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 8000d98:	60fb      	str	r3, [r7, #12]

    // P = P + Q
    arm_add_f32(&(kState->p), &(kState->q), &(kState->p), 1);
 8000d9a:	687b      	ldr	r3, [r7, #4]
 8000d9c:	f103 000c 	add.w	r0, r3, #12
 8000da0:	6879      	ldr	r1, [r7, #4]
 8000da2:	687b      	ldr	r3, [r7, #4]
 8000da4:	f103 020c 	add.w	r2, r3, #12
 8000da8:	2301      	movs	r3, #1
 8000daa:	f002 fbdd 	bl	8003568 <arm_add_f32>
    if (isinf(kState->p) || isnan(kState->p)) {
 8000dae:	687b      	ldr	r3, [r7, #4]
 8000db0:	edd3 7a03 	vldr	s15, [r3, #12]
 8000db4:	eef0 7ae7 	vabs.f32	s15, s15
 8000db8:	ed9f 7a67 	vldr	s14, [pc, #412]	@ 8000f58 <KalmanFilter_C_CMSIS+0x1d0>
 8000dbc:	eef4 7a47 	vcmp.f32	s15, s14
 8000dc0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000dc4:	bfd4      	ite	le
 8000dc6:	2301      	movle	r3, #1
 8000dc8:	2300      	movgt	r3, #0
 8000dca:	b2db      	uxtb	r3, r3
 8000dcc:	f083 0301 	eor.w	r3, r3, #1
 8000dd0:	b2db      	uxtb	r3, r3
 8000dd2:	2b00      	cmp	r3, #0
 8000dd4:	d107      	bne.n	8000de6 <KalmanFilter_C_CMSIS+0x5e>
 8000dd6:	687b      	ldr	r3, [r7, #4]
 8000dd8:	edd3 7a03 	vldr	s15, [r3, #12]
 8000ddc:	eef4 7a67 	vcmp.f32	s15, s15
 8000de0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000de4:	d701      	bvc.n	8000dea <KalmanFilter_C_CMSIS+0x62>
        return KALMAN_OVERFLOW; // Overflow error
 8000de6:	2302      	movs	r3, #2
 8000de8:	e0b2      	b.n	8000f50 <KalmanFilter_C_CMSIS+0x1c8>
    }
    if ((kState->p + kState->r) < FLT_EPSILON){
 8000dea:	687b      	ldr	r3, [r7, #4]
 8000dec:	ed93 7a03 	vldr	s14, [r3, #12]
 8000df0:	687b      	ldr	r3, [r7, #4]
 8000df2:	edd3 7a01 	vldr	s15, [r3, #4]
 8000df6:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000dfa:	ed9f 7a58 	vldr	s14, [pc, #352]	@ 8000f5c <KalmanFilter_C_CMSIS+0x1d4>
 8000dfe:	eef4 7ac7 	vcmpe.f32	s15, s14
 8000e02:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000e06:	d501      	bpl.n	8000e0c <KalmanFilter_C_CMSIS+0x84>
    	return KALMAN_DIV_BY_ZERO;
 8000e08:	2301      	movs	r3, #1
 8000e0a:	e0a1      	b.n	8000f50 <KalmanFilter_C_CMSIS+0x1c8>
    }

    // temp1 = P + R
    arm_add_f32(&(kState->p), &(kState->r), temp1, 1);
 8000e0c:	687b      	ldr	r3, [r7, #4]
 8000e0e:	f103 000c 	add.w	r0, r3, #12
 8000e12:	687b      	ldr	r3, [r7, #4]
 8000e14:	1d19      	adds	r1, r3, #4
 8000e16:	f107 0214 	add.w	r2, r7, #20
 8000e1a:	2301      	movs	r3, #1
 8000e1c:	f002 fba4 	bl	8003568 <arm_add_f32>

    // K = P / temp1
    kState->k = kState->p / temp1[0];
 8000e20:	687b      	ldr	r3, [r7, #4]
 8000e22:	edd3 6a03 	vldr	s13, [r3, #12]
 8000e26:	ed97 7a05 	vldr	s14, [r7, #20]
 8000e2a:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8000e2e:	687b      	ldr	r3, [r7, #4]
 8000e30:	edc3 7a04 	vstr	s15, [r3, #16]

    if (isinf(kState->k) || isnan(kState->k)) {
 8000e34:	687b      	ldr	r3, [r7, #4]
 8000e36:	edd3 7a04 	vldr	s15, [r3, #16]
 8000e3a:	eef0 7ae7 	vabs.f32	s15, s15
 8000e3e:	ed9f 7a46 	vldr	s14, [pc, #280]	@ 8000f58 <KalmanFilter_C_CMSIS+0x1d0>
 8000e42:	eef4 7a47 	vcmp.f32	s15, s14
 8000e46:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000e4a:	bfd4      	ite	le
 8000e4c:	2301      	movle	r3, #1
 8000e4e:	2300      	movgt	r3, #0
 8000e50:	b2db      	uxtb	r3, r3
 8000e52:	f083 0301 	eor.w	r3, r3, #1
 8000e56:	b2db      	uxtb	r3, r3
 8000e58:	2b00      	cmp	r3, #0
 8000e5a:	d107      	bne.n	8000e6c <KalmanFilter_C_CMSIS+0xe4>
 8000e5c:	687b      	ldr	r3, [r7, #4]
 8000e5e:	edd3 7a04 	vldr	s15, [r3, #16]
 8000e62:	eef4 7a67 	vcmp.f32	s15, s15
 8000e66:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000e6a:	d701      	bvc.n	8000e70 <KalmanFilter_C_CMSIS+0xe8>
        return KALMAN_OVERFLOW; // Overflow error
 8000e6c:	2302      	movs	r3, #2
 8000e6e:	e06f      	b.n	8000f50 <KalmanFilter_C_CMSIS+0x1c8>
    }

    // temp1 = measurement - X
    arm_sub_f32(&measurement, &(kState->x), temp1, 1);
 8000e70:	687b      	ldr	r3, [r7, #4]
 8000e72:	f103 0108 	add.w	r1, r3, #8
 8000e76:	f107 0214 	add.w	r2, r7, #20
 8000e7a:	4638      	mov	r0, r7
 8000e7c:	2301      	movs	r3, #1
 8000e7e:	f002 fabf 	bl	8003400 <arm_sub_f32>

    // temp2 = K * temp1
    arm_mult_f32(&(kState->k), temp1, temp2, 1);
 8000e82:	687b      	ldr	r3, [r7, #4]
 8000e84:	f103 0010 	add.w	r0, r3, #16
 8000e88:	f107 0210 	add.w	r2, r7, #16
 8000e8c:	f107 0114 	add.w	r1, r7, #20
 8000e90:	2301      	movs	r3, #1
 8000e92:	f002 fb0f 	bl	80034b4 <arm_mult_f32>

    // X = X + temp2
    arm_add_f32(&(kState->x), temp2, &(kState->x), 1);
 8000e96:	687b      	ldr	r3, [r7, #4]
 8000e98:	f103 0008 	add.w	r0, r3, #8
 8000e9c:	687b      	ldr	r3, [r7, #4]
 8000e9e:	f103 0208 	add.w	r2, r3, #8
 8000ea2:	f107 0110 	add.w	r1, r7, #16
 8000ea6:	2301      	movs	r3, #1
 8000ea8:	f002 fb5e 	bl	8003568 <arm_add_f32>
    if (isinf(kState->x) || isnan(kState->x)) {
 8000eac:	687b      	ldr	r3, [r7, #4]
 8000eae:	edd3 7a02 	vldr	s15, [r3, #8]
 8000eb2:	eef0 7ae7 	vabs.f32	s15, s15
 8000eb6:	ed9f 7a28 	vldr	s14, [pc, #160]	@ 8000f58 <KalmanFilter_C_CMSIS+0x1d0>
 8000eba:	eef4 7a47 	vcmp.f32	s15, s14
 8000ebe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000ec2:	bfd4      	ite	le
 8000ec4:	2301      	movle	r3, #1
 8000ec6:	2300      	movgt	r3, #0
 8000ec8:	b2db      	uxtb	r3, r3
 8000eca:	f083 0301 	eor.w	r3, r3, #1
 8000ece:	b2db      	uxtb	r3, r3
 8000ed0:	2b00      	cmp	r3, #0
 8000ed2:	d107      	bne.n	8000ee4 <KalmanFilter_C_CMSIS+0x15c>
 8000ed4:	687b      	ldr	r3, [r7, #4]
 8000ed6:	edd3 7a02 	vldr	s15, [r3, #8]
 8000eda:	eef4 7a67 	vcmp.f32	s15, s15
 8000ede:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000ee2:	d701      	bvc.n	8000ee8 <KalmanFilter_C_CMSIS+0x160>
        return KALMAN_OVERFLOW; // Overflow error
 8000ee4:	2302      	movs	r3, #2
 8000ee6:	e033      	b.n	8000f50 <KalmanFilter_C_CMSIS+0x1c8>
    }

    // temp1 = 1 - K
    arm_sub_f32(one, &(kState->k), temp1, 1);
 8000ee8:	687b      	ldr	r3, [r7, #4]
 8000eea:	f103 0110 	add.w	r1, r3, #16
 8000eee:	f107 0214 	add.w	r2, r7, #20
 8000ef2:	f107 000c 	add.w	r0, r7, #12
 8000ef6:	2301      	movs	r3, #1
 8000ef8:	f002 fa82 	bl	8003400 <arm_sub_f32>

    // P = temp1 * P
    arm_mult_f32(temp1, &(kState->p), &(kState->p), 1);
 8000efc:	687b      	ldr	r3, [r7, #4]
 8000efe:	f103 010c 	add.w	r1, r3, #12
 8000f02:	687b      	ldr	r3, [r7, #4]
 8000f04:	f103 020c 	add.w	r2, r3, #12
 8000f08:	f107 0014 	add.w	r0, r7, #20
 8000f0c:	2301      	movs	r3, #1
 8000f0e:	f002 fad1 	bl	80034b4 <arm_mult_f32>

    if (isinf(kState->p) || isnan(kState->p)) {
 8000f12:	687b      	ldr	r3, [r7, #4]
 8000f14:	edd3 7a03 	vldr	s15, [r3, #12]
 8000f18:	eef0 7ae7 	vabs.f32	s15, s15
 8000f1c:	ed9f 7a0e 	vldr	s14, [pc, #56]	@ 8000f58 <KalmanFilter_C_CMSIS+0x1d0>
 8000f20:	eef4 7a47 	vcmp.f32	s15, s14
 8000f24:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000f28:	bfd4      	ite	le
 8000f2a:	2301      	movle	r3, #1
 8000f2c:	2300      	movgt	r3, #0
 8000f2e:	b2db      	uxtb	r3, r3
 8000f30:	f083 0301 	eor.w	r3, r3, #1
 8000f34:	b2db      	uxtb	r3, r3
 8000f36:	2b00      	cmp	r3, #0
 8000f38:	d107      	bne.n	8000f4a <KalmanFilter_C_CMSIS+0x1c2>
 8000f3a:	687b      	ldr	r3, [r7, #4]
 8000f3c:	edd3 7a03 	vldr	s15, [r3, #12]
 8000f40:	eef4 7a67 	vcmp.f32	s15, s15
 8000f44:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000f48:	d701      	bvc.n	8000f4e <KalmanFilter_C_CMSIS+0x1c6>
        return KALMAN_OVERFLOW; // Overflow error
 8000f4a:	2302      	movs	r3, #2
 8000f4c:	e000      	b.n	8000f50 <KalmanFilter_C_CMSIS+0x1c8>
    }

    return KALMAN_SUCCESS;
 8000f4e:	2300      	movs	r3, #0
}
 8000f50:	4618      	mov	r0, r3
 8000f52:	3718      	adds	r7, #24
 8000f54:	46bd      	mov	sp, r7
 8000f56:	bd80      	pop	{r7, pc}
 8000f58:	7f7fffff 	.word	0x7f7fffff
 8000f5c:	34000000 	.word	0x34000000

08000f60 <main>:

/**
 * @brief  The application entry point.
 * @retval int
 */
int main(void) {
 8000f60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000f64:	f2ad 5d54 	subw	sp, sp, #1364	@ 0x554
 8000f68:	af02      	add	r7, sp, #8
 8000f6a:	466b      	mov	r3, sp
 8000f6c:	461e      	mov	r6, r3
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000f6e:	f000 fb70 	bl	8001652 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000f72:	f000 f9a9 	bl	80012c8 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000f76:	f000 f9f9 	bl	800136c <MX_GPIO_Init>
  /* USER CODE BEGIN 2 */
  // KalmanStruct zero_div_filter = {-1.0f, 1.0f, 0.0f, 0.0f, 0.0f};
  //  KalmanStruct overflow_filter = {9e38f, 9e38f, 9e38f, 9e38f, 9e38f};
  float TEST_ARRAY[] = {
 8000f7a:	f507 63a9 	add.w	r3, r7, #1352	@ 0x548
 8000f7e:	f5a3 73e6 	sub.w	r3, r3, #460	@ 0x1cc
 8000f82:	4acd      	ldr	r2, [pc, #820]	@ (80012b8 <main+0x358>)
 8000f84:	4618      	mov	r0, r3
 8000f86:	4611      	mov	r1, r2
 8000f88:	f44f 73ca 	mov.w	r3, #404	@ 0x194
 8000f8c:	461a      	mov	r2, r3
 8000f8e:	f003 f898 	bl	80040c2 <memcpy>
      10.3535284606, 10.2437410625, 10.3851531317, 9.90784804928, 9.98208344925, 9.52778805729,
      9.69323876912, 9.92987312087, 9.73938925207, 9.60543743477, 9.79600805462, 10.4950988486,
      10.2814361401, 9.7985283333,  9.6287888922,  10.4491538991, 9.5799256668};
  
  // Initialize filter with more conservative values
  kalman_state kState = {0.1f, 0.1f, 5.0f, 0.1f, 0.0f};  // Higher process and measurement noise
 8000f92:	f507 63a9 	add.w	r3, r7, #1352	@ 0x548
 8000f96:	f5a3 73f0 	sub.w	r3, r3, #480	@ 0x1e0
 8000f9a:	4ac8      	ldr	r2, [pc, #800]	@ (80012bc <main+0x35c>)
 8000f9c:	461c      	mov	r4, r3
 8000f9e:	4615      	mov	r5, r2
 8000fa0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000fa2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000fa4:	682b      	ldr	r3, [r5, #0]
 8000fa6:	6023      	str	r3, [r4, #0]
  kalman_state CKState= {0.1f, 0.1f, 5.0f, 0.1f, 0.0f};  // Higher process and measurement noise
 8000fa8:	f507 63a9 	add.w	r3, r7, #1352	@ 0x548
 8000fac:	f5a3 73fa 	sub.w	r3, r3, #500	@ 0x1f4
 8000fb0:	4ac2      	ldr	r2, [pc, #776]	@ (80012bc <main+0x35c>)
 8000fb2:	461c      	mov	r4, r3
 8000fb4:	4615      	mov	r5, r2
 8000fb6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000fb8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000fba:	682b      	ldr	r3, [r5, #0]
 8000fbc:	6023      	str	r3, [r4, #0]
  kalman_state CMSISKState= {1.0f, 1.0f, TEST_ARRAY[0], 10.0f, 0.0f};  // Higher process and measurement noise
 8000fbe:	f507 63a9 	add.w	r3, r7, #1352	@ 0x548
 8000fc2:	f5a3 7302 	sub.w	r3, r3, #520	@ 0x208
 8000fc6:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8000fca:	601a      	str	r2, [r3, #0]
 8000fcc:	f507 63a9 	add.w	r3, r7, #1352	@ 0x548
 8000fd0:	f5a3 7302 	sub.w	r3, r3, #520	@ 0x208
 8000fd4:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8000fd8:	605a      	str	r2, [r3, #4]
 8000fda:	f507 63a9 	add.w	r3, r7, #1352	@ 0x548
 8000fde:	f5a3 73e6 	sub.w	r3, r3, #460	@ 0x1cc
 8000fe2:	681a      	ldr	r2, [r3, #0]
 8000fe4:	f507 63a9 	add.w	r3, r7, #1352	@ 0x548
 8000fe8:	f5a3 7302 	sub.w	r3, r3, #520	@ 0x208
 8000fec:	609a      	str	r2, [r3, #8]
 8000fee:	f507 63a9 	add.w	r3, r7, #1352	@ 0x548
 8000ff2:	f5a3 7302 	sub.w	r3, r3, #520	@ 0x208
 8000ff6:	4ab2      	ldr	r2, [pc, #712]	@ (80012c0 <main+0x360>)
 8000ff8:	60da      	str	r2, [r3, #12]
 8000ffa:	f507 63a9 	add.w	r3, r7, #1352	@ 0x548
 8000ffe:	f5a3 7302 	sub.w	r3, r3, #520	@ 0x208
 8001002:	f04f 0200 	mov.w	r2, #0
 8001006:	611a      	str	r2, [r3, #16]

  int measurementCount = 101;
 8001008:	2365      	movs	r3, #101	@ 0x65
 800100a:	f8c7 3528 	str.w	r3, [r7, #1320]	@ 0x528
  float result[101];
  float difference[101];

  float mean, stdDev;
  float correlation[2 * measurementCount - 1];
 800100e:	f8d7 3528 	ldr.w	r3, [r7, #1320]	@ 0x528
 8001012:	005b      	lsls	r3, r3, #1
 8001014:	1e59      	subs	r1, r3, #1
 8001016:	1e4b      	subs	r3, r1, #1
 8001018:	f8c7 3524 	str.w	r3, [r7, #1316]	@ 0x524
 800101c:	460a      	mov	r2, r1
 800101e:	2300      	movs	r3, #0
 8001020:	60ba      	str	r2, [r7, #8]
 8001022:	60fb      	str	r3, [r7, #12]
 8001024:	f04f 0200 	mov.w	r2, #0
 8001028:	f04f 0300 	mov.w	r3, #0
 800102c:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 8001030:	4628      	mov	r0, r5
 8001032:	0143      	lsls	r3, r0, #5
 8001034:	4620      	mov	r0, r4
 8001036:	ea43 63d0 	orr.w	r3, r3, r0, lsr #27
 800103a:	4620      	mov	r0, r4
 800103c:	0142      	lsls	r2, r0, #5
 800103e:	460a      	mov	r2, r1
 8001040:	2300      	movs	r3, #0
 8001042:	603a      	str	r2, [r7, #0]
 8001044:	607b      	str	r3, [r7, #4]
 8001046:	f04f 0200 	mov.w	r2, #0
 800104a:	f04f 0300 	mov.w	r3, #0
 800104e:	e9d7 4500 	ldrd	r4, r5, [r7]
 8001052:	4628      	mov	r0, r5
 8001054:	0143      	lsls	r3, r0, #5
 8001056:	4620      	mov	r0, r4
 8001058:	ea43 63d0 	orr.w	r3, r3, r0, lsr #27
 800105c:	4620      	mov	r0, r4
 800105e:	0142      	lsls	r2, r0, #5
 8001060:	460b      	mov	r3, r1
 8001062:	009b      	lsls	r3, r3, #2
 8001064:	3307      	adds	r3, #7
 8001066:	08db      	lsrs	r3, r3, #3
 8001068:	00db      	lsls	r3, r3, #3
 800106a:	ebad 0d03 	sub.w	sp, sp, r3
 800106e:	ab02      	add	r3, sp, #8
 8001070:	3303      	adds	r3, #3
 8001072:	089b      	lsrs	r3, r3, #2
 8001074:	009b      	lsls	r3, r3, #2
 8001076:	f8c7 3520 	str.w	r3, [r7, #1312]	@ 0x520
  float convolution[2 * measurementCount - 1];
 800107a:	f8d7 3528 	ldr.w	r3, [r7, #1320]	@ 0x528
 800107e:	005b      	lsls	r3, r3, #1
 8001080:	1e59      	subs	r1, r3, #1
 8001082:	1e4b      	subs	r3, r1, #1
 8001084:	f8c7 351c 	str.w	r3, [r7, #1308]	@ 0x51c
 8001088:	460a      	mov	r2, r1
 800108a:	2300      	movs	r3, #0
 800108c:	4692      	mov	sl, r2
 800108e:	469b      	mov	fp, r3
 8001090:	f04f 0200 	mov.w	r2, #0
 8001094:	f04f 0300 	mov.w	r3, #0
 8001098:	ea4f 134b 	mov.w	r3, fp, lsl #5
 800109c:	ea43 63da 	orr.w	r3, r3, sl, lsr #27
 80010a0:	ea4f 124a 	mov.w	r2, sl, lsl #5
 80010a4:	460a      	mov	r2, r1
 80010a6:	2300      	movs	r3, #0
 80010a8:	4690      	mov	r8, r2
 80010aa:	4699      	mov	r9, r3
 80010ac:	f04f 0200 	mov.w	r2, #0
 80010b0:	f04f 0300 	mov.w	r3, #0
 80010b4:	ea4f 1349 	mov.w	r3, r9, lsl #5
 80010b8:	ea43 63d8 	orr.w	r3, r3, r8, lsr #27
 80010bc:	ea4f 1248 	mov.w	r2, r8, lsl #5
 80010c0:	460b      	mov	r3, r1
 80010c2:	009b      	lsls	r3, r3, #2
 80010c4:	3307      	adds	r3, #7
 80010c6:	08db      	lsrs	r3, r3, #3
 80010c8:	00db      	lsls	r3, r3, #3
 80010ca:	ebad 0d03 	sub.w	sp, sp, r3
 80010ce:	ab02      	add	r3, sp, #8
 80010d0:	3303      	adds	r3, #3
 80010d2:	089b      	lsrs	r3, r3, #2
 80010d4:	009b      	lsls	r3, r3, #2
 80010d6:	f8c7 3518 	str.w	r3, [r7, #1304]	@ 0x518
  while (1) {
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
    uint32_t startTime, endTime;
    int asmNbCycles = 0, CNbCycles = 0, CMSISNbCycles = 0;
 80010da:	2300      	movs	r3, #0
 80010dc:	f8c7 3544 	str.w	r3, [r7, #1348]	@ 0x544
 80010e0:	2300      	movs	r3, #0
 80010e2:	f8c7 3540 	str.w	r3, [r7, #1344]	@ 0x540
 80010e6:	2300      	movs	r3, #0
 80010e8:	f8c7 353c 	str.w	r3, [r7, #1340]	@ 0x53c
    int errCode;

    // Asm Implementation
    for (int i = 0; i < 5; i++) {
 80010ec:	2300      	movs	r3, #0
 80010ee:	f8c7 3534 	str.w	r3, [r7, #1332]	@ 0x534
 80010f2:	e03a      	b.n	800116a <main+0x20a>
  	  startTime = DWT->CYCCNT;  // Start Timer
 80010f4:	4b73      	ldr	r3, [pc, #460]	@ (80012c4 <main+0x364>)
 80010f6:	685b      	ldr	r3, [r3, #4]
 80010f8:	f8c7 3514 	str.w	r3, [r7, #1300]	@ 0x514
      errCode = KalmanFilter_C(&CKState, (float) i);
 80010fc:	f8d7 3534 	ldr.w	r3, [r7, #1332]	@ 0x534
 8001100:	ee07 3a90 	vmov	s15, r3
 8001104:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001108:	f507 7355 	add.w	r3, r7, #852	@ 0x354
 800110c:	eeb0 0a67 	vmov.f32	s0, s15
 8001110:	4618      	mov	r0, r3
 8001112:	f7ff fd61 	bl	8000bd8 <KalmanFilter_C>
 8001116:	f8c7 0538 	str.w	r0, [r7, #1336]	@ 0x538

//      errCode = KalmanFilter(&kState, (float) i);
      endTime = DWT->CYCCNT; // End Timer
 800111a:	4b6a      	ldr	r3, [pc, #424]	@ (80012c4 <main+0x364>)
 800111c:	685b      	ldr	r3, [r3, #4]
 800111e:	f8c7 3510 	str.w	r3, [r7, #1296]	@ 0x510
      asmNbCycles += (endTime - startTime);
 8001122:	f8d7 2510 	ldr.w	r2, [r7, #1296]	@ 0x510
 8001126:	f8d7 3514 	ldr.w	r3, [r7, #1300]	@ 0x514
 800112a:	1ad2      	subs	r2, r2, r3
 800112c:	f8d7 3544 	ldr.w	r3, [r7, #1348]	@ 0x544
 8001130:	4413      	add	r3, r2
 8001132:	f8c7 3544 	str.w	r3, [r7, #1348]	@ 0x544
      if (errCode != 0)
 8001136:	f8d7 3538 	ldr.w	r3, [r7, #1336]	@ 0x538
 800113a:	2b00      	cmp	r3, #0
 800113c:	d002      	beq.n	8001144 <main+0x1e4>
        return errCode;
 800113e:	f8d7 3538 	ldr.w	r3, [r7, #1336]	@ 0x538
 8001142:	e0b2      	b.n	80012aa <main+0x34a>
      // result array (output array) is completed here. No need to populate it again later. 
      result[i] = CKState.x;
 8001144:	f507 63a9 	add.w	r3, r7, #1352	@ 0x548
 8001148:	f5a3 73fa 	sub.w	r3, r3, #500	@ 0x1f4
 800114c:	689a      	ldr	r2, [r3, #8]
 800114e:	f507 63a9 	add.w	r3, r7, #1352	@ 0x548
 8001152:	f5a3 7167 	sub.w	r1, r3, #924	@ 0x39c
 8001156:	f8d7 3534 	ldr.w	r3, [r7, #1332]	@ 0x534
 800115a:	009b      	lsls	r3, r3, #2
 800115c:	440b      	add	r3, r1
 800115e:	601a      	str	r2, [r3, #0]
    for (int i = 0; i < 5; i++) {
 8001160:	f8d7 3534 	ldr.w	r3, [r7, #1332]	@ 0x534
 8001164:	3301      	adds	r3, #1
 8001166:	f8c7 3534 	str.w	r3, [r7, #1332]	@ 0x534
 800116a:	f8d7 3534 	ldr.w	r3, [r7, #1332]	@ 0x534
 800116e:	2b04      	cmp	r3, #4
 8001170:	ddc0      	ble.n	80010f4 <main+0x194>
    }

    // C Implementation
    for (int i = 0; i < measurementCount; i++) {
 8001172:	2300      	movs	r3, #0
 8001174:	f8c7 3530 	str.w	r3, [r7, #1328]	@ 0x530
 8001178:	e01d      	b.n	80011b6 <main+0x256>
      startTime = DWT->CYCCNT;
 800117a:	4b52      	ldr	r3, [pc, #328]	@ (80012c4 <main+0x364>)
 800117c:	685b      	ldr	r3, [r3, #4]
 800117e:	f8c7 3514 	str.w	r3, [r7, #1300]	@ 0x514
      endTime = DWT->CYCCNT;
 8001182:	4b50      	ldr	r3, [pc, #320]	@ (80012c4 <main+0x364>)
 8001184:	685b      	ldr	r3, [r3, #4]
 8001186:	f8c7 3510 	str.w	r3, [r7, #1296]	@ 0x510
      CNbCycles += (endTime - startTime);
 800118a:	f8d7 2510 	ldr.w	r2, [r7, #1296]	@ 0x510
 800118e:	f8d7 3514 	ldr.w	r3, [r7, #1300]	@ 0x514
 8001192:	1ad2      	subs	r2, r2, r3
 8001194:	f8d7 3540 	ldr.w	r3, [r7, #1344]	@ 0x540
 8001198:	4413      	add	r3, r2
 800119a:	f8c7 3540 	str.w	r3, [r7, #1344]	@ 0x540
      if (errCode != 0)
 800119e:	f8d7 3538 	ldr.w	r3, [r7, #1336]	@ 0x538
 80011a2:	2b00      	cmp	r3, #0
 80011a4:	d002      	beq.n	80011ac <main+0x24c>
        return errCode;
 80011a6:	f8d7 3538 	ldr.w	r3, [r7, #1336]	@ 0x538
 80011aa:	e07e      	b.n	80012aa <main+0x34a>
    for (int i = 0; i < measurementCount; i++) {
 80011ac:	f8d7 3530 	ldr.w	r3, [r7, #1328]	@ 0x530
 80011b0:	3301      	adds	r3, #1
 80011b2:	f8c7 3530 	str.w	r3, [r7, #1328]	@ 0x530
 80011b6:	f8d7 2530 	ldr.w	r2, [r7, #1328]	@ 0x530
 80011ba:	f8d7 3528 	ldr.w	r3, [r7, #1320]	@ 0x528
 80011be:	429a      	cmp	r2, r3
 80011c0:	dbdb      	blt.n	800117a <main+0x21a>
    }

    // CMSIS Implementation
    for (int i = 0; i < measurementCount; i++) {
 80011c2:	2300      	movs	r3, #0
 80011c4:	f8c7 352c 	str.w	r3, [r7, #1324]	@ 0x52c
 80011c8:	e030      	b.n	800122c <main+0x2cc>
      startTime = DWT->CYCCNT;
 80011ca:	4b3e      	ldr	r3, [pc, #248]	@ (80012c4 <main+0x364>)
 80011cc:	685b      	ldr	r3, [r3, #4]
 80011ce:	f8c7 3514 	str.w	r3, [r7, #1300]	@ 0x514
      errCode = KalmanFilter_C_CMSIS(&CMSISKState, TEST_ARRAY[i]);
 80011d2:	f507 63a9 	add.w	r3, r7, #1352	@ 0x548
 80011d6:	f5a3 72e6 	sub.w	r2, r3, #460	@ 0x1cc
 80011da:	f8d7 352c 	ldr.w	r3, [r7, #1324]	@ 0x52c
 80011de:	009b      	lsls	r3, r3, #2
 80011e0:	4413      	add	r3, r2
 80011e2:	edd3 7a00 	vldr	s15, [r3]
 80011e6:	f507 7350 	add.w	r3, r7, #832	@ 0x340
 80011ea:	eeb0 0a67 	vmov.f32	s0, s15
 80011ee:	4618      	mov	r0, r3
 80011f0:	f7ff fdca 	bl	8000d88 <KalmanFilter_C_CMSIS>
 80011f4:	f8c7 0538 	str.w	r0, [r7, #1336]	@ 0x538
      endTime = DWT->CYCCNT;
 80011f8:	4b32      	ldr	r3, [pc, #200]	@ (80012c4 <main+0x364>)
 80011fa:	685b      	ldr	r3, [r3, #4]
 80011fc:	f8c7 3510 	str.w	r3, [r7, #1296]	@ 0x510
      CMSISNbCycles += (endTime - startTime);
 8001200:	f8d7 2510 	ldr.w	r2, [r7, #1296]	@ 0x510
 8001204:	f8d7 3514 	ldr.w	r3, [r7, #1300]	@ 0x514
 8001208:	1ad2      	subs	r2, r2, r3
 800120a:	f8d7 353c 	ldr.w	r3, [r7, #1340]	@ 0x53c
 800120e:	4413      	add	r3, r2
 8001210:	f8c7 353c 	str.w	r3, [r7, #1340]	@ 0x53c
      if (errCode != 0)
 8001214:	f8d7 3538 	ldr.w	r3, [r7, #1336]	@ 0x538
 8001218:	2b00      	cmp	r3, #0
 800121a:	d002      	beq.n	8001222 <main+0x2c2>
        return errCode;
 800121c:	f8d7 3538 	ldr.w	r3, [r7, #1336]	@ 0x538
 8001220:	e043      	b.n	80012aa <main+0x34a>
    for (int i = 0; i < measurementCount; i++) {
 8001222:	f8d7 352c 	ldr.w	r3, [r7, #1324]	@ 0x52c
 8001226:	3301      	adds	r3, #1
 8001228:	f8c7 352c 	str.w	r3, [r7, #1324]	@ 0x52c
 800122c:	f8d7 252c 	ldr.w	r2, [r7, #1324]	@ 0x52c
 8001230:	f8d7 3528 	ldr.w	r3, [r7, #1320]	@ 0x528
 8001234:	429a      	cmp	r2, r3
 8001236:	dbc8      	blt.n	80011ca <main+0x26a>
    } 


    // Difference
    arm_sub_f32(TEST_ARRAY, result, difference, measurementCount);
 8001238:	f8d7 3528 	ldr.w	r3, [r7, #1320]	@ 0x528
 800123c:	f107 0218 	add.w	r2, r7, #24
 8001240:	f507 71d6 	add.w	r1, r7, #428	@ 0x1ac
 8001244:	f507 705f 	add.w	r0, r7, #892	@ 0x37c
 8001248:	f002 f8da 	bl	8003400 <arm_sub_f32>

    // Mean and Standard Deviation
    arm_mean_f32(difference, measurementCount, &mean);
 800124c:	f8d7 1528 	ldr.w	r1, [r7, #1320]	@ 0x528
 8001250:	f107 0214 	add.w	r2, r7, #20
 8001254:	f107 0318 	add.w	r3, r7, #24
 8001258:	4618      	mov	r0, r3
 800125a:	f001 fb43 	bl	80028e4 <arm_mean_f32>
    arm_std_f32(difference, measurementCount, &stdDev);
 800125e:	f8d7 1528 	ldr.w	r1, [r7, #1320]	@ 0x528
 8001262:	f107 0210 	add.w	r2, r7, #16
 8001266:	f107 0318 	add.w	r3, r7, #24
 800126a:	4618      	mov	r0, r3
 800126c:	f001 fab0 	bl	80027d0 <arm_std_f32>

    // Correlation
    arm_correlate_f32(TEST_ARRAY, measurementCount, result, measurementCount, correlation);
 8001270:	f8d7 1528 	ldr.w	r1, [r7, #1320]	@ 0x528
 8001274:	f8d7 4528 	ldr.w	r4, [r7, #1320]	@ 0x528
 8001278:	f507 72d6 	add.w	r2, r7, #428	@ 0x1ac
 800127c:	f507 705f 	add.w	r0, r7, #892	@ 0x37c
 8001280:	f8d7 3520 	ldr.w	r3, [r7, #1312]	@ 0x520
 8001284:	9300      	str	r3, [sp, #0]
 8001286:	4623      	mov	r3, r4
 8001288:	f001 fb6a 	bl	8002960 <arm_correlate_f32>

    // Convolution
    arm_conv_f32(TEST_ARRAY, measurementCount, result, measurementCount, convolution);
 800128c:	f8d7 1528 	ldr.w	r1, [r7, #1320]	@ 0x528
 8001290:	f8d7 4528 	ldr.w	r4, [r7, #1320]	@ 0x528
 8001294:	f507 72d6 	add.w	r2, r7, #428	@ 0x1ac
 8001298:	f507 705f 	add.w	r0, r7, #892	@ 0x37c
 800129c:	f8d7 3518 	ldr.w	r3, [r7, #1304]	@ 0x518
 80012a0:	9300      	str	r3, [sp, #0]
 80012a2:	4623      	mov	r3, r4
 80012a4:	f001 fe12 	bl	8002ecc <arm_conv_f32>
  while (1) {
 80012a8:	e717      	b.n	80010da <main+0x17a>
 80012aa:	46b5      	mov	sp, r6
  }

  /* USER CODE END 3 */
}
 80012ac:	4618      	mov	r0, r3
 80012ae:	f207 574c 	addw	r7, r7, #1356	@ 0x54c
 80012b2:	46bd      	mov	sp, r7
 80012b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80012b8:	08005f78 	.word	0x08005f78
 80012bc:	0800610c 	.word	0x0800610c
 80012c0:	41200000 	.word	0x41200000
 80012c4:	e0001000 	.word	0xe0001000

080012c8 <SystemClock_Config>:

/**
 * @brief System Clock Configuration
 * @retval None
 */
void SystemClock_Config(void) {
 80012c8:	b580      	push	{r7, lr}
 80012ca:	b096      	sub	sp, #88	@ 0x58
 80012cc:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80012ce:	f107 0314 	add.w	r3, r7, #20
 80012d2:	2244      	movs	r2, #68	@ 0x44
 80012d4:	2100      	movs	r1, #0
 80012d6:	4618      	mov	r0, r3
 80012d8:	f002 feba 	bl	8004050 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80012dc:	463b      	mov	r3, r7
 80012de:	2200      	movs	r2, #0
 80012e0:	601a      	str	r2, [r3, #0]
 80012e2:	605a      	str	r2, [r3, #4]
 80012e4:	609a      	str	r2, [r3, #8]
 80012e6:	60da      	str	r2, [r3, #12]
 80012e8:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
   */
  if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1_BOOST) != HAL_OK) {
 80012ea:	2000      	movs	r0, #0
 80012ec:	f000 fb2c 	bl	8001948 <HAL_PWREx_ControlVoltageScaling>
 80012f0:	4603      	mov	r3, r0
 80012f2:	2b00      	cmp	r3, #0
 80012f4:	d001      	beq.n	80012fa <SystemClock_Config+0x32>
    Error_Handler();
 80012f6:	f000 f851 	bl	800139c <Error_Handler>
  }

  /** Initializes the RCC Oscillators according to the specified parameters
   * in the RCC_OscInitTypeDef structure.
   */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_MSI;
 80012fa:	2310      	movs	r3, #16
 80012fc:	617b      	str	r3, [r7, #20]
  RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 80012fe:	2301      	movs	r3, #1
 8001300:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.MSICalibrationValue = 0;
 8001302:	2300      	movs	r3, #0
 8001304:	633b      	str	r3, [r7, #48]	@ 0x30
  RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 8001306:	2360      	movs	r3, #96	@ 0x60
 8001308:	637b      	str	r3, [r7, #52]	@ 0x34
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800130a:	2302      	movs	r3, #2
 800130c:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 800130e:	2301      	movs	r3, #1
 8001310:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLM = 1;
 8001312:	2301      	movs	r3, #1
 8001314:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLN = 60;
 8001316:	233c      	movs	r3, #60	@ 0x3c
 8001318:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800131a:	2302      	movs	r3, #2
 800131c:	64fb      	str	r3, [r7, #76]	@ 0x4c
  RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 800131e:	2302      	movs	r3, #2
 8001320:	653b      	str	r3, [r7, #80]	@ 0x50
  RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 8001322:	2302      	movs	r3, #2
 8001324:	657b      	str	r3, [r7, #84]	@ 0x54
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 8001326:	f107 0314 	add.w	r3, r7, #20
 800132a:	4618      	mov	r0, r3
 800132c:	f000 fbb0 	bl	8001a90 <HAL_RCC_OscConfig>
 8001330:	4603      	mov	r3, r0
 8001332:	2b00      	cmp	r3, #0
 8001334:	d001      	beq.n	800133a <SystemClock_Config+0x72>
    Error_Handler();
 8001336:	f000 f831 	bl	800139c <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
   */
  RCC_ClkInitStruct.ClockType =
 800133a:	230f      	movs	r3, #15
 800133c:	603b      	str	r3, [r7, #0]
      RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800133e:	2303      	movs	r3, #3
 8001340:	607b      	str	r3, [r7, #4]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001342:	2300      	movs	r3, #0
 8001344:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8001346:	2300      	movs	r3, #0
 8001348:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 800134a:	2300      	movs	r3, #0
 800134c:	613b      	str	r3, [r7, #16]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK) {
 800134e:	463b      	mov	r3, r7
 8001350:	2105      	movs	r1, #5
 8001352:	4618      	mov	r0, r3
 8001354:	f000 ffb6 	bl	80022c4 <HAL_RCC_ClockConfig>
 8001358:	4603      	mov	r3, r0
 800135a:	2b00      	cmp	r3, #0
 800135c:	d001      	beq.n	8001362 <SystemClock_Config+0x9a>
    Error_Handler();
 800135e:	f000 f81d 	bl	800139c <Error_Handler>
  }
}
 8001362:	bf00      	nop
 8001364:	3758      	adds	r7, #88	@ 0x58
 8001366:	46bd      	mov	sp, r7
 8001368:	bd80      	pop	{r7, pc}
	...

0800136c <MX_GPIO_Init>:
/**
 * @brief GPIO Initialization Function
 * @param None
 * @retval None
 */
static void MX_GPIO_Init(void) {
 800136c:	b480      	push	{r7}
 800136e:	b083      	sub	sp, #12
 8001370:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MX_GPIO_Init_1 */
  /* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001372:	4b09      	ldr	r3, [pc, #36]	@ (8001398 <MX_GPIO_Init+0x2c>)
 8001374:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001376:	4a08      	ldr	r2, [pc, #32]	@ (8001398 <MX_GPIO_Init+0x2c>)
 8001378:	f043 0302 	orr.w	r3, r3, #2
 800137c:	64d3      	str	r3, [r2, #76]	@ 0x4c
 800137e:	4b06      	ldr	r3, [pc, #24]	@ (8001398 <MX_GPIO_Init+0x2c>)
 8001380:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001382:	f003 0302 	and.w	r3, r3, #2
 8001386:	607b      	str	r3, [r7, #4]
 8001388:	687b      	ldr	r3, [r7, #4]

  /* USER CODE BEGIN MX_GPIO_Init_2 */
  /* USER CODE END MX_GPIO_Init_2 */
}
 800138a:	bf00      	nop
 800138c:	370c      	adds	r7, #12
 800138e:	46bd      	mov	sp, r7
 8001390:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001394:	4770      	bx	lr
 8001396:	bf00      	nop
 8001398:	40021000 	.word	0x40021000

0800139c <Error_Handler>:

/**
 * @brief  This function is executed in case of error occurrence.
 * @retval None
 */
void Error_Handler(void) {
 800139c:	b480      	push	{r7}
 800139e:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80013a0:	b672      	cpsid	i
}
 80013a2:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1) {
 80013a4:	bf00      	nop
 80013a6:	e7fd      	b.n	80013a4 <Error_Handler+0x8>

080013a8 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80013a8:	b480      	push	{r7}
 80013aa:	b083      	sub	sp, #12
 80013ac:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80013ae:	4b0f      	ldr	r3, [pc, #60]	@ (80013ec <HAL_MspInit+0x44>)
 80013b0:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80013b2:	4a0e      	ldr	r2, [pc, #56]	@ (80013ec <HAL_MspInit+0x44>)
 80013b4:	f043 0301 	orr.w	r3, r3, #1
 80013b8:	6613      	str	r3, [r2, #96]	@ 0x60
 80013ba:	4b0c      	ldr	r3, [pc, #48]	@ (80013ec <HAL_MspInit+0x44>)
 80013bc:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80013be:	f003 0301 	and.w	r3, r3, #1
 80013c2:	607b      	str	r3, [r7, #4]
 80013c4:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 80013c6:	4b09      	ldr	r3, [pc, #36]	@ (80013ec <HAL_MspInit+0x44>)
 80013c8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80013ca:	4a08      	ldr	r2, [pc, #32]	@ (80013ec <HAL_MspInit+0x44>)
 80013cc:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80013d0:	6593      	str	r3, [r2, #88]	@ 0x58
 80013d2:	4b06      	ldr	r3, [pc, #24]	@ (80013ec <HAL_MspInit+0x44>)
 80013d4:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80013d6:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80013da:	603b      	str	r3, [r7, #0]
 80013dc:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80013de:	bf00      	nop
 80013e0:	370c      	adds	r7, #12
 80013e2:	46bd      	mov	sp, r7
 80013e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013e8:	4770      	bx	lr
 80013ea:	bf00      	nop
 80013ec:	40021000 	.word	0x40021000

080013f0 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80013f0:	b480      	push	{r7}
 80013f2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 80013f4:	bf00      	nop
 80013f6:	e7fd      	b.n	80013f4 <NMI_Handler+0x4>

080013f8 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80013f8:	b480      	push	{r7}
 80013fa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80013fc:	bf00      	nop
 80013fe:	e7fd      	b.n	80013fc <HardFault_Handler+0x4>

08001400 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001400:	b480      	push	{r7}
 8001402:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001404:	bf00      	nop
 8001406:	e7fd      	b.n	8001404 <MemManage_Handler+0x4>

08001408 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001408:	b480      	push	{r7}
 800140a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800140c:	bf00      	nop
 800140e:	e7fd      	b.n	800140c <BusFault_Handler+0x4>

08001410 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001410:	b480      	push	{r7}
 8001412:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001414:	bf00      	nop
 8001416:	e7fd      	b.n	8001414 <UsageFault_Handler+0x4>

08001418 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001418:	b480      	push	{r7}
 800141a:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 800141c:	bf00      	nop
 800141e:	46bd      	mov	sp, r7
 8001420:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001424:	4770      	bx	lr

08001426 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001426:	b480      	push	{r7}
 8001428:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 800142a:	bf00      	nop
 800142c:	46bd      	mov	sp, r7
 800142e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001432:	4770      	bx	lr

08001434 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001434:	b480      	push	{r7}
 8001436:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001438:	bf00      	nop
 800143a:	46bd      	mov	sp, r7
 800143c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001440:	4770      	bx	lr

08001442 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001442:	b580      	push	{r7, lr}
 8001444:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8001446:	f000 f959 	bl	80016fc <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 800144a:	bf00      	nop
 800144c:	bd80      	pop	{r7, pc}

0800144e <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 800144e:	b480      	push	{r7}
 8001450:	af00      	add	r7, sp, #0
	return 1;
 8001452:	2301      	movs	r3, #1
}
 8001454:	4618      	mov	r0, r3
 8001456:	46bd      	mov	sp, r7
 8001458:	f85d 7b04 	ldr.w	r7, [sp], #4
 800145c:	4770      	bx	lr

0800145e <_kill>:

int _kill(int pid, int sig)
{
 800145e:	b580      	push	{r7, lr}
 8001460:	b082      	sub	sp, #8
 8001462:	af00      	add	r7, sp, #0
 8001464:	6078      	str	r0, [r7, #4]
 8001466:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 8001468:	f002 fdfe 	bl	8004068 <__errno>
 800146c:	4603      	mov	r3, r0
 800146e:	2216      	movs	r2, #22
 8001470:	601a      	str	r2, [r3, #0]
	return -1;
 8001472:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
}
 8001476:	4618      	mov	r0, r3
 8001478:	3708      	adds	r7, #8
 800147a:	46bd      	mov	sp, r7
 800147c:	bd80      	pop	{r7, pc}

0800147e <_exit>:

void _exit (int status)
{
 800147e:	b580      	push	{r7, lr}
 8001480:	b082      	sub	sp, #8
 8001482:	af00      	add	r7, sp, #0
 8001484:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 8001486:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
 800148a:	6878      	ldr	r0, [r7, #4]
 800148c:	f7ff ffe7 	bl	800145e <_kill>
	while (1) {}		/* Make sure we hang here */
 8001490:	bf00      	nop
 8001492:	e7fd      	b.n	8001490 <_exit+0x12>

08001494 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001494:	b580      	push	{r7, lr}
 8001496:	b086      	sub	sp, #24
 8001498:	af00      	add	r7, sp, #0
 800149a:	60f8      	str	r0, [r7, #12]
 800149c:	60b9      	str	r1, [r7, #8]
 800149e:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80014a0:	2300      	movs	r3, #0
 80014a2:	617b      	str	r3, [r7, #20]
 80014a4:	e00a      	b.n	80014bc <_read+0x28>
	{
		*ptr++ = __io_getchar();
 80014a6:	f3af 8000 	nop.w
 80014aa:	4601      	mov	r1, r0
 80014ac:	68bb      	ldr	r3, [r7, #8]
 80014ae:	1c5a      	adds	r2, r3, #1
 80014b0:	60ba      	str	r2, [r7, #8]
 80014b2:	b2ca      	uxtb	r2, r1
 80014b4:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80014b6:	697b      	ldr	r3, [r7, #20]
 80014b8:	3301      	adds	r3, #1
 80014ba:	617b      	str	r3, [r7, #20]
 80014bc:	697a      	ldr	r2, [r7, #20]
 80014be:	687b      	ldr	r3, [r7, #4]
 80014c0:	429a      	cmp	r2, r3
 80014c2:	dbf0      	blt.n	80014a6 <_read+0x12>
	}

return len;
 80014c4:	687b      	ldr	r3, [r7, #4]
}
 80014c6:	4618      	mov	r0, r3
 80014c8:	3718      	adds	r7, #24
 80014ca:	46bd      	mov	sp, r7
 80014cc:	bd80      	pop	{r7, pc}

080014ce <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80014ce:	b580      	push	{r7, lr}
 80014d0:	b086      	sub	sp, #24
 80014d2:	af00      	add	r7, sp, #0
 80014d4:	60f8      	str	r0, [r7, #12]
 80014d6:	60b9      	str	r1, [r7, #8]
 80014d8:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80014da:	2300      	movs	r3, #0
 80014dc:	617b      	str	r3, [r7, #20]
 80014de:	e009      	b.n	80014f4 <_write+0x26>
	{
		__io_putchar(*ptr++);
 80014e0:	68bb      	ldr	r3, [r7, #8]
 80014e2:	1c5a      	adds	r2, r3, #1
 80014e4:	60ba      	str	r2, [r7, #8]
 80014e6:	781b      	ldrb	r3, [r3, #0]
 80014e8:	4618      	mov	r0, r3
 80014ea:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80014ee:	697b      	ldr	r3, [r7, #20]
 80014f0:	3301      	adds	r3, #1
 80014f2:	617b      	str	r3, [r7, #20]
 80014f4:	697a      	ldr	r2, [r7, #20]
 80014f6:	687b      	ldr	r3, [r7, #4]
 80014f8:	429a      	cmp	r2, r3
 80014fa:	dbf1      	blt.n	80014e0 <_write+0x12>
	}
	return len;
 80014fc:	687b      	ldr	r3, [r7, #4]
}
 80014fe:	4618      	mov	r0, r3
 8001500:	3718      	adds	r7, #24
 8001502:	46bd      	mov	sp, r7
 8001504:	bd80      	pop	{r7, pc}

08001506 <_close>:

int _close(int file)
{
 8001506:	b480      	push	{r7}
 8001508:	b083      	sub	sp, #12
 800150a:	af00      	add	r7, sp, #0
 800150c:	6078      	str	r0, [r7, #4]
	return -1;
 800150e:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
}
 8001512:	4618      	mov	r0, r3
 8001514:	370c      	adds	r7, #12
 8001516:	46bd      	mov	sp, r7
 8001518:	f85d 7b04 	ldr.w	r7, [sp], #4
 800151c:	4770      	bx	lr

0800151e <_fstat>:


int _fstat(int file, struct stat *st)
{
 800151e:	b480      	push	{r7}
 8001520:	b083      	sub	sp, #12
 8001522:	af00      	add	r7, sp, #0
 8001524:	6078      	str	r0, [r7, #4]
 8001526:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8001528:	683b      	ldr	r3, [r7, #0]
 800152a:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 800152e:	605a      	str	r2, [r3, #4]
	return 0;
 8001530:	2300      	movs	r3, #0
}
 8001532:	4618      	mov	r0, r3
 8001534:	370c      	adds	r7, #12
 8001536:	46bd      	mov	sp, r7
 8001538:	f85d 7b04 	ldr.w	r7, [sp], #4
 800153c:	4770      	bx	lr

0800153e <_isatty>:

int _isatty(int file)
{
 800153e:	b480      	push	{r7}
 8001540:	b083      	sub	sp, #12
 8001542:	af00      	add	r7, sp, #0
 8001544:	6078      	str	r0, [r7, #4]
	return 1;
 8001546:	2301      	movs	r3, #1
}
 8001548:	4618      	mov	r0, r3
 800154a:	370c      	adds	r7, #12
 800154c:	46bd      	mov	sp, r7
 800154e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001552:	4770      	bx	lr

08001554 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8001554:	b480      	push	{r7}
 8001556:	b085      	sub	sp, #20
 8001558:	af00      	add	r7, sp, #0
 800155a:	60f8      	str	r0, [r7, #12]
 800155c:	60b9      	str	r1, [r7, #8]
 800155e:	607a      	str	r2, [r7, #4]
	return 0;
 8001560:	2300      	movs	r3, #0
}
 8001562:	4618      	mov	r0, r3
 8001564:	3714      	adds	r7, #20
 8001566:	46bd      	mov	sp, r7
 8001568:	f85d 7b04 	ldr.w	r7, [sp], #4
 800156c:	4770      	bx	lr
	...

08001570 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001570:	b580      	push	{r7, lr}
 8001572:	b086      	sub	sp, #24
 8001574:	af00      	add	r7, sp, #0
 8001576:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001578:	4a14      	ldr	r2, [pc, #80]	@ (80015cc <_sbrk+0x5c>)
 800157a:	4b15      	ldr	r3, [pc, #84]	@ (80015d0 <_sbrk+0x60>)
 800157c:	1ad3      	subs	r3, r2, r3
 800157e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001580:	697b      	ldr	r3, [r7, #20]
 8001582:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001584:	4b13      	ldr	r3, [pc, #76]	@ (80015d4 <_sbrk+0x64>)
 8001586:	681b      	ldr	r3, [r3, #0]
 8001588:	2b00      	cmp	r3, #0
 800158a:	d102      	bne.n	8001592 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800158c:	4b11      	ldr	r3, [pc, #68]	@ (80015d4 <_sbrk+0x64>)
 800158e:	4a12      	ldr	r2, [pc, #72]	@ (80015d8 <_sbrk+0x68>)
 8001590:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8001592:	4b10      	ldr	r3, [pc, #64]	@ (80015d4 <_sbrk+0x64>)
 8001594:	681a      	ldr	r2, [r3, #0]
 8001596:	687b      	ldr	r3, [r7, #4]
 8001598:	4413      	add	r3, r2
 800159a:	693a      	ldr	r2, [r7, #16]
 800159c:	429a      	cmp	r2, r3
 800159e:	d207      	bcs.n	80015b0 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80015a0:	f002 fd62 	bl	8004068 <__errno>
 80015a4:	4603      	mov	r3, r0
 80015a6:	220c      	movs	r2, #12
 80015a8:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80015aa:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 80015ae:	e009      	b.n	80015c4 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80015b0:	4b08      	ldr	r3, [pc, #32]	@ (80015d4 <_sbrk+0x64>)
 80015b2:	681b      	ldr	r3, [r3, #0]
 80015b4:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80015b6:	4b07      	ldr	r3, [pc, #28]	@ (80015d4 <_sbrk+0x64>)
 80015b8:	681a      	ldr	r2, [r3, #0]
 80015ba:	687b      	ldr	r3, [r7, #4]
 80015bc:	4413      	add	r3, r2
 80015be:	4a05      	ldr	r2, [pc, #20]	@ (80015d4 <_sbrk+0x64>)
 80015c0:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80015c2:	68fb      	ldr	r3, [r7, #12]
}
 80015c4:	4618      	mov	r0, r3
 80015c6:	3718      	adds	r7, #24
 80015c8:	46bd      	mov	sp, r7
 80015ca:	bd80      	pop	{r7, pc}
 80015cc:	200a0000 	.word	0x200a0000
 80015d0:	00000400 	.word	0x00000400
 80015d4:	200001f0 	.word	0x200001f0
 80015d8:	20000348 	.word	0x20000348

080015dc <SystemInit>:
  * @brief  Setup the microcontroller system.
  * @retval None
  */

void SystemInit(void)
{
 80015dc:	b480      	push	{r7}
 80015de:	af00      	add	r7, sp, #0
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET;
#endif

  /* FPU settings ------------------------------------------------------------*/
#if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
  SCB->CPACR |= ((3UL << 20U)|(3UL << 22U));  /* set CP10 and CP11 Full Access */
 80015e0:	4b06      	ldr	r3, [pc, #24]	@ (80015fc <SystemInit+0x20>)
 80015e2:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80015e6:	4a05      	ldr	r2, [pc, #20]	@ (80015fc <SystemInit+0x20>)
 80015e8:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 80015ec:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
#endif
}
 80015f0:	bf00      	nop
 80015f2:	46bd      	mov	sp, r7
 80015f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015f8:	4770      	bx	lr
 80015fa:	bf00      	nop
 80015fc:	e000ed00 	.word	0xe000ed00

08001600 <Reset_Handler>:
 8001600:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8001638 <LoopForever+0x2>
 8001604:	f7ff ffea 	bl	80015dc <SystemInit>
 8001608:	480c      	ldr	r0, [pc, #48]	@ (800163c <LoopForever+0x6>)
 800160a:	490d      	ldr	r1, [pc, #52]	@ (8001640 <LoopForever+0xa>)
 800160c:	4a0d      	ldr	r2, [pc, #52]	@ (8001644 <LoopForever+0xe>)
 800160e:	2300      	movs	r3, #0
 8001610:	e002      	b.n	8001618 <LoopCopyDataInit>

08001612 <CopyDataInit>:
 8001612:	58d4      	ldr	r4, [r2, r3]
 8001614:	50c4      	str	r4, [r0, r3]
 8001616:	3304      	adds	r3, #4

08001618 <LoopCopyDataInit>:
 8001618:	18c4      	adds	r4, r0, r3
 800161a:	428c      	cmp	r4, r1
 800161c:	d3f9      	bcc.n	8001612 <CopyDataInit>
 800161e:	4a0a      	ldr	r2, [pc, #40]	@ (8001648 <LoopForever+0x12>)
 8001620:	4c0a      	ldr	r4, [pc, #40]	@ (800164c <LoopForever+0x16>)
 8001622:	2300      	movs	r3, #0
 8001624:	e001      	b.n	800162a <LoopFillZerobss>

08001626 <FillZerobss>:
 8001626:	6013      	str	r3, [r2, #0]
 8001628:	3204      	adds	r2, #4

0800162a <LoopFillZerobss>:
 800162a:	42a2      	cmp	r2, r4
 800162c:	d3fb      	bcc.n	8001626 <FillZerobss>
 800162e:	f002 fd21 	bl	8004074 <__libc_init_array>
 8001632:	f7ff fc95 	bl	8000f60 <main>

08001636 <LoopForever>:
 8001636:	e7fe      	b.n	8001636 <LoopForever>
 8001638:	200a0000 	.word	0x200a0000
 800163c:	20000000 	.word	0x20000000
 8001640:	200001d4 	.word	0x200001d4
 8001644:	080064e0 	.word	0x080064e0
 8001648:	200001d4 	.word	0x200001d4
 800164c:	20000344 	.word	0x20000344

08001650 <ADC1_IRQHandler>:
 8001650:	e7fe      	b.n	8001650 <ADC1_IRQHandler>

08001652 <HAL_Init>:
 8001652:	b580      	push	{r7, lr}
 8001654:	b082      	sub	sp, #8
 8001656:	af00      	add	r7, sp, #0
 8001658:	2300      	movs	r3, #0
 800165a:	71fb      	strb	r3, [r7, #7]
 800165c:	2003      	movs	r0, #3
 800165e:	f000 f91f 	bl	80018a0 <HAL_NVIC_SetPriorityGrouping>
 8001662:	2000      	movs	r0, #0
 8001664:	f000 f80e 	bl	8001684 <HAL_InitTick>
 8001668:	4603      	mov	r3, r0
 800166a:	2b00      	cmp	r3, #0
 800166c:	d002      	beq.n	8001674 <HAL_Init+0x22>
 800166e:	2301      	movs	r3, #1
 8001670:	71fb      	strb	r3, [r7, #7]
 8001672:	e001      	b.n	8001678 <HAL_Init+0x26>
 8001674:	f7ff fe98 	bl	80013a8 <HAL_MspInit>
 8001678:	79fb      	ldrb	r3, [r7, #7]
 800167a:	4618      	mov	r0, r3
 800167c:	3708      	adds	r7, #8
 800167e:	46bd      	mov	sp, r7
 8001680:	bd80      	pop	{r7, pc}
	...

08001684 <HAL_InitTick>:
 8001684:	b580      	push	{r7, lr}
 8001686:	b084      	sub	sp, #16
 8001688:	af00      	add	r7, sp, #0
 800168a:	6078      	str	r0, [r7, #4]
 800168c:	2300      	movs	r3, #0
 800168e:	73fb      	strb	r3, [r7, #15]
 8001690:	4b17      	ldr	r3, [pc, #92]	@ (80016f0 <HAL_InitTick+0x6c>)
 8001692:	781b      	ldrb	r3, [r3, #0]
 8001694:	2b00      	cmp	r3, #0
 8001696:	d023      	beq.n	80016e0 <HAL_InitTick+0x5c>
 8001698:	4b16      	ldr	r3, [pc, #88]	@ (80016f4 <HAL_InitTick+0x70>)
 800169a:	681a      	ldr	r2, [r3, #0]
 800169c:	4b14      	ldr	r3, [pc, #80]	@ (80016f0 <HAL_InitTick+0x6c>)
 800169e:	781b      	ldrb	r3, [r3, #0]
 80016a0:	4619      	mov	r1, r3
 80016a2:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 80016a6:	fbb3 f3f1 	udiv	r3, r3, r1
 80016aa:	fbb2 f3f3 	udiv	r3, r2, r3
 80016ae:	4618      	mov	r0, r3
 80016b0:	f000 f91d 	bl	80018ee <HAL_SYSTICK_Config>
 80016b4:	4603      	mov	r3, r0
 80016b6:	2b00      	cmp	r3, #0
 80016b8:	d10f      	bne.n	80016da <HAL_InitTick+0x56>
 80016ba:	687b      	ldr	r3, [r7, #4]
 80016bc:	2b0f      	cmp	r3, #15
 80016be:	d809      	bhi.n	80016d4 <HAL_InitTick+0x50>
 80016c0:	2200      	movs	r2, #0
 80016c2:	6879      	ldr	r1, [r7, #4]
 80016c4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80016c8:	f000 f8f5 	bl	80018b6 <HAL_NVIC_SetPriority>
 80016cc:	4a0a      	ldr	r2, [pc, #40]	@ (80016f8 <HAL_InitTick+0x74>)
 80016ce:	687b      	ldr	r3, [r7, #4]
 80016d0:	6013      	str	r3, [r2, #0]
 80016d2:	e007      	b.n	80016e4 <HAL_InitTick+0x60>
 80016d4:	2301      	movs	r3, #1
 80016d6:	73fb      	strb	r3, [r7, #15]
 80016d8:	e004      	b.n	80016e4 <HAL_InitTick+0x60>
 80016da:	2301      	movs	r3, #1
 80016dc:	73fb      	strb	r3, [r7, #15]
 80016de:	e001      	b.n	80016e4 <HAL_InitTick+0x60>
 80016e0:	2301      	movs	r3, #1
 80016e2:	73fb      	strb	r3, [r7, #15]
 80016e4:	7bfb      	ldrb	r3, [r7, #15]
 80016e6:	4618      	mov	r0, r3
 80016e8:	3710      	adds	r7, #16
 80016ea:	46bd      	mov	sp, r7
 80016ec:	bd80      	pop	{r7, pc}
 80016ee:	bf00      	nop
 80016f0:	20000008 	.word	0x20000008
 80016f4:	20000000 	.word	0x20000000
 80016f8:	20000004 	.word	0x20000004

080016fc <HAL_IncTick>:
 80016fc:	b480      	push	{r7}
 80016fe:	af00      	add	r7, sp, #0
 8001700:	4b06      	ldr	r3, [pc, #24]	@ (800171c <HAL_IncTick+0x20>)
 8001702:	781b      	ldrb	r3, [r3, #0]
 8001704:	461a      	mov	r2, r3
 8001706:	4b06      	ldr	r3, [pc, #24]	@ (8001720 <HAL_IncTick+0x24>)
 8001708:	681b      	ldr	r3, [r3, #0]
 800170a:	4413      	add	r3, r2
 800170c:	4a04      	ldr	r2, [pc, #16]	@ (8001720 <HAL_IncTick+0x24>)
 800170e:	6013      	str	r3, [r2, #0]
 8001710:	bf00      	nop
 8001712:	46bd      	mov	sp, r7
 8001714:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001718:	4770      	bx	lr
 800171a:	bf00      	nop
 800171c:	20000008 	.word	0x20000008
 8001720:	200001f4 	.word	0x200001f4

08001724 <HAL_GetTick>:
 8001724:	b480      	push	{r7}
 8001726:	af00      	add	r7, sp, #0
 8001728:	4b03      	ldr	r3, [pc, #12]	@ (8001738 <HAL_GetTick+0x14>)
 800172a:	681b      	ldr	r3, [r3, #0]
 800172c:	4618      	mov	r0, r3
 800172e:	46bd      	mov	sp, r7
 8001730:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001734:	4770      	bx	lr
 8001736:	bf00      	nop
 8001738:	200001f4 	.word	0x200001f4

0800173c <__NVIC_SetPriorityGrouping>:
 800173c:	b480      	push	{r7}
 800173e:	b085      	sub	sp, #20
 8001740:	af00      	add	r7, sp, #0
 8001742:	6078      	str	r0, [r7, #4]
 8001744:	687b      	ldr	r3, [r7, #4]
 8001746:	f003 0307 	and.w	r3, r3, #7
 800174a:	60fb      	str	r3, [r7, #12]
 800174c:	4b0c      	ldr	r3, [pc, #48]	@ (8001780 <__NVIC_SetPriorityGrouping+0x44>)
 800174e:	68db      	ldr	r3, [r3, #12]
 8001750:	60bb      	str	r3, [r7, #8]
 8001752:	68ba      	ldr	r2, [r7, #8]
 8001754:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8001758:	4013      	ands	r3, r2
 800175a:	60bb      	str	r3, [r7, #8]
 800175c:	68fb      	ldr	r3, [r7, #12]
 800175e:	021a      	lsls	r2, r3, #8
 8001760:	68bb      	ldr	r3, [r7, #8]
 8001762:	4313      	orrs	r3, r2
 8001764:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8001768:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800176c:	60bb      	str	r3, [r7, #8]
 800176e:	4a04      	ldr	r2, [pc, #16]	@ (8001780 <__NVIC_SetPriorityGrouping+0x44>)
 8001770:	68bb      	ldr	r3, [r7, #8]
 8001772:	60d3      	str	r3, [r2, #12]
 8001774:	bf00      	nop
 8001776:	3714      	adds	r7, #20
 8001778:	46bd      	mov	sp, r7
 800177a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800177e:	4770      	bx	lr
 8001780:	e000ed00 	.word	0xe000ed00

08001784 <__NVIC_GetPriorityGrouping>:
 8001784:	b480      	push	{r7}
 8001786:	af00      	add	r7, sp, #0
 8001788:	4b04      	ldr	r3, [pc, #16]	@ (800179c <__NVIC_GetPriorityGrouping+0x18>)
 800178a:	68db      	ldr	r3, [r3, #12]
 800178c:	0a1b      	lsrs	r3, r3, #8
 800178e:	f003 0307 	and.w	r3, r3, #7
 8001792:	4618      	mov	r0, r3
 8001794:	46bd      	mov	sp, r7
 8001796:	f85d 7b04 	ldr.w	r7, [sp], #4
 800179a:	4770      	bx	lr
 800179c:	e000ed00 	.word	0xe000ed00

080017a0 <__NVIC_SetPriority>:
 80017a0:	b480      	push	{r7}
 80017a2:	b083      	sub	sp, #12
 80017a4:	af00      	add	r7, sp, #0
 80017a6:	4603      	mov	r3, r0
 80017a8:	6039      	str	r1, [r7, #0]
 80017aa:	71fb      	strb	r3, [r7, #7]
 80017ac:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80017b0:	2b00      	cmp	r3, #0
 80017b2:	db0a      	blt.n	80017ca <__NVIC_SetPriority+0x2a>
 80017b4:	683b      	ldr	r3, [r7, #0]
 80017b6:	b2da      	uxtb	r2, r3
 80017b8:	490c      	ldr	r1, [pc, #48]	@ (80017ec <__NVIC_SetPriority+0x4c>)
 80017ba:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80017be:	0112      	lsls	r2, r2, #4
 80017c0:	b2d2      	uxtb	r2, r2
 80017c2:	440b      	add	r3, r1
 80017c4:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 80017c8:	e00a      	b.n	80017e0 <__NVIC_SetPriority+0x40>
 80017ca:	683b      	ldr	r3, [r7, #0]
 80017cc:	b2da      	uxtb	r2, r3
 80017ce:	4908      	ldr	r1, [pc, #32]	@ (80017f0 <__NVIC_SetPriority+0x50>)
 80017d0:	79fb      	ldrb	r3, [r7, #7]
 80017d2:	f003 030f 	and.w	r3, r3, #15
 80017d6:	3b04      	subs	r3, #4
 80017d8:	0112      	lsls	r2, r2, #4
 80017da:	b2d2      	uxtb	r2, r2
 80017dc:	440b      	add	r3, r1
 80017de:	761a      	strb	r2, [r3, #24]
 80017e0:	bf00      	nop
 80017e2:	370c      	adds	r7, #12
 80017e4:	46bd      	mov	sp, r7
 80017e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017ea:	4770      	bx	lr
 80017ec:	e000e100 	.word	0xe000e100
 80017f0:	e000ed00 	.word	0xe000ed00

080017f4 <NVIC_EncodePriority>:
 80017f4:	b480      	push	{r7}
 80017f6:	b089      	sub	sp, #36	@ 0x24
 80017f8:	af00      	add	r7, sp, #0
 80017fa:	60f8      	str	r0, [r7, #12]
 80017fc:	60b9      	str	r1, [r7, #8]
 80017fe:	607a      	str	r2, [r7, #4]
 8001800:	68fb      	ldr	r3, [r7, #12]
 8001802:	f003 0307 	and.w	r3, r3, #7
 8001806:	61fb      	str	r3, [r7, #28]
 8001808:	69fb      	ldr	r3, [r7, #28]
 800180a:	f1c3 0307 	rsb	r3, r3, #7
 800180e:	2b04      	cmp	r3, #4
 8001810:	bf28      	it	cs
 8001812:	2304      	movcs	r3, #4
 8001814:	61bb      	str	r3, [r7, #24]
 8001816:	69fb      	ldr	r3, [r7, #28]
 8001818:	3304      	adds	r3, #4
 800181a:	2b06      	cmp	r3, #6
 800181c:	d902      	bls.n	8001824 <NVIC_EncodePriority+0x30>
 800181e:	69fb      	ldr	r3, [r7, #28]
 8001820:	3b03      	subs	r3, #3
 8001822:	e000      	b.n	8001826 <NVIC_EncodePriority+0x32>
 8001824:	2300      	movs	r3, #0
 8001826:	617b      	str	r3, [r7, #20]
 8001828:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 800182c:	69bb      	ldr	r3, [r7, #24]
 800182e:	fa02 f303 	lsl.w	r3, r2, r3
 8001832:	43da      	mvns	r2, r3
 8001834:	68bb      	ldr	r3, [r7, #8]
 8001836:	401a      	ands	r2, r3
 8001838:	697b      	ldr	r3, [r7, #20]
 800183a:	409a      	lsls	r2, r3
 800183c:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
 8001840:	697b      	ldr	r3, [r7, #20]
 8001842:	fa01 f303 	lsl.w	r3, r1, r3
 8001846:	43d9      	mvns	r1, r3
 8001848:	687b      	ldr	r3, [r7, #4]
 800184a:	400b      	ands	r3, r1
 800184c:	4313      	orrs	r3, r2
 800184e:	4618      	mov	r0, r3
 8001850:	3724      	adds	r7, #36	@ 0x24
 8001852:	46bd      	mov	sp, r7
 8001854:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001858:	4770      	bx	lr
	...

0800185c <SysTick_Config>:
 800185c:	b580      	push	{r7, lr}
 800185e:	b082      	sub	sp, #8
 8001860:	af00      	add	r7, sp, #0
 8001862:	6078      	str	r0, [r7, #4]
 8001864:	687b      	ldr	r3, [r7, #4]
 8001866:	3b01      	subs	r3, #1
 8001868:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 800186c:	d301      	bcc.n	8001872 <SysTick_Config+0x16>
 800186e:	2301      	movs	r3, #1
 8001870:	e00f      	b.n	8001892 <SysTick_Config+0x36>
 8001872:	4a0a      	ldr	r2, [pc, #40]	@ (800189c <SysTick_Config+0x40>)
 8001874:	687b      	ldr	r3, [r7, #4]
 8001876:	3b01      	subs	r3, #1
 8001878:	6053      	str	r3, [r2, #4]
 800187a:	210f      	movs	r1, #15
 800187c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8001880:	f7ff ff8e 	bl	80017a0 <__NVIC_SetPriority>
 8001884:	4b05      	ldr	r3, [pc, #20]	@ (800189c <SysTick_Config+0x40>)
 8001886:	2200      	movs	r2, #0
 8001888:	609a      	str	r2, [r3, #8]
 800188a:	4b04      	ldr	r3, [pc, #16]	@ (800189c <SysTick_Config+0x40>)
 800188c:	2207      	movs	r2, #7
 800188e:	601a      	str	r2, [r3, #0]
 8001890:	2300      	movs	r3, #0
 8001892:	4618      	mov	r0, r3
 8001894:	3708      	adds	r7, #8
 8001896:	46bd      	mov	sp, r7
 8001898:	bd80      	pop	{r7, pc}
 800189a:	bf00      	nop
 800189c:	e000e010 	.word	0xe000e010

080018a0 <HAL_NVIC_SetPriorityGrouping>:
 80018a0:	b580      	push	{r7, lr}
 80018a2:	b082      	sub	sp, #8
 80018a4:	af00      	add	r7, sp, #0
 80018a6:	6078      	str	r0, [r7, #4]
 80018a8:	6878      	ldr	r0, [r7, #4]
 80018aa:	f7ff ff47 	bl	800173c <__NVIC_SetPriorityGrouping>
 80018ae:	bf00      	nop
 80018b0:	3708      	adds	r7, #8
 80018b2:	46bd      	mov	sp, r7
 80018b4:	bd80      	pop	{r7, pc}

080018b6 <HAL_NVIC_SetPriority>:
 80018b6:	b580      	push	{r7, lr}
 80018b8:	b086      	sub	sp, #24
 80018ba:	af00      	add	r7, sp, #0
 80018bc:	4603      	mov	r3, r0
 80018be:	60b9      	str	r1, [r7, #8]
 80018c0:	607a      	str	r2, [r7, #4]
 80018c2:	73fb      	strb	r3, [r7, #15]
 80018c4:	2300      	movs	r3, #0
 80018c6:	617b      	str	r3, [r7, #20]
 80018c8:	f7ff ff5c 	bl	8001784 <__NVIC_GetPriorityGrouping>
 80018cc:	6178      	str	r0, [r7, #20]
 80018ce:	687a      	ldr	r2, [r7, #4]
 80018d0:	68b9      	ldr	r1, [r7, #8]
 80018d2:	6978      	ldr	r0, [r7, #20]
 80018d4:	f7ff ff8e 	bl	80017f4 <NVIC_EncodePriority>
 80018d8:	4602      	mov	r2, r0
 80018da:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80018de:	4611      	mov	r1, r2
 80018e0:	4618      	mov	r0, r3
 80018e2:	f7ff ff5d 	bl	80017a0 <__NVIC_SetPriority>
 80018e6:	bf00      	nop
 80018e8:	3718      	adds	r7, #24
 80018ea:	46bd      	mov	sp, r7
 80018ec:	bd80      	pop	{r7, pc}

080018ee <HAL_SYSTICK_Config>:
 80018ee:	b580      	push	{r7, lr}
 80018f0:	b082      	sub	sp, #8
 80018f2:	af00      	add	r7, sp, #0
 80018f4:	6078      	str	r0, [r7, #4]
 80018f6:	6878      	ldr	r0, [r7, #4]
 80018f8:	f7ff ffb0 	bl	800185c <SysTick_Config>
 80018fc:	4603      	mov	r3, r0
 80018fe:	4618      	mov	r0, r3
 8001900:	3708      	adds	r7, #8
 8001902:	46bd      	mov	sp, r7
 8001904:	bd80      	pop	{r7, pc}
	...

08001908 <HAL_PWREx_GetVoltageRange>:
 8001908:	b480      	push	{r7}
 800190a:	af00      	add	r7, sp, #0
 800190c:	4b0d      	ldr	r3, [pc, #52]	@ (8001944 <HAL_PWREx_GetVoltageRange+0x3c>)
 800190e:	681b      	ldr	r3, [r3, #0]
 8001910:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 8001914:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8001918:	d102      	bne.n	8001920 <HAL_PWREx_GetVoltageRange+0x18>
 800191a:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800191e:	e00b      	b.n	8001938 <HAL_PWREx_GetVoltageRange+0x30>
 8001920:	4b08      	ldr	r3, [pc, #32]	@ (8001944 <HAL_PWREx_GetVoltageRange+0x3c>)
 8001922:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8001926:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800192a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800192e:	d102      	bne.n	8001936 <HAL_PWREx_GetVoltageRange+0x2e>
 8001930:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8001934:	e000      	b.n	8001938 <HAL_PWREx_GetVoltageRange+0x30>
 8001936:	2300      	movs	r3, #0
 8001938:	4618      	mov	r0, r3
 800193a:	46bd      	mov	sp, r7
 800193c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001940:	4770      	bx	lr
 8001942:	bf00      	nop
 8001944:	40007000 	.word	0x40007000

08001948 <HAL_PWREx_ControlVoltageScaling>:
 8001948:	b480      	push	{r7}
 800194a:	b085      	sub	sp, #20
 800194c:	af00      	add	r7, sp, #0
 800194e:	6078      	str	r0, [r7, #4]
 8001950:	687b      	ldr	r3, [r7, #4]
 8001952:	2b00      	cmp	r3, #0
 8001954:	d141      	bne.n	80019da <HAL_PWREx_ControlVoltageScaling+0x92>
 8001956:	4b4b      	ldr	r3, [pc, #300]	@ (8001a84 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8001958:	681b      	ldr	r3, [r3, #0]
 800195a:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 800195e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8001962:	d131      	bne.n	80019c8 <HAL_PWREx_ControlVoltageScaling+0x80>
 8001964:	4b47      	ldr	r3, [pc, #284]	@ (8001a84 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8001966:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800196a:	4a46      	ldr	r2, [pc, #280]	@ (8001a84 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 800196c:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8001970:	f8c2 3080 	str.w	r3, [r2, #128]	@ 0x80
 8001974:	4b43      	ldr	r3, [pc, #268]	@ (8001a84 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8001976:	681b      	ldr	r3, [r3, #0]
 8001978:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 800197c:	4a41      	ldr	r2, [pc, #260]	@ (8001a84 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 800197e:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8001982:	6013      	str	r3, [r2, #0]
 8001984:	4b40      	ldr	r3, [pc, #256]	@ (8001a88 <HAL_PWREx_ControlVoltageScaling+0x140>)
 8001986:	681b      	ldr	r3, [r3, #0]
 8001988:	2232      	movs	r2, #50	@ 0x32
 800198a:	fb02 f303 	mul.w	r3, r2, r3
 800198e:	4a3f      	ldr	r2, [pc, #252]	@ (8001a8c <HAL_PWREx_ControlVoltageScaling+0x144>)
 8001990:	fba2 2303 	umull	r2, r3, r2, r3
 8001994:	0c9b      	lsrs	r3, r3, #18
 8001996:	3301      	adds	r3, #1
 8001998:	60fb      	str	r3, [r7, #12]
 800199a:	e002      	b.n	80019a2 <HAL_PWREx_ControlVoltageScaling+0x5a>
 800199c:	68fb      	ldr	r3, [r7, #12]
 800199e:	3b01      	subs	r3, #1
 80019a0:	60fb      	str	r3, [r7, #12]
 80019a2:	4b38      	ldr	r3, [pc, #224]	@ (8001a84 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 80019a4:	695b      	ldr	r3, [r3, #20]
 80019a6:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80019aa:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80019ae:	d102      	bne.n	80019b6 <HAL_PWREx_ControlVoltageScaling+0x6e>
 80019b0:	68fb      	ldr	r3, [r7, #12]
 80019b2:	2b00      	cmp	r3, #0
 80019b4:	d1f2      	bne.n	800199c <HAL_PWREx_ControlVoltageScaling+0x54>
 80019b6:	4b33      	ldr	r3, [pc, #204]	@ (8001a84 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 80019b8:	695b      	ldr	r3, [r3, #20]
 80019ba:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80019be:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80019c2:	d158      	bne.n	8001a76 <HAL_PWREx_ControlVoltageScaling+0x12e>
 80019c4:	2303      	movs	r3, #3
 80019c6:	e057      	b.n	8001a78 <HAL_PWREx_ControlVoltageScaling+0x130>
 80019c8:	4b2e      	ldr	r3, [pc, #184]	@ (8001a84 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 80019ca:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80019ce:	4a2d      	ldr	r2, [pc, #180]	@ (8001a84 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 80019d0:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80019d4:	f8c2 3080 	str.w	r3, [r2, #128]	@ 0x80
 80019d8:	e04d      	b.n	8001a76 <HAL_PWREx_ControlVoltageScaling+0x12e>
 80019da:	687b      	ldr	r3, [r7, #4]
 80019dc:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80019e0:	d141      	bne.n	8001a66 <HAL_PWREx_ControlVoltageScaling+0x11e>
 80019e2:	4b28      	ldr	r3, [pc, #160]	@ (8001a84 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 80019e4:	681b      	ldr	r3, [r3, #0]
 80019e6:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 80019ea:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80019ee:	d131      	bne.n	8001a54 <HAL_PWREx_ControlVoltageScaling+0x10c>
 80019f0:	4b24      	ldr	r3, [pc, #144]	@ (8001a84 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 80019f2:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80019f6:	4a23      	ldr	r2, [pc, #140]	@ (8001a84 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 80019f8:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80019fc:	f8c2 3080 	str.w	r3, [r2, #128]	@ 0x80
 8001a00:	4b20      	ldr	r3, [pc, #128]	@ (8001a84 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8001a02:	681b      	ldr	r3, [r3, #0]
 8001a04:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 8001a08:	4a1e      	ldr	r2, [pc, #120]	@ (8001a84 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8001a0a:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8001a0e:	6013      	str	r3, [r2, #0]
 8001a10:	4b1d      	ldr	r3, [pc, #116]	@ (8001a88 <HAL_PWREx_ControlVoltageScaling+0x140>)
 8001a12:	681b      	ldr	r3, [r3, #0]
 8001a14:	2232      	movs	r2, #50	@ 0x32
 8001a16:	fb02 f303 	mul.w	r3, r2, r3
 8001a1a:	4a1c      	ldr	r2, [pc, #112]	@ (8001a8c <HAL_PWREx_ControlVoltageScaling+0x144>)
 8001a1c:	fba2 2303 	umull	r2, r3, r2, r3
 8001a20:	0c9b      	lsrs	r3, r3, #18
 8001a22:	3301      	adds	r3, #1
 8001a24:	60fb      	str	r3, [r7, #12]
 8001a26:	e002      	b.n	8001a2e <HAL_PWREx_ControlVoltageScaling+0xe6>
 8001a28:	68fb      	ldr	r3, [r7, #12]
 8001a2a:	3b01      	subs	r3, #1
 8001a2c:	60fb      	str	r3, [r7, #12]
 8001a2e:	4b15      	ldr	r3, [pc, #84]	@ (8001a84 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8001a30:	695b      	ldr	r3, [r3, #20]
 8001a32:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8001a36:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8001a3a:	d102      	bne.n	8001a42 <HAL_PWREx_ControlVoltageScaling+0xfa>
 8001a3c:	68fb      	ldr	r3, [r7, #12]
 8001a3e:	2b00      	cmp	r3, #0
 8001a40:	d1f2      	bne.n	8001a28 <HAL_PWREx_ControlVoltageScaling+0xe0>
 8001a42:	4b10      	ldr	r3, [pc, #64]	@ (8001a84 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8001a44:	695b      	ldr	r3, [r3, #20]
 8001a46:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8001a4a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8001a4e:	d112      	bne.n	8001a76 <HAL_PWREx_ControlVoltageScaling+0x12e>
 8001a50:	2303      	movs	r3, #3
 8001a52:	e011      	b.n	8001a78 <HAL_PWREx_ControlVoltageScaling+0x130>
 8001a54:	4b0b      	ldr	r3, [pc, #44]	@ (8001a84 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8001a56:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8001a5a:	4a0a      	ldr	r2, [pc, #40]	@ (8001a84 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8001a5c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001a60:	f8c2 3080 	str.w	r3, [r2, #128]	@ 0x80
 8001a64:	e007      	b.n	8001a76 <HAL_PWREx_ControlVoltageScaling+0x12e>
 8001a66:	4b07      	ldr	r3, [pc, #28]	@ (8001a84 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8001a68:	681b      	ldr	r3, [r3, #0]
 8001a6a:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 8001a6e:	4a05      	ldr	r2, [pc, #20]	@ (8001a84 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8001a70:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8001a74:	6013      	str	r3, [r2, #0]
 8001a76:	2300      	movs	r3, #0
 8001a78:	4618      	mov	r0, r3
 8001a7a:	3714      	adds	r7, #20
 8001a7c:	46bd      	mov	sp, r7
 8001a7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a82:	4770      	bx	lr
 8001a84:	40007000 	.word	0x40007000
 8001a88:	20000000 	.word	0x20000000
 8001a8c:	431bde83 	.word	0x431bde83

08001a90 <HAL_RCC_OscConfig>:
 8001a90:	b580      	push	{r7, lr}
 8001a92:	b088      	sub	sp, #32
 8001a94:	af00      	add	r7, sp, #0
 8001a96:	6078      	str	r0, [r7, #4]
 8001a98:	687b      	ldr	r3, [r7, #4]
 8001a9a:	2b00      	cmp	r3, #0
 8001a9c:	d102      	bne.n	8001aa4 <HAL_RCC_OscConfig+0x14>
 8001a9e:	2301      	movs	r3, #1
 8001aa0:	f000 bc08 	b.w	80022b4 <HAL_RCC_OscConfig+0x824>
 8001aa4:	4b96      	ldr	r3, [pc, #600]	@ (8001d00 <HAL_RCC_OscConfig+0x270>)
 8001aa6:	689b      	ldr	r3, [r3, #8]
 8001aa8:	f003 030c 	and.w	r3, r3, #12
 8001aac:	61bb      	str	r3, [r7, #24]
 8001aae:	4b94      	ldr	r3, [pc, #592]	@ (8001d00 <HAL_RCC_OscConfig+0x270>)
 8001ab0:	68db      	ldr	r3, [r3, #12]
 8001ab2:	f003 0303 	and.w	r3, r3, #3
 8001ab6:	617b      	str	r3, [r7, #20]
 8001ab8:	687b      	ldr	r3, [r7, #4]
 8001aba:	681b      	ldr	r3, [r3, #0]
 8001abc:	f003 0310 	and.w	r3, r3, #16
 8001ac0:	2b00      	cmp	r3, #0
 8001ac2:	f000 80e4 	beq.w	8001c8e <HAL_RCC_OscConfig+0x1fe>
 8001ac6:	69bb      	ldr	r3, [r7, #24]
 8001ac8:	2b00      	cmp	r3, #0
 8001aca:	d007      	beq.n	8001adc <HAL_RCC_OscConfig+0x4c>
 8001acc:	69bb      	ldr	r3, [r7, #24]
 8001ace:	2b0c      	cmp	r3, #12
 8001ad0:	f040 808b 	bne.w	8001bea <HAL_RCC_OscConfig+0x15a>
 8001ad4:	697b      	ldr	r3, [r7, #20]
 8001ad6:	2b01      	cmp	r3, #1
 8001ad8:	f040 8087 	bne.w	8001bea <HAL_RCC_OscConfig+0x15a>
 8001adc:	4b88      	ldr	r3, [pc, #544]	@ (8001d00 <HAL_RCC_OscConfig+0x270>)
 8001ade:	681b      	ldr	r3, [r3, #0]
 8001ae0:	f003 0302 	and.w	r3, r3, #2
 8001ae4:	2b00      	cmp	r3, #0
 8001ae6:	d005      	beq.n	8001af4 <HAL_RCC_OscConfig+0x64>
 8001ae8:	687b      	ldr	r3, [r7, #4]
 8001aea:	699b      	ldr	r3, [r3, #24]
 8001aec:	2b00      	cmp	r3, #0
 8001aee:	d101      	bne.n	8001af4 <HAL_RCC_OscConfig+0x64>
 8001af0:	2301      	movs	r3, #1
 8001af2:	e3df      	b.n	80022b4 <HAL_RCC_OscConfig+0x824>
 8001af4:	687b      	ldr	r3, [r7, #4]
 8001af6:	6a1a      	ldr	r2, [r3, #32]
 8001af8:	4b81      	ldr	r3, [pc, #516]	@ (8001d00 <HAL_RCC_OscConfig+0x270>)
 8001afa:	681b      	ldr	r3, [r3, #0]
 8001afc:	f003 0308 	and.w	r3, r3, #8
 8001b00:	2b00      	cmp	r3, #0
 8001b02:	d004      	beq.n	8001b0e <HAL_RCC_OscConfig+0x7e>
 8001b04:	4b7e      	ldr	r3, [pc, #504]	@ (8001d00 <HAL_RCC_OscConfig+0x270>)
 8001b06:	681b      	ldr	r3, [r3, #0]
 8001b08:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8001b0c:	e005      	b.n	8001b1a <HAL_RCC_OscConfig+0x8a>
 8001b0e:	4b7c      	ldr	r3, [pc, #496]	@ (8001d00 <HAL_RCC_OscConfig+0x270>)
 8001b10:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8001b14:	091b      	lsrs	r3, r3, #4
 8001b16:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8001b1a:	4293      	cmp	r3, r2
 8001b1c:	d223      	bcs.n	8001b66 <HAL_RCC_OscConfig+0xd6>
 8001b1e:	687b      	ldr	r3, [r7, #4]
 8001b20:	6a1b      	ldr	r3, [r3, #32]
 8001b22:	4618      	mov	r0, r3
 8001b24:	f000 fd94 	bl	8002650 <RCC_SetFlashLatencyFromMSIRange>
 8001b28:	4603      	mov	r3, r0
 8001b2a:	2b00      	cmp	r3, #0
 8001b2c:	d001      	beq.n	8001b32 <HAL_RCC_OscConfig+0xa2>
 8001b2e:	2301      	movs	r3, #1
 8001b30:	e3c0      	b.n	80022b4 <HAL_RCC_OscConfig+0x824>
 8001b32:	4b73      	ldr	r3, [pc, #460]	@ (8001d00 <HAL_RCC_OscConfig+0x270>)
 8001b34:	681b      	ldr	r3, [r3, #0]
 8001b36:	4a72      	ldr	r2, [pc, #456]	@ (8001d00 <HAL_RCC_OscConfig+0x270>)
 8001b38:	f043 0308 	orr.w	r3, r3, #8
 8001b3c:	6013      	str	r3, [r2, #0]
 8001b3e:	4b70      	ldr	r3, [pc, #448]	@ (8001d00 <HAL_RCC_OscConfig+0x270>)
 8001b40:	681b      	ldr	r3, [r3, #0]
 8001b42:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8001b46:	687b      	ldr	r3, [r7, #4]
 8001b48:	6a1b      	ldr	r3, [r3, #32]
 8001b4a:	496d      	ldr	r1, [pc, #436]	@ (8001d00 <HAL_RCC_OscConfig+0x270>)
 8001b4c:	4313      	orrs	r3, r2
 8001b4e:	600b      	str	r3, [r1, #0]
 8001b50:	4b6b      	ldr	r3, [pc, #428]	@ (8001d00 <HAL_RCC_OscConfig+0x270>)
 8001b52:	685b      	ldr	r3, [r3, #4]
 8001b54:	f423 427f 	bic.w	r2, r3, #65280	@ 0xff00
 8001b58:	687b      	ldr	r3, [r7, #4]
 8001b5a:	69db      	ldr	r3, [r3, #28]
 8001b5c:	021b      	lsls	r3, r3, #8
 8001b5e:	4968      	ldr	r1, [pc, #416]	@ (8001d00 <HAL_RCC_OscConfig+0x270>)
 8001b60:	4313      	orrs	r3, r2
 8001b62:	604b      	str	r3, [r1, #4]
 8001b64:	e025      	b.n	8001bb2 <HAL_RCC_OscConfig+0x122>
 8001b66:	4b66      	ldr	r3, [pc, #408]	@ (8001d00 <HAL_RCC_OscConfig+0x270>)
 8001b68:	681b      	ldr	r3, [r3, #0]
 8001b6a:	4a65      	ldr	r2, [pc, #404]	@ (8001d00 <HAL_RCC_OscConfig+0x270>)
 8001b6c:	f043 0308 	orr.w	r3, r3, #8
 8001b70:	6013      	str	r3, [r2, #0]
 8001b72:	4b63      	ldr	r3, [pc, #396]	@ (8001d00 <HAL_RCC_OscConfig+0x270>)
 8001b74:	681b      	ldr	r3, [r3, #0]
 8001b76:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8001b7a:	687b      	ldr	r3, [r7, #4]
 8001b7c:	6a1b      	ldr	r3, [r3, #32]
 8001b7e:	4960      	ldr	r1, [pc, #384]	@ (8001d00 <HAL_RCC_OscConfig+0x270>)
 8001b80:	4313      	orrs	r3, r2
 8001b82:	600b      	str	r3, [r1, #0]
 8001b84:	4b5e      	ldr	r3, [pc, #376]	@ (8001d00 <HAL_RCC_OscConfig+0x270>)
 8001b86:	685b      	ldr	r3, [r3, #4]
 8001b88:	f423 427f 	bic.w	r2, r3, #65280	@ 0xff00
 8001b8c:	687b      	ldr	r3, [r7, #4]
 8001b8e:	69db      	ldr	r3, [r3, #28]
 8001b90:	021b      	lsls	r3, r3, #8
 8001b92:	495b      	ldr	r1, [pc, #364]	@ (8001d00 <HAL_RCC_OscConfig+0x270>)
 8001b94:	4313      	orrs	r3, r2
 8001b96:	604b      	str	r3, [r1, #4]
 8001b98:	69bb      	ldr	r3, [r7, #24]
 8001b9a:	2b00      	cmp	r3, #0
 8001b9c:	d109      	bne.n	8001bb2 <HAL_RCC_OscConfig+0x122>
 8001b9e:	687b      	ldr	r3, [r7, #4]
 8001ba0:	6a1b      	ldr	r3, [r3, #32]
 8001ba2:	4618      	mov	r0, r3
 8001ba4:	f000 fd54 	bl	8002650 <RCC_SetFlashLatencyFromMSIRange>
 8001ba8:	4603      	mov	r3, r0
 8001baa:	2b00      	cmp	r3, #0
 8001bac:	d001      	beq.n	8001bb2 <HAL_RCC_OscConfig+0x122>
 8001bae:	2301      	movs	r3, #1
 8001bb0:	e380      	b.n	80022b4 <HAL_RCC_OscConfig+0x824>
 8001bb2:	f000 fcc1 	bl	8002538 <HAL_RCC_GetSysClockFreq>
 8001bb6:	4602      	mov	r2, r0
 8001bb8:	4b51      	ldr	r3, [pc, #324]	@ (8001d00 <HAL_RCC_OscConfig+0x270>)
 8001bba:	689b      	ldr	r3, [r3, #8]
 8001bbc:	091b      	lsrs	r3, r3, #4
 8001bbe:	f003 030f 	and.w	r3, r3, #15
 8001bc2:	4950      	ldr	r1, [pc, #320]	@ (8001d04 <HAL_RCC_OscConfig+0x274>)
 8001bc4:	5ccb      	ldrb	r3, [r1, r3]
 8001bc6:	f003 031f 	and.w	r3, r3, #31
 8001bca:	fa22 f303 	lsr.w	r3, r2, r3
 8001bce:	4a4e      	ldr	r2, [pc, #312]	@ (8001d08 <HAL_RCC_OscConfig+0x278>)
 8001bd0:	6013      	str	r3, [r2, #0]
 8001bd2:	4b4e      	ldr	r3, [pc, #312]	@ (8001d0c <HAL_RCC_OscConfig+0x27c>)
 8001bd4:	681b      	ldr	r3, [r3, #0]
 8001bd6:	4618      	mov	r0, r3
 8001bd8:	f7ff fd54 	bl	8001684 <HAL_InitTick>
 8001bdc:	4603      	mov	r3, r0
 8001bde:	73fb      	strb	r3, [r7, #15]
 8001be0:	7bfb      	ldrb	r3, [r7, #15]
 8001be2:	2b00      	cmp	r3, #0
 8001be4:	d052      	beq.n	8001c8c <HAL_RCC_OscConfig+0x1fc>
 8001be6:	7bfb      	ldrb	r3, [r7, #15]
 8001be8:	e364      	b.n	80022b4 <HAL_RCC_OscConfig+0x824>
 8001bea:	687b      	ldr	r3, [r7, #4]
 8001bec:	699b      	ldr	r3, [r3, #24]
 8001bee:	2b00      	cmp	r3, #0
 8001bf0:	d032      	beq.n	8001c58 <HAL_RCC_OscConfig+0x1c8>
 8001bf2:	4b43      	ldr	r3, [pc, #268]	@ (8001d00 <HAL_RCC_OscConfig+0x270>)
 8001bf4:	681b      	ldr	r3, [r3, #0]
 8001bf6:	4a42      	ldr	r2, [pc, #264]	@ (8001d00 <HAL_RCC_OscConfig+0x270>)
 8001bf8:	f043 0301 	orr.w	r3, r3, #1
 8001bfc:	6013      	str	r3, [r2, #0]
 8001bfe:	f7ff fd91 	bl	8001724 <HAL_GetTick>
 8001c02:	6138      	str	r0, [r7, #16]
 8001c04:	e008      	b.n	8001c18 <HAL_RCC_OscConfig+0x188>
 8001c06:	f7ff fd8d 	bl	8001724 <HAL_GetTick>
 8001c0a:	4602      	mov	r2, r0
 8001c0c:	693b      	ldr	r3, [r7, #16]
 8001c0e:	1ad3      	subs	r3, r2, r3
 8001c10:	2b02      	cmp	r3, #2
 8001c12:	d901      	bls.n	8001c18 <HAL_RCC_OscConfig+0x188>
 8001c14:	2303      	movs	r3, #3
 8001c16:	e34d      	b.n	80022b4 <HAL_RCC_OscConfig+0x824>
 8001c18:	4b39      	ldr	r3, [pc, #228]	@ (8001d00 <HAL_RCC_OscConfig+0x270>)
 8001c1a:	681b      	ldr	r3, [r3, #0]
 8001c1c:	f003 0302 	and.w	r3, r3, #2
 8001c20:	2b00      	cmp	r3, #0
 8001c22:	d0f0      	beq.n	8001c06 <HAL_RCC_OscConfig+0x176>
 8001c24:	4b36      	ldr	r3, [pc, #216]	@ (8001d00 <HAL_RCC_OscConfig+0x270>)
 8001c26:	681b      	ldr	r3, [r3, #0]
 8001c28:	4a35      	ldr	r2, [pc, #212]	@ (8001d00 <HAL_RCC_OscConfig+0x270>)
 8001c2a:	f043 0308 	orr.w	r3, r3, #8
 8001c2e:	6013      	str	r3, [r2, #0]
 8001c30:	4b33      	ldr	r3, [pc, #204]	@ (8001d00 <HAL_RCC_OscConfig+0x270>)
 8001c32:	681b      	ldr	r3, [r3, #0]
 8001c34:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8001c38:	687b      	ldr	r3, [r7, #4]
 8001c3a:	6a1b      	ldr	r3, [r3, #32]
 8001c3c:	4930      	ldr	r1, [pc, #192]	@ (8001d00 <HAL_RCC_OscConfig+0x270>)
 8001c3e:	4313      	orrs	r3, r2
 8001c40:	600b      	str	r3, [r1, #0]
 8001c42:	4b2f      	ldr	r3, [pc, #188]	@ (8001d00 <HAL_RCC_OscConfig+0x270>)
 8001c44:	685b      	ldr	r3, [r3, #4]
 8001c46:	f423 427f 	bic.w	r2, r3, #65280	@ 0xff00
 8001c4a:	687b      	ldr	r3, [r7, #4]
 8001c4c:	69db      	ldr	r3, [r3, #28]
 8001c4e:	021b      	lsls	r3, r3, #8
 8001c50:	492b      	ldr	r1, [pc, #172]	@ (8001d00 <HAL_RCC_OscConfig+0x270>)
 8001c52:	4313      	orrs	r3, r2
 8001c54:	604b      	str	r3, [r1, #4]
 8001c56:	e01a      	b.n	8001c8e <HAL_RCC_OscConfig+0x1fe>
 8001c58:	4b29      	ldr	r3, [pc, #164]	@ (8001d00 <HAL_RCC_OscConfig+0x270>)
 8001c5a:	681b      	ldr	r3, [r3, #0]
 8001c5c:	4a28      	ldr	r2, [pc, #160]	@ (8001d00 <HAL_RCC_OscConfig+0x270>)
 8001c5e:	f023 0301 	bic.w	r3, r3, #1
 8001c62:	6013      	str	r3, [r2, #0]
 8001c64:	f7ff fd5e 	bl	8001724 <HAL_GetTick>
 8001c68:	6138      	str	r0, [r7, #16]
 8001c6a:	e008      	b.n	8001c7e <HAL_RCC_OscConfig+0x1ee>
 8001c6c:	f7ff fd5a 	bl	8001724 <HAL_GetTick>
 8001c70:	4602      	mov	r2, r0
 8001c72:	693b      	ldr	r3, [r7, #16]
 8001c74:	1ad3      	subs	r3, r2, r3
 8001c76:	2b02      	cmp	r3, #2
 8001c78:	d901      	bls.n	8001c7e <HAL_RCC_OscConfig+0x1ee>
 8001c7a:	2303      	movs	r3, #3
 8001c7c:	e31a      	b.n	80022b4 <HAL_RCC_OscConfig+0x824>
 8001c7e:	4b20      	ldr	r3, [pc, #128]	@ (8001d00 <HAL_RCC_OscConfig+0x270>)
 8001c80:	681b      	ldr	r3, [r3, #0]
 8001c82:	f003 0302 	and.w	r3, r3, #2
 8001c86:	2b00      	cmp	r3, #0
 8001c88:	d1f0      	bne.n	8001c6c <HAL_RCC_OscConfig+0x1dc>
 8001c8a:	e000      	b.n	8001c8e <HAL_RCC_OscConfig+0x1fe>
 8001c8c:	bf00      	nop
 8001c8e:	687b      	ldr	r3, [r7, #4]
 8001c90:	681b      	ldr	r3, [r3, #0]
 8001c92:	f003 0301 	and.w	r3, r3, #1
 8001c96:	2b00      	cmp	r3, #0
 8001c98:	d073      	beq.n	8001d82 <HAL_RCC_OscConfig+0x2f2>
 8001c9a:	69bb      	ldr	r3, [r7, #24]
 8001c9c:	2b08      	cmp	r3, #8
 8001c9e:	d005      	beq.n	8001cac <HAL_RCC_OscConfig+0x21c>
 8001ca0:	69bb      	ldr	r3, [r7, #24]
 8001ca2:	2b0c      	cmp	r3, #12
 8001ca4:	d10e      	bne.n	8001cc4 <HAL_RCC_OscConfig+0x234>
 8001ca6:	697b      	ldr	r3, [r7, #20]
 8001ca8:	2b03      	cmp	r3, #3
 8001caa:	d10b      	bne.n	8001cc4 <HAL_RCC_OscConfig+0x234>
 8001cac:	4b14      	ldr	r3, [pc, #80]	@ (8001d00 <HAL_RCC_OscConfig+0x270>)
 8001cae:	681b      	ldr	r3, [r3, #0]
 8001cb0:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001cb4:	2b00      	cmp	r3, #0
 8001cb6:	d063      	beq.n	8001d80 <HAL_RCC_OscConfig+0x2f0>
 8001cb8:	687b      	ldr	r3, [r7, #4]
 8001cba:	685b      	ldr	r3, [r3, #4]
 8001cbc:	2b00      	cmp	r3, #0
 8001cbe:	d15f      	bne.n	8001d80 <HAL_RCC_OscConfig+0x2f0>
 8001cc0:	2301      	movs	r3, #1
 8001cc2:	e2f7      	b.n	80022b4 <HAL_RCC_OscConfig+0x824>
 8001cc4:	687b      	ldr	r3, [r7, #4]
 8001cc6:	685b      	ldr	r3, [r3, #4]
 8001cc8:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8001ccc:	d106      	bne.n	8001cdc <HAL_RCC_OscConfig+0x24c>
 8001cce:	4b0c      	ldr	r3, [pc, #48]	@ (8001d00 <HAL_RCC_OscConfig+0x270>)
 8001cd0:	681b      	ldr	r3, [r3, #0]
 8001cd2:	4a0b      	ldr	r2, [pc, #44]	@ (8001d00 <HAL_RCC_OscConfig+0x270>)
 8001cd4:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8001cd8:	6013      	str	r3, [r2, #0]
 8001cda:	e025      	b.n	8001d28 <HAL_RCC_OscConfig+0x298>
 8001cdc:	687b      	ldr	r3, [r7, #4]
 8001cde:	685b      	ldr	r3, [r3, #4]
 8001ce0:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8001ce4:	d114      	bne.n	8001d10 <HAL_RCC_OscConfig+0x280>
 8001ce6:	4b06      	ldr	r3, [pc, #24]	@ (8001d00 <HAL_RCC_OscConfig+0x270>)
 8001ce8:	681b      	ldr	r3, [r3, #0]
 8001cea:	4a05      	ldr	r2, [pc, #20]	@ (8001d00 <HAL_RCC_OscConfig+0x270>)
 8001cec:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8001cf0:	6013      	str	r3, [r2, #0]
 8001cf2:	4b03      	ldr	r3, [pc, #12]	@ (8001d00 <HAL_RCC_OscConfig+0x270>)
 8001cf4:	681b      	ldr	r3, [r3, #0]
 8001cf6:	4a02      	ldr	r2, [pc, #8]	@ (8001d00 <HAL_RCC_OscConfig+0x270>)
 8001cf8:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8001cfc:	6013      	str	r3, [r2, #0]
 8001cfe:	e013      	b.n	8001d28 <HAL_RCC_OscConfig+0x298>
 8001d00:	40021000 	.word	0x40021000
 8001d04:	08006120 	.word	0x08006120
 8001d08:	20000000 	.word	0x20000000
 8001d0c:	20000004 	.word	0x20000004
 8001d10:	4ba0      	ldr	r3, [pc, #640]	@ (8001f94 <HAL_RCC_OscConfig+0x504>)
 8001d12:	681b      	ldr	r3, [r3, #0]
 8001d14:	4a9f      	ldr	r2, [pc, #636]	@ (8001f94 <HAL_RCC_OscConfig+0x504>)
 8001d16:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8001d1a:	6013      	str	r3, [r2, #0]
 8001d1c:	4b9d      	ldr	r3, [pc, #628]	@ (8001f94 <HAL_RCC_OscConfig+0x504>)
 8001d1e:	681b      	ldr	r3, [r3, #0]
 8001d20:	4a9c      	ldr	r2, [pc, #624]	@ (8001f94 <HAL_RCC_OscConfig+0x504>)
 8001d22:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8001d26:	6013      	str	r3, [r2, #0]
 8001d28:	687b      	ldr	r3, [r7, #4]
 8001d2a:	685b      	ldr	r3, [r3, #4]
 8001d2c:	2b00      	cmp	r3, #0
 8001d2e:	d013      	beq.n	8001d58 <HAL_RCC_OscConfig+0x2c8>
 8001d30:	f7ff fcf8 	bl	8001724 <HAL_GetTick>
 8001d34:	6138      	str	r0, [r7, #16]
 8001d36:	e008      	b.n	8001d4a <HAL_RCC_OscConfig+0x2ba>
 8001d38:	f7ff fcf4 	bl	8001724 <HAL_GetTick>
 8001d3c:	4602      	mov	r2, r0
 8001d3e:	693b      	ldr	r3, [r7, #16]
 8001d40:	1ad3      	subs	r3, r2, r3
 8001d42:	2b64      	cmp	r3, #100	@ 0x64
 8001d44:	d901      	bls.n	8001d4a <HAL_RCC_OscConfig+0x2ba>
 8001d46:	2303      	movs	r3, #3
 8001d48:	e2b4      	b.n	80022b4 <HAL_RCC_OscConfig+0x824>
 8001d4a:	4b92      	ldr	r3, [pc, #584]	@ (8001f94 <HAL_RCC_OscConfig+0x504>)
 8001d4c:	681b      	ldr	r3, [r3, #0]
 8001d4e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001d52:	2b00      	cmp	r3, #0
 8001d54:	d0f0      	beq.n	8001d38 <HAL_RCC_OscConfig+0x2a8>
 8001d56:	e014      	b.n	8001d82 <HAL_RCC_OscConfig+0x2f2>
 8001d58:	f7ff fce4 	bl	8001724 <HAL_GetTick>
 8001d5c:	6138      	str	r0, [r7, #16]
 8001d5e:	e008      	b.n	8001d72 <HAL_RCC_OscConfig+0x2e2>
 8001d60:	f7ff fce0 	bl	8001724 <HAL_GetTick>
 8001d64:	4602      	mov	r2, r0
 8001d66:	693b      	ldr	r3, [r7, #16]
 8001d68:	1ad3      	subs	r3, r2, r3
 8001d6a:	2b64      	cmp	r3, #100	@ 0x64
 8001d6c:	d901      	bls.n	8001d72 <HAL_RCC_OscConfig+0x2e2>
 8001d6e:	2303      	movs	r3, #3
 8001d70:	e2a0      	b.n	80022b4 <HAL_RCC_OscConfig+0x824>
 8001d72:	4b88      	ldr	r3, [pc, #544]	@ (8001f94 <HAL_RCC_OscConfig+0x504>)
 8001d74:	681b      	ldr	r3, [r3, #0]
 8001d76:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001d7a:	2b00      	cmp	r3, #0
 8001d7c:	d1f0      	bne.n	8001d60 <HAL_RCC_OscConfig+0x2d0>
 8001d7e:	e000      	b.n	8001d82 <HAL_RCC_OscConfig+0x2f2>
 8001d80:	bf00      	nop
 8001d82:	687b      	ldr	r3, [r7, #4]
 8001d84:	681b      	ldr	r3, [r3, #0]
 8001d86:	f003 0302 	and.w	r3, r3, #2
 8001d8a:	2b00      	cmp	r3, #0
 8001d8c:	d060      	beq.n	8001e50 <HAL_RCC_OscConfig+0x3c0>
 8001d8e:	69bb      	ldr	r3, [r7, #24]
 8001d90:	2b04      	cmp	r3, #4
 8001d92:	d005      	beq.n	8001da0 <HAL_RCC_OscConfig+0x310>
 8001d94:	69bb      	ldr	r3, [r7, #24]
 8001d96:	2b0c      	cmp	r3, #12
 8001d98:	d119      	bne.n	8001dce <HAL_RCC_OscConfig+0x33e>
 8001d9a:	697b      	ldr	r3, [r7, #20]
 8001d9c:	2b02      	cmp	r3, #2
 8001d9e:	d116      	bne.n	8001dce <HAL_RCC_OscConfig+0x33e>
 8001da0:	4b7c      	ldr	r3, [pc, #496]	@ (8001f94 <HAL_RCC_OscConfig+0x504>)
 8001da2:	681b      	ldr	r3, [r3, #0]
 8001da4:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8001da8:	2b00      	cmp	r3, #0
 8001daa:	d005      	beq.n	8001db8 <HAL_RCC_OscConfig+0x328>
 8001dac:	687b      	ldr	r3, [r7, #4]
 8001dae:	68db      	ldr	r3, [r3, #12]
 8001db0:	2b00      	cmp	r3, #0
 8001db2:	d101      	bne.n	8001db8 <HAL_RCC_OscConfig+0x328>
 8001db4:	2301      	movs	r3, #1
 8001db6:	e27d      	b.n	80022b4 <HAL_RCC_OscConfig+0x824>
 8001db8:	4b76      	ldr	r3, [pc, #472]	@ (8001f94 <HAL_RCC_OscConfig+0x504>)
 8001dba:	685b      	ldr	r3, [r3, #4]
 8001dbc:	f023 42fe 	bic.w	r2, r3, #2130706432	@ 0x7f000000
 8001dc0:	687b      	ldr	r3, [r7, #4]
 8001dc2:	691b      	ldr	r3, [r3, #16]
 8001dc4:	061b      	lsls	r3, r3, #24
 8001dc6:	4973      	ldr	r1, [pc, #460]	@ (8001f94 <HAL_RCC_OscConfig+0x504>)
 8001dc8:	4313      	orrs	r3, r2
 8001dca:	604b      	str	r3, [r1, #4]
 8001dcc:	e040      	b.n	8001e50 <HAL_RCC_OscConfig+0x3c0>
 8001dce:	687b      	ldr	r3, [r7, #4]
 8001dd0:	68db      	ldr	r3, [r3, #12]
 8001dd2:	2b00      	cmp	r3, #0
 8001dd4:	d023      	beq.n	8001e1e <HAL_RCC_OscConfig+0x38e>
 8001dd6:	4b6f      	ldr	r3, [pc, #444]	@ (8001f94 <HAL_RCC_OscConfig+0x504>)
 8001dd8:	681b      	ldr	r3, [r3, #0]
 8001dda:	4a6e      	ldr	r2, [pc, #440]	@ (8001f94 <HAL_RCC_OscConfig+0x504>)
 8001ddc:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001de0:	6013      	str	r3, [r2, #0]
 8001de2:	f7ff fc9f 	bl	8001724 <HAL_GetTick>
 8001de6:	6138      	str	r0, [r7, #16]
 8001de8:	e008      	b.n	8001dfc <HAL_RCC_OscConfig+0x36c>
 8001dea:	f7ff fc9b 	bl	8001724 <HAL_GetTick>
 8001dee:	4602      	mov	r2, r0
 8001df0:	693b      	ldr	r3, [r7, #16]
 8001df2:	1ad3      	subs	r3, r2, r3
 8001df4:	2b02      	cmp	r3, #2
 8001df6:	d901      	bls.n	8001dfc <HAL_RCC_OscConfig+0x36c>
 8001df8:	2303      	movs	r3, #3
 8001dfa:	e25b      	b.n	80022b4 <HAL_RCC_OscConfig+0x824>
 8001dfc:	4b65      	ldr	r3, [pc, #404]	@ (8001f94 <HAL_RCC_OscConfig+0x504>)
 8001dfe:	681b      	ldr	r3, [r3, #0]
 8001e00:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8001e04:	2b00      	cmp	r3, #0
 8001e06:	d0f0      	beq.n	8001dea <HAL_RCC_OscConfig+0x35a>
 8001e08:	4b62      	ldr	r3, [pc, #392]	@ (8001f94 <HAL_RCC_OscConfig+0x504>)
 8001e0a:	685b      	ldr	r3, [r3, #4]
 8001e0c:	f023 42fe 	bic.w	r2, r3, #2130706432	@ 0x7f000000
 8001e10:	687b      	ldr	r3, [r7, #4]
 8001e12:	691b      	ldr	r3, [r3, #16]
 8001e14:	061b      	lsls	r3, r3, #24
 8001e16:	495f      	ldr	r1, [pc, #380]	@ (8001f94 <HAL_RCC_OscConfig+0x504>)
 8001e18:	4313      	orrs	r3, r2
 8001e1a:	604b      	str	r3, [r1, #4]
 8001e1c:	e018      	b.n	8001e50 <HAL_RCC_OscConfig+0x3c0>
 8001e1e:	4b5d      	ldr	r3, [pc, #372]	@ (8001f94 <HAL_RCC_OscConfig+0x504>)
 8001e20:	681b      	ldr	r3, [r3, #0]
 8001e22:	4a5c      	ldr	r2, [pc, #368]	@ (8001f94 <HAL_RCC_OscConfig+0x504>)
 8001e24:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8001e28:	6013      	str	r3, [r2, #0]
 8001e2a:	f7ff fc7b 	bl	8001724 <HAL_GetTick>
 8001e2e:	6138      	str	r0, [r7, #16]
 8001e30:	e008      	b.n	8001e44 <HAL_RCC_OscConfig+0x3b4>
 8001e32:	f7ff fc77 	bl	8001724 <HAL_GetTick>
 8001e36:	4602      	mov	r2, r0
 8001e38:	693b      	ldr	r3, [r7, #16]
 8001e3a:	1ad3      	subs	r3, r2, r3
 8001e3c:	2b02      	cmp	r3, #2
 8001e3e:	d901      	bls.n	8001e44 <HAL_RCC_OscConfig+0x3b4>
 8001e40:	2303      	movs	r3, #3
 8001e42:	e237      	b.n	80022b4 <HAL_RCC_OscConfig+0x824>
 8001e44:	4b53      	ldr	r3, [pc, #332]	@ (8001f94 <HAL_RCC_OscConfig+0x504>)
 8001e46:	681b      	ldr	r3, [r3, #0]
 8001e48:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8001e4c:	2b00      	cmp	r3, #0
 8001e4e:	d1f0      	bne.n	8001e32 <HAL_RCC_OscConfig+0x3a2>
 8001e50:	687b      	ldr	r3, [r7, #4]
 8001e52:	681b      	ldr	r3, [r3, #0]
 8001e54:	f003 0308 	and.w	r3, r3, #8
 8001e58:	2b00      	cmp	r3, #0
 8001e5a:	d03c      	beq.n	8001ed6 <HAL_RCC_OscConfig+0x446>
 8001e5c:	687b      	ldr	r3, [r7, #4]
 8001e5e:	695b      	ldr	r3, [r3, #20]
 8001e60:	2b00      	cmp	r3, #0
 8001e62:	d01c      	beq.n	8001e9e <HAL_RCC_OscConfig+0x40e>
 8001e64:	4b4b      	ldr	r3, [pc, #300]	@ (8001f94 <HAL_RCC_OscConfig+0x504>)
 8001e66:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8001e6a:	4a4a      	ldr	r2, [pc, #296]	@ (8001f94 <HAL_RCC_OscConfig+0x504>)
 8001e6c:	f043 0301 	orr.w	r3, r3, #1
 8001e70:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
 8001e74:	f7ff fc56 	bl	8001724 <HAL_GetTick>
 8001e78:	6138      	str	r0, [r7, #16]
 8001e7a:	e008      	b.n	8001e8e <HAL_RCC_OscConfig+0x3fe>
 8001e7c:	f7ff fc52 	bl	8001724 <HAL_GetTick>
 8001e80:	4602      	mov	r2, r0
 8001e82:	693b      	ldr	r3, [r7, #16]
 8001e84:	1ad3      	subs	r3, r2, r3
 8001e86:	2b02      	cmp	r3, #2
 8001e88:	d901      	bls.n	8001e8e <HAL_RCC_OscConfig+0x3fe>
 8001e8a:	2303      	movs	r3, #3
 8001e8c:	e212      	b.n	80022b4 <HAL_RCC_OscConfig+0x824>
 8001e8e:	4b41      	ldr	r3, [pc, #260]	@ (8001f94 <HAL_RCC_OscConfig+0x504>)
 8001e90:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8001e94:	f003 0302 	and.w	r3, r3, #2
 8001e98:	2b00      	cmp	r3, #0
 8001e9a:	d0ef      	beq.n	8001e7c <HAL_RCC_OscConfig+0x3ec>
 8001e9c:	e01b      	b.n	8001ed6 <HAL_RCC_OscConfig+0x446>
 8001e9e:	4b3d      	ldr	r3, [pc, #244]	@ (8001f94 <HAL_RCC_OscConfig+0x504>)
 8001ea0:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8001ea4:	4a3b      	ldr	r2, [pc, #236]	@ (8001f94 <HAL_RCC_OscConfig+0x504>)
 8001ea6:	f023 0301 	bic.w	r3, r3, #1
 8001eaa:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
 8001eae:	f7ff fc39 	bl	8001724 <HAL_GetTick>
 8001eb2:	6138      	str	r0, [r7, #16]
 8001eb4:	e008      	b.n	8001ec8 <HAL_RCC_OscConfig+0x438>
 8001eb6:	f7ff fc35 	bl	8001724 <HAL_GetTick>
 8001eba:	4602      	mov	r2, r0
 8001ebc:	693b      	ldr	r3, [r7, #16]
 8001ebe:	1ad3      	subs	r3, r2, r3
 8001ec0:	2b02      	cmp	r3, #2
 8001ec2:	d901      	bls.n	8001ec8 <HAL_RCC_OscConfig+0x438>
 8001ec4:	2303      	movs	r3, #3
 8001ec6:	e1f5      	b.n	80022b4 <HAL_RCC_OscConfig+0x824>
 8001ec8:	4b32      	ldr	r3, [pc, #200]	@ (8001f94 <HAL_RCC_OscConfig+0x504>)
 8001eca:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8001ece:	f003 0302 	and.w	r3, r3, #2
 8001ed2:	2b00      	cmp	r3, #0
 8001ed4:	d1ef      	bne.n	8001eb6 <HAL_RCC_OscConfig+0x426>
 8001ed6:	687b      	ldr	r3, [r7, #4]
 8001ed8:	681b      	ldr	r3, [r3, #0]
 8001eda:	f003 0304 	and.w	r3, r3, #4
 8001ede:	2b00      	cmp	r3, #0
 8001ee0:	f000 80a6 	beq.w	8002030 <HAL_RCC_OscConfig+0x5a0>
 8001ee4:	2300      	movs	r3, #0
 8001ee6:	77fb      	strb	r3, [r7, #31]
 8001ee8:	4b2a      	ldr	r3, [pc, #168]	@ (8001f94 <HAL_RCC_OscConfig+0x504>)
 8001eea:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001eec:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001ef0:	2b00      	cmp	r3, #0
 8001ef2:	d10d      	bne.n	8001f10 <HAL_RCC_OscConfig+0x480>
 8001ef4:	4b27      	ldr	r3, [pc, #156]	@ (8001f94 <HAL_RCC_OscConfig+0x504>)
 8001ef6:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001ef8:	4a26      	ldr	r2, [pc, #152]	@ (8001f94 <HAL_RCC_OscConfig+0x504>)
 8001efa:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001efe:	6593      	str	r3, [r2, #88]	@ 0x58
 8001f00:	4b24      	ldr	r3, [pc, #144]	@ (8001f94 <HAL_RCC_OscConfig+0x504>)
 8001f02:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001f04:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001f08:	60bb      	str	r3, [r7, #8]
 8001f0a:	68bb      	ldr	r3, [r7, #8]
 8001f0c:	2301      	movs	r3, #1
 8001f0e:	77fb      	strb	r3, [r7, #31]
 8001f10:	4b21      	ldr	r3, [pc, #132]	@ (8001f98 <HAL_RCC_OscConfig+0x508>)
 8001f12:	681b      	ldr	r3, [r3, #0]
 8001f14:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8001f18:	2b00      	cmp	r3, #0
 8001f1a:	d118      	bne.n	8001f4e <HAL_RCC_OscConfig+0x4be>
 8001f1c:	4b1e      	ldr	r3, [pc, #120]	@ (8001f98 <HAL_RCC_OscConfig+0x508>)
 8001f1e:	681b      	ldr	r3, [r3, #0]
 8001f20:	4a1d      	ldr	r2, [pc, #116]	@ (8001f98 <HAL_RCC_OscConfig+0x508>)
 8001f22:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001f26:	6013      	str	r3, [r2, #0]
 8001f28:	f7ff fbfc 	bl	8001724 <HAL_GetTick>
 8001f2c:	6138      	str	r0, [r7, #16]
 8001f2e:	e008      	b.n	8001f42 <HAL_RCC_OscConfig+0x4b2>
 8001f30:	f7ff fbf8 	bl	8001724 <HAL_GetTick>
 8001f34:	4602      	mov	r2, r0
 8001f36:	693b      	ldr	r3, [r7, #16]
 8001f38:	1ad3      	subs	r3, r2, r3
 8001f3a:	2b02      	cmp	r3, #2
 8001f3c:	d901      	bls.n	8001f42 <HAL_RCC_OscConfig+0x4b2>
 8001f3e:	2303      	movs	r3, #3
 8001f40:	e1b8      	b.n	80022b4 <HAL_RCC_OscConfig+0x824>
 8001f42:	4b15      	ldr	r3, [pc, #84]	@ (8001f98 <HAL_RCC_OscConfig+0x508>)
 8001f44:	681b      	ldr	r3, [r3, #0]
 8001f46:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8001f4a:	2b00      	cmp	r3, #0
 8001f4c:	d0f0      	beq.n	8001f30 <HAL_RCC_OscConfig+0x4a0>
 8001f4e:	687b      	ldr	r3, [r7, #4]
 8001f50:	689b      	ldr	r3, [r3, #8]
 8001f52:	2b01      	cmp	r3, #1
 8001f54:	d108      	bne.n	8001f68 <HAL_RCC_OscConfig+0x4d8>
 8001f56:	4b0f      	ldr	r3, [pc, #60]	@ (8001f94 <HAL_RCC_OscConfig+0x504>)
 8001f58:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8001f5c:	4a0d      	ldr	r2, [pc, #52]	@ (8001f94 <HAL_RCC_OscConfig+0x504>)
 8001f5e:	f043 0301 	orr.w	r3, r3, #1
 8001f62:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8001f66:	e029      	b.n	8001fbc <HAL_RCC_OscConfig+0x52c>
 8001f68:	687b      	ldr	r3, [r7, #4]
 8001f6a:	689b      	ldr	r3, [r3, #8]
 8001f6c:	2b05      	cmp	r3, #5
 8001f6e:	d115      	bne.n	8001f9c <HAL_RCC_OscConfig+0x50c>
 8001f70:	4b08      	ldr	r3, [pc, #32]	@ (8001f94 <HAL_RCC_OscConfig+0x504>)
 8001f72:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8001f76:	4a07      	ldr	r2, [pc, #28]	@ (8001f94 <HAL_RCC_OscConfig+0x504>)
 8001f78:	f043 0304 	orr.w	r3, r3, #4
 8001f7c:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8001f80:	4b04      	ldr	r3, [pc, #16]	@ (8001f94 <HAL_RCC_OscConfig+0x504>)
 8001f82:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8001f86:	4a03      	ldr	r2, [pc, #12]	@ (8001f94 <HAL_RCC_OscConfig+0x504>)
 8001f88:	f043 0301 	orr.w	r3, r3, #1
 8001f8c:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8001f90:	e014      	b.n	8001fbc <HAL_RCC_OscConfig+0x52c>
 8001f92:	bf00      	nop
 8001f94:	40021000 	.word	0x40021000
 8001f98:	40007000 	.word	0x40007000
 8001f9c:	4b9d      	ldr	r3, [pc, #628]	@ (8002214 <HAL_RCC_OscConfig+0x784>)
 8001f9e:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8001fa2:	4a9c      	ldr	r2, [pc, #624]	@ (8002214 <HAL_RCC_OscConfig+0x784>)
 8001fa4:	f023 0301 	bic.w	r3, r3, #1
 8001fa8:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8001fac:	4b99      	ldr	r3, [pc, #612]	@ (8002214 <HAL_RCC_OscConfig+0x784>)
 8001fae:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8001fb2:	4a98      	ldr	r2, [pc, #608]	@ (8002214 <HAL_RCC_OscConfig+0x784>)
 8001fb4:	f023 0304 	bic.w	r3, r3, #4
 8001fb8:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8001fbc:	687b      	ldr	r3, [r7, #4]
 8001fbe:	689b      	ldr	r3, [r3, #8]
 8001fc0:	2b00      	cmp	r3, #0
 8001fc2:	d016      	beq.n	8001ff2 <HAL_RCC_OscConfig+0x562>
 8001fc4:	f7ff fbae 	bl	8001724 <HAL_GetTick>
 8001fc8:	6138      	str	r0, [r7, #16]
 8001fca:	e00a      	b.n	8001fe2 <HAL_RCC_OscConfig+0x552>
 8001fcc:	f7ff fbaa 	bl	8001724 <HAL_GetTick>
 8001fd0:	4602      	mov	r2, r0
 8001fd2:	693b      	ldr	r3, [r7, #16]
 8001fd4:	1ad3      	subs	r3, r2, r3
 8001fd6:	f241 3288 	movw	r2, #5000	@ 0x1388
 8001fda:	4293      	cmp	r3, r2
 8001fdc:	d901      	bls.n	8001fe2 <HAL_RCC_OscConfig+0x552>
 8001fde:	2303      	movs	r3, #3
 8001fe0:	e168      	b.n	80022b4 <HAL_RCC_OscConfig+0x824>
 8001fe2:	4b8c      	ldr	r3, [pc, #560]	@ (8002214 <HAL_RCC_OscConfig+0x784>)
 8001fe4:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8001fe8:	f003 0302 	and.w	r3, r3, #2
 8001fec:	2b00      	cmp	r3, #0
 8001fee:	d0ed      	beq.n	8001fcc <HAL_RCC_OscConfig+0x53c>
 8001ff0:	e015      	b.n	800201e <HAL_RCC_OscConfig+0x58e>
 8001ff2:	f7ff fb97 	bl	8001724 <HAL_GetTick>
 8001ff6:	6138      	str	r0, [r7, #16]
 8001ff8:	e00a      	b.n	8002010 <HAL_RCC_OscConfig+0x580>
 8001ffa:	f7ff fb93 	bl	8001724 <HAL_GetTick>
 8001ffe:	4602      	mov	r2, r0
 8002000:	693b      	ldr	r3, [r7, #16]
 8002002:	1ad3      	subs	r3, r2, r3
 8002004:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002008:	4293      	cmp	r3, r2
 800200a:	d901      	bls.n	8002010 <HAL_RCC_OscConfig+0x580>
 800200c:	2303      	movs	r3, #3
 800200e:	e151      	b.n	80022b4 <HAL_RCC_OscConfig+0x824>
 8002010:	4b80      	ldr	r3, [pc, #512]	@ (8002214 <HAL_RCC_OscConfig+0x784>)
 8002012:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8002016:	f003 0302 	and.w	r3, r3, #2
 800201a:	2b00      	cmp	r3, #0
 800201c:	d1ed      	bne.n	8001ffa <HAL_RCC_OscConfig+0x56a>
 800201e:	7ffb      	ldrb	r3, [r7, #31]
 8002020:	2b01      	cmp	r3, #1
 8002022:	d105      	bne.n	8002030 <HAL_RCC_OscConfig+0x5a0>
 8002024:	4b7b      	ldr	r3, [pc, #492]	@ (8002214 <HAL_RCC_OscConfig+0x784>)
 8002026:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002028:	4a7a      	ldr	r2, [pc, #488]	@ (8002214 <HAL_RCC_OscConfig+0x784>)
 800202a:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800202e:	6593      	str	r3, [r2, #88]	@ 0x58
 8002030:	687b      	ldr	r3, [r7, #4]
 8002032:	681b      	ldr	r3, [r3, #0]
 8002034:	f003 0320 	and.w	r3, r3, #32
 8002038:	2b00      	cmp	r3, #0
 800203a:	d03c      	beq.n	80020b6 <HAL_RCC_OscConfig+0x626>
 800203c:	687b      	ldr	r3, [r7, #4]
 800203e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002040:	2b00      	cmp	r3, #0
 8002042:	d01c      	beq.n	800207e <HAL_RCC_OscConfig+0x5ee>
 8002044:	4b73      	ldr	r3, [pc, #460]	@ (8002214 <HAL_RCC_OscConfig+0x784>)
 8002046:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 800204a:	4a72      	ldr	r2, [pc, #456]	@ (8002214 <HAL_RCC_OscConfig+0x784>)
 800204c:	f043 0301 	orr.w	r3, r3, #1
 8002050:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98
 8002054:	f7ff fb66 	bl	8001724 <HAL_GetTick>
 8002058:	6138      	str	r0, [r7, #16]
 800205a:	e008      	b.n	800206e <HAL_RCC_OscConfig+0x5de>
 800205c:	f7ff fb62 	bl	8001724 <HAL_GetTick>
 8002060:	4602      	mov	r2, r0
 8002062:	693b      	ldr	r3, [r7, #16]
 8002064:	1ad3      	subs	r3, r2, r3
 8002066:	2b02      	cmp	r3, #2
 8002068:	d901      	bls.n	800206e <HAL_RCC_OscConfig+0x5de>
 800206a:	2303      	movs	r3, #3
 800206c:	e122      	b.n	80022b4 <HAL_RCC_OscConfig+0x824>
 800206e:	4b69      	ldr	r3, [pc, #420]	@ (8002214 <HAL_RCC_OscConfig+0x784>)
 8002070:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8002074:	f003 0302 	and.w	r3, r3, #2
 8002078:	2b00      	cmp	r3, #0
 800207a:	d0ef      	beq.n	800205c <HAL_RCC_OscConfig+0x5cc>
 800207c:	e01b      	b.n	80020b6 <HAL_RCC_OscConfig+0x626>
 800207e:	4b65      	ldr	r3, [pc, #404]	@ (8002214 <HAL_RCC_OscConfig+0x784>)
 8002080:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8002084:	4a63      	ldr	r2, [pc, #396]	@ (8002214 <HAL_RCC_OscConfig+0x784>)
 8002086:	f023 0301 	bic.w	r3, r3, #1
 800208a:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98
 800208e:	f7ff fb49 	bl	8001724 <HAL_GetTick>
 8002092:	6138      	str	r0, [r7, #16]
 8002094:	e008      	b.n	80020a8 <HAL_RCC_OscConfig+0x618>
 8002096:	f7ff fb45 	bl	8001724 <HAL_GetTick>
 800209a:	4602      	mov	r2, r0
 800209c:	693b      	ldr	r3, [r7, #16]
 800209e:	1ad3      	subs	r3, r2, r3
 80020a0:	2b02      	cmp	r3, #2
 80020a2:	d901      	bls.n	80020a8 <HAL_RCC_OscConfig+0x618>
 80020a4:	2303      	movs	r3, #3
 80020a6:	e105      	b.n	80022b4 <HAL_RCC_OscConfig+0x824>
 80020a8:	4b5a      	ldr	r3, [pc, #360]	@ (8002214 <HAL_RCC_OscConfig+0x784>)
 80020aa:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 80020ae:	f003 0302 	and.w	r3, r3, #2
 80020b2:	2b00      	cmp	r3, #0
 80020b4:	d1ef      	bne.n	8002096 <HAL_RCC_OscConfig+0x606>
 80020b6:	687b      	ldr	r3, [r7, #4]
 80020b8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80020ba:	2b00      	cmp	r3, #0
 80020bc:	f000 80f9 	beq.w	80022b2 <HAL_RCC_OscConfig+0x822>
 80020c0:	687b      	ldr	r3, [r7, #4]
 80020c2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80020c4:	2b02      	cmp	r3, #2
 80020c6:	f040 80cf 	bne.w	8002268 <HAL_RCC_OscConfig+0x7d8>
 80020ca:	4b52      	ldr	r3, [pc, #328]	@ (8002214 <HAL_RCC_OscConfig+0x784>)
 80020cc:	68db      	ldr	r3, [r3, #12]
 80020ce:	617b      	str	r3, [r7, #20]
 80020d0:	697b      	ldr	r3, [r7, #20]
 80020d2:	f003 0203 	and.w	r2, r3, #3
 80020d6:	687b      	ldr	r3, [r7, #4]
 80020d8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80020da:	429a      	cmp	r2, r3
 80020dc:	d12c      	bne.n	8002138 <HAL_RCC_OscConfig+0x6a8>
 80020de:	697b      	ldr	r3, [r7, #20]
 80020e0:	f003 02f0 	and.w	r2, r3, #240	@ 0xf0
 80020e4:	687b      	ldr	r3, [r7, #4]
 80020e6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80020e8:	3b01      	subs	r3, #1
 80020ea:	011b      	lsls	r3, r3, #4
 80020ec:	429a      	cmp	r2, r3
 80020ee:	d123      	bne.n	8002138 <HAL_RCC_OscConfig+0x6a8>
 80020f0:	697b      	ldr	r3, [r7, #20]
 80020f2:	f403 42fe 	and.w	r2, r3, #32512	@ 0x7f00
 80020f6:	687b      	ldr	r3, [r7, #4]
 80020f8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80020fa:	021b      	lsls	r3, r3, #8
 80020fc:	429a      	cmp	r2, r3
 80020fe:	d11b      	bne.n	8002138 <HAL_RCC_OscConfig+0x6a8>
 8002100:	697b      	ldr	r3, [r7, #20]
 8002102:	f003 4278 	and.w	r2, r3, #4160749568	@ 0xf8000000
 8002106:	687b      	ldr	r3, [r7, #4]
 8002108:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800210a:	06db      	lsls	r3, r3, #27
 800210c:	429a      	cmp	r2, r3
 800210e:	d113      	bne.n	8002138 <HAL_RCC_OscConfig+0x6a8>
 8002110:	697b      	ldr	r3, [r7, #20]
 8002112:	f403 02c0 	and.w	r2, r3, #6291456	@ 0x600000
 8002116:	687b      	ldr	r3, [r7, #4]
 8002118:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800211a:	085b      	lsrs	r3, r3, #1
 800211c:	3b01      	subs	r3, #1
 800211e:	055b      	lsls	r3, r3, #21
 8002120:	429a      	cmp	r2, r3
 8002122:	d109      	bne.n	8002138 <HAL_RCC_OscConfig+0x6a8>
 8002124:	697b      	ldr	r3, [r7, #20]
 8002126:	f003 62c0 	and.w	r2, r3, #100663296	@ 0x6000000
 800212a:	687b      	ldr	r3, [r7, #4]
 800212c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800212e:	085b      	lsrs	r3, r3, #1
 8002130:	3b01      	subs	r3, #1
 8002132:	065b      	lsls	r3, r3, #25
 8002134:	429a      	cmp	r2, r3
 8002136:	d071      	beq.n	800221c <HAL_RCC_OscConfig+0x78c>
 8002138:	69bb      	ldr	r3, [r7, #24]
 800213a:	2b0c      	cmp	r3, #12
 800213c:	d068      	beq.n	8002210 <HAL_RCC_OscConfig+0x780>
 800213e:	4b35      	ldr	r3, [pc, #212]	@ (8002214 <HAL_RCC_OscConfig+0x784>)
 8002140:	681b      	ldr	r3, [r3, #0]
 8002142:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 8002146:	2b00      	cmp	r3, #0
 8002148:	d105      	bne.n	8002156 <HAL_RCC_OscConfig+0x6c6>
 800214a:	4b32      	ldr	r3, [pc, #200]	@ (8002214 <HAL_RCC_OscConfig+0x784>)
 800214c:	681b      	ldr	r3, [r3, #0]
 800214e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002152:	2b00      	cmp	r3, #0
 8002154:	d001      	beq.n	800215a <HAL_RCC_OscConfig+0x6ca>
 8002156:	2301      	movs	r3, #1
 8002158:	e0ac      	b.n	80022b4 <HAL_RCC_OscConfig+0x824>
 800215a:	4b2e      	ldr	r3, [pc, #184]	@ (8002214 <HAL_RCC_OscConfig+0x784>)
 800215c:	681b      	ldr	r3, [r3, #0]
 800215e:	4a2d      	ldr	r2, [pc, #180]	@ (8002214 <HAL_RCC_OscConfig+0x784>)
 8002160:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8002164:	6013      	str	r3, [r2, #0]
 8002166:	f7ff fadd 	bl	8001724 <HAL_GetTick>
 800216a:	6138      	str	r0, [r7, #16]
 800216c:	e008      	b.n	8002180 <HAL_RCC_OscConfig+0x6f0>
 800216e:	f7ff fad9 	bl	8001724 <HAL_GetTick>
 8002172:	4602      	mov	r2, r0
 8002174:	693b      	ldr	r3, [r7, #16]
 8002176:	1ad3      	subs	r3, r2, r3
 8002178:	2b02      	cmp	r3, #2
 800217a:	d901      	bls.n	8002180 <HAL_RCC_OscConfig+0x6f0>
 800217c:	2303      	movs	r3, #3
 800217e:	e099      	b.n	80022b4 <HAL_RCC_OscConfig+0x824>
 8002180:	4b24      	ldr	r3, [pc, #144]	@ (8002214 <HAL_RCC_OscConfig+0x784>)
 8002182:	681b      	ldr	r3, [r3, #0]
 8002184:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002188:	2b00      	cmp	r3, #0
 800218a:	d1f0      	bne.n	800216e <HAL_RCC_OscConfig+0x6de>
 800218c:	4b21      	ldr	r3, [pc, #132]	@ (8002214 <HAL_RCC_OscConfig+0x784>)
 800218e:	68da      	ldr	r2, [r3, #12]
 8002190:	4b21      	ldr	r3, [pc, #132]	@ (8002218 <HAL_RCC_OscConfig+0x788>)
 8002192:	4013      	ands	r3, r2
 8002194:	687a      	ldr	r2, [r7, #4]
 8002196:	6ad1      	ldr	r1, [r2, #44]	@ 0x2c
 8002198:	687a      	ldr	r2, [r7, #4]
 800219a:	6b12      	ldr	r2, [r2, #48]	@ 0x30
 800219c:	3a01      	subs	r2, #1
 800219e:	0112      	lsls	r2, r2, #4
 80021a0:	4311      	orrs	r1, r2
 80021a2:	687a      	ldr	r2, [r7, #4]
 80021a4:	6b52      	ldr	r2, [r2, #52]	@ 0x34
 80021a6:	0212      	lsls	r2, r2, #8
 80021a8:	4311      	orrs	r1, r2
 80021aa:	687a      	ldr	r2, [r7, #4]
 80021ac:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 80021ae:	0852      	lsrs	r2, r2, #1
 80021b0:	3a01      	subs	r2, #1
 80021b2:	0552      	lsls	r2, r2, #21
 80021b4:	4311      	orrs	r1, r2
 80021b6:	687a      	ldr	r2, [r7, #4]
 80021b8:	6c12      	ldr	r2, [r2, #64]	@ 0x40
 80021ba:	0852      	lsrs	r2, r2, #1
 80021bc:	3a01      	subs	r2, #1
 80021be:	0652      	lsls	r2, r2, #25
 80021c0:	4311      	orrs	r1, r2
 80021c2:	687a      	ldr	r2, [r7, #4]
 80021c4:	6b92      	ldr	r2, [r2, #56]	@ 0x38
 80021c6:	06d2      	lsls	r2, r2, #27
 80021c8:	430a      	orrs	r2, r1
 80021ca:	4912      	ldr	r1, [pc, #72]	@ (8002214 <HAL_RCC_OscConfig+0x784>)
 80021cc:	4313      	orrs	r3, r2
 80021ce:	60cb      	str	r3, [r1, #12]
 80021d0:	4b10      	ldr	r3, [pc, #64]	@ (8002214 <HAL_RCC_OscConfig+0x784>)
 80021d2:	681b      	ldr	r3, [r3, #0]
 80021d4:	4a0f      	ldr	r2, [pc, #60]	@ (8002214 <HAL_RCC_OscConfig+0x784>)
 80021d6:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80021da:	6013      	str	r3, [r2, #0]
 80021dc:	4b0d      	ldr	r3, [pc, #52]	@ (8002214 <HAL_RCC_OscConfig+0x784>)
 80021de:	68db      	ldr	r3, [r3, #12]
 80021e0:	4a0c      	ldr	r2, [pc, #48]	@ (8002214 <HAL_RCC_OscConfig+0x784>)
 80021e2:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80021e6:	60d3      	str	r3, [r2, #12]
 80021e8:	f7ff fa9c 	bl	8001724 <HAL_GetTick>
 80021ec:	6138      	str	r0, [r7, #16]
 80021ee:	e008      	b.n	8002202 <HAL_RCC_OscConfig+0x772>
 80021f0:	f7ff fa98 	bl	8001724 <HAL_GetTick>
 80021f4:	4602      	mov	r2, r0
 80021f6:	693b      	ldr	r3, [r7, #16]
 80021f8:	1ad3      	subs	r3, r2, r3
 80021fa:	2b02      	cmp	r3, #2
 80021fc:	d901      	bls.n	8002202 <HAL_RCC_OscConfig+0x772>
 80021fe:	2303      	movs	r3, #3
 8002200:	e058      	b.n	80022b4 <HAL_RCC_OscConfig+0x824>
 8002202:	4b04      	ldr	r3, [pc, #16]	@ (8002214 <HAL_RCC_OscConfig+0x784>)
 8002204:	681b      	ldr	r3, [r3, #0]
 8002206:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800220a:	2b00      	cmp	r3, #0
 800220c:	d0f0      	beq.n	80021f0 <HAL_RCC_OscConfig+0x760>
 800220e:	e050      	b.n	80022b2 <HAL_RCC_OscConfig+0x822>
 8002210:	2301      	movs	r3, #1
 8002212:	e04f      	b.n	80022b4 <HAL_RCC_OscConfig+0x824>
 8002214:	40021000 	.word	0x40021000
 8002218:	019d800c 	.word	0x019d800c
 800221c:	4b27      	ldr	r3, [pc, #156]	@ (80022bc <HAL_RCC_OscConfig+0x82c>)
 800221e:	681b      	ldr	r3, [r3, #0]
 8002220:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002224:	2b00      	cmp	r3, #0
 8002226:	d144      	bne.n	80022b2 <HAL_RCC_OscConfig+0x822>
 8002228:	4b24      	ldr	r3, [pc, #144]	@ (80022bc <HAL_RCC_OscConfig+0x82c>)
 800222a:	681b      	ldr	r3, [r3, #0]
 800222c:	4a23      	ldr	r2, [pc, #140]	@ (80022bc <HAL_RCC_OscConfig+0x82c>)
 800222e:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8002232:	6013      	str	r3, [r2, #0]
 8002234:	4b21      	ldr	r3, [pc, #132]	@ (80022bc <HAL_RCC_OscConfig+0x82c>)
 8002236:	68db      	ldr	r3, [r3, #12]
 8002238:	4a20      	ldr	r2, [pc, #128]	@ (80022bc <HAL_RCC_OscConfig+0x82c>)
 800223a:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 800223e:	60d3      	str	r3, [r2, #12]
 8002240:	f7ff fa70 	bl	8001724 <HAL_GetTick>
 8002244:	6138      	str	r0, [r7, #16]
 8002246:	e008      	b.n	800225a <HAL_RCC_OscConfig+0x7ca>
 8002248:	f7ff fa6c 	bl	8001724 <HAL_GetTick>
 800224c:	4602      	mov	r2, r0
 800224e:	693b      	ldr	r3, [r7, #16]
 8002250:	1ad3      	subs	r3, r2, r3
 8002252:	2b02      	cmp	r3, #2
 8002254:	d901      	bls.n	800225a <HAL_RCC_OscConfig+0x7ca>
 8002256:	2303      	movs	r3, #3
 8002258:	e02c      	b.n	80022b4 <HAL_RCC_OscConfig+0x824>
 800225a:	4b18      	ldr	r3, [pc, #96]	@ (80022bc <HAL_RCC_OscConfig+0x82c>)
 800225c:	681b      	ldr	r3, [r3, #0]
 800225e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002262:	2b00      	cmp	r3, #0
 8002264:	d0f0      	beq.n	8002248 <HAL_RCC_OscConfig+0x7b8>
 8002266:	e024      	b.n	80022b2 <HAL_RCC_OscConfig+0x822>
 8002268:	69bb      	ldr	r3, [r7, #24]
 800226a:	2b0c      	cmp	r3, #12
 800226c:	d01f      	beq.n	80022ae <HAL_RCC_OscConfig+0x81e>
 800226e:	4b13      	ldr	r3, [pc, #76]	@ (80022bc <HAL_RCC_OscConfig+0x82c>)
 8002270:	681b      	ldr	r3, [r3, #0]
 8002272:	4a12      	ldr	r2, [pc, #72]	@ (80022bc <HAL_RCC_OscConfig+0x82c>)
 8002274:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8002278:	6013      	str	r3, [r2, #0]
 800227a:	f7ff fa53 	bl	8001724 <HAL_GetTick>
 800227e:	6138      	str	r0, [r7, #16]
 8002280:	e008      	b.n	8002294 <HAL_RCC_OscConfig+0x804>
 8002282:	f7ff fa4f 	bl	8001724 <HAL_GetTick>
 8002286:	4602      	mov	r2, r0
 8002288:	693b      	ldr	r3, [r7, #16]
 800228a:	1ad3      	subs	r3, r2, r3
 800228c:	2b02      	cmp	r3, #2
 800228e:	d901      	bls.n	8002294 <HAL_RCC_OscConfig+0x804>
 8002290:	2303      	movs	r3, #3
 8002292:	e00f      	b.n	80022b4 <HAL_RCC_OscConfig+0x824>
 8002294:	4b09      	ldr	r3, [pc, #36]	@ (80022bc <HAL_RCC_OscConfig+0x82c>)
 8002296:	681b      	ldr	r3, [r3, #0]
 8002298:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800229c:	2b00      	cmp	r3, #0
 800229e:	d1f0      	bne.n	8002282 <HAL_RCC_OscConfig+0x7f2>
 80022a0:	4b06      	ldr	r3, [pc, #24]	@ (80022bc <HAL_RCC_OscConfig+0x82c>)
 80022a2:	68da      	ldr	r2, [r3, #12]
 80022a4:	4905      	ldr	r1, [pc, #20]	@ (80022bc <HAL_RCC_OscConfig+0x82c>)
 80022a6:	4b06      	ldr	r3, [pc, #24]	@ (80022c0 <HAL_RCC_OscConfig+0x830>)
 80022a8:	4013      	ands	r3, r2
 80022aa:	60cb      	str	r3, [r1, #12]
 80022ac:	e001      	b.n	80022b2 <HAL_RCC_OscConfig+0x822>
 80022ae:	2301      	movs	r3, #1
 80022b0:	e000      	b.n	80022b4 <HAL_RCC_OscConfig+0x824>
 80022b2:	2300      	movs	r3, #0
 80022b4:	4618      	mov	r0, r3
 80022b6:	3720      	adds	r7, #32
 80022b8:	46bd      	mov	sp, r7
 80022ba:	bd80      	pop	{r7, pc}
 80022bc:	40021000 	.word	0x40021000
 80022c0:	feeefffc 	.word	0xfeeefffc

080022c4 <HAL_RCC_ClockConfig>:
 80022c4:	b580      	push	{r7, lr}
 80022c6:	b086      	sub	sp, #24
 80022c8:	af00      	add	r7, sp, #0
 80022ca:	6078      	str	r0, [r7, #4]
 80022cc:	6039      	str	r1, [r7, #0]
 80022ce:	2300      	movs	r3, #0
 80022d0:	617b      	str	r3, [r7, #20]
 80022d2:	687b      	ldr	r3, [r7, #4]
 80022d4:	2b00      	cmp	r3, #0
 80022d6:	d101      	bne.n	80022dc <HAL_RCC_ClockConfig+0x18>
 80022d8:	2301      	movs	r3, #1
 80022da:	e11d      	b.n	8002518 <HAL_RCC_ClockConfig+0x254>
 80022dc:	4b90      	ldr	r3, [pc, #576]	@ (8002520 <HAL_RCC_ClockConfig+0x25c>)
 80022de:	681b      	ldr	r3, [r3, #0]
 80022e0:	f003 030f 	and.w	r3, r3, #15
 80022e4:	683a      	ldr	r2, [r7, #0]
 80022e6:	429a      	cmp	r2, r3
 80022e8:	d910      	bls.n	800230c <HAL_RCC_ClockConfig+0x48>
 80022ea:	4b8d      	ldr	r3, [pc, #564]	@ (8002520 <HAL_RCC_ClockConfig+0x25c>)
 80022ec:	681b      	ldr	r3, [r3, #0]
 80022ee:	f023 020f 	bic.w	r2, r3, #15
 80022f2:	498b      	ldr	r1, [pc, #556]	@ (8002520 <HAL_RCC_ClockConfig+0x25c>)
 80022f4:	683b      	ldr	r3, [r7, #0]
 80022f6:	4313      	orrs	r3, r2
 80022f8:	600b      	str	r3, [r1, #0]
 80022fa:	4b89      	ldr	r3, [pc, #548]	@ (8002520 <HAL_RCC_ClockConfig+0x25c>)
 80022fc:	681b      	ldr	r3, [r3, #0]
 80022fe:	f003 030f 	and.w	r3, r3, #15
 8002302:	683a      	ldr	r2, [r7, #0]
 8002304:	429a      	cmp	r2, r3
 8002306:	d001      	beq.n	800230c <HAL_RCC_ClockConfig+0x48>
 8002308:	2301      	movs	r3, #1
 800230a:	e105      	b.n	8002518 <HAL_RCC_ClockConfig+0x254>
 800230c:	687b      	ldr	r3, [r7, #4]
 800230e:	681b      	ldr	r3, [r3, #0]
 8002310:	f003 0302 	and.w	r3, r3, #2
 8002314:	2b00      	cmp	r3, #0
 8002316:	d010      	beq.n	800233a <HAL_RCC_ClockConfig+0x76>
 8002318:	687b      	ldr	r3, [r7, #4]
 800231a:	689a      	ldr	r2, [r3, #8]
 800231c:	4b81      	ldr	r3, [pc, #516]	@ (8002524 <HAL_RCC_ClockConfig+0x260>)
 800231e:	689b      	ldr	r3, [r3, #8]
 8002320:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8002324:	429a      	cmp	r2, r3
 8002326:	d908      	bls.n	800233a <HAL_RCC_ClockConfig+0x76>
 8002328:	4b7e      	ldr	r3, [pc, #504]	@ (8002524 <HAL_RCC_ClockConfig+0x260>)
 800232a:	689b      	ldr	r3, [r3, #8]
 800232c:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8002330:	687b      	ldr	r3, [r7, #4]
 8002332:	689b      	ldr	r3, [r3, #8]
 8002334:	497b      	ldr	r1, [pc, #492]	@ (8002524 <HAL_RCC_ClockConfig+0x260>)
 8002336:	4313      	orrs	r3, r2
 8002338:	608b      	str	r3, [r1, #8]
 800233a:	687b      	ldr	r3, [r7, #4]
 800233c:	681b      	ldr	r3, [r3, #0]
 800233e:	f003 0301 	and.w	r3, r3, #1
 8002342:	2b00      	cmp	r3, #0
 8002344:	d079      	beq.n	800243a <HAL_RCC_ClockConfig+0x176>
 8002346:	687b      	ldr	r3, [r7, #4]
 8002348:	685b      	ldr	r3, [r3, #4]
 800234a:	2b03      	cmp	r3, #3
 800234c:	d11e      	bne.n	800238c <HAL_RCC_ClockConfig+0xc8>
 800234e:	4b75      	ldr	r3, [pc, #468]	@ (8002524 <HAL_RCC_ClockConfig+0x260>)
 8002350:	681b      	ldr	r3, [r3, #0]
 8002352:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002356:	2b00      	cmp	r3, #0
 8002358:	d101      	bne.n	800235e <HAL_RCC_ClockConfig+0x9a>
 800235a:	2301      	movs	r3, #1
 800235c:	e0dc      	b.n	8002518 <HAL_RCC_ClockConfig+0x254>
 800235e:	f000 f9d1 	bl	8002704 <RCC_GetSysClockFreqFromPLLSource>
 8002362:	4603      	mov	r3, r0
 8002364:	4a70      	ldr	r2, [pc, #448]	@ (8002528 <HAL_RCC_ClockConfig+0x264>)
 8002366:	4293      	cmp	r3, r2
 8002368:	d946      	bls.n	80023f8 <HAL_RCC_ClockConfig+0x134>
 800236a:	4b6e      	ldr	r3, [pc, #440]	@ (8002524 <HAL_RCC_ClockConfig+0x260>)
 800236c:	689b      	ldr	r3, [r3, #8]
 800236e:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8002372:	2b00      	cmp	r3, #0
 8002374:	d140      	bne.n	80023f8 <HAL_RCC_ClockConfig+0x134>
 8002376:	4b6b      	ldr	r3, [pc, #428]	@ (8002524 <HAL_RCC_ClockConfig+0x260>)
 8002378:	689b      	ldr	r3, [r3, #8]
 800237a:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 800237e:	4a69      	ldr	r2, [pc, #420]	@ (8002524 <HAL_RCC_ClockConfig+0x260>)
 8002380:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8002384:	6093      	str	r3, [r2, #8]
 8002386:	2380      	movs	r3, #128	@ 0x80
 8002388:	617b      	str	r3, [r7, #20]
 800238a:	e035      	b.n	80023f8 <HAL_RCC_ClockConfig+0x134>
 800238c:	687b      	ldr	r3, [r7, #4]
 800238e:	685b      	ldr	r3, [r3, #4]
 8002390:	2b02      	cmp	r3, #2
 8002392:	d107      	bne.n	80023a4 <HAL_RCC_ClockConfig+0xe0>
 8002394:	4b63      	ldr	r3, [pc, #396]	@ (8002524 <HAL_RCC_ClockConfig+0x260>)
 8002396:	681b      	ldr	r3, [r3, #0]
 8002398:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800239c:	2b00      	cmp	r3, #0
 800239e:	d115      	bne.n	80023cc <HAL_RCC_ClockConfig+0x108>
 80023a0:	2301      	movs	r3, #1
 80023a2:	e0b9      	b.n	8002518 <HAL_RCC_ClockConfig+0x254>
 80023a4:	687b      	ldr	r3, [r7, #4]
 80023a6:	685b      	ldr	r3, [r3, #4]
 80023a8:	2b00      	cmp	r3, #0
 80023aa:	d107      	bne.n	80023bc <HAL_RCC_ClockConfig+0xf8>
 80023ac:	4b5d      	ldr	r3, [pc, #372]	@ (8002524 <HAL_RCC_ClockConfig+0x260>)
 80023ae:	681b      	ldr	r3, [r3, #0]
 80023b0:	f003 0302 	and.w	r3, r3, #2
 80023b4:	2b00      	cmp	r3, #0
 80023b6:	d109      	bne.n	80023cc <HAL_RCC_ClockConfig+0x108>
 80023b8:	2301      	movs	r3, #1
 80023ba:	e0ad      	b.n	8002518 <HAL_RCC_ClockConfig+0x254>
 80023bc:	4b59      	ldr	r3, [pc, #356]	@ (8002524 <HAL_RCC_ClockConfig+0x260>)
 80023be:	681b      	ldr	r3, [r3, #0]
 80023c0:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80023c4:	2b00      	cmp	r3, #0
 80023c6:	d101      	bne.n	80023cc <HAL_RCC_ClockConfig+0x108>
 80023c8:	2301      	movs	r3, #1
 80023ca:	e0a5      	b.n	8002518 <HAL_RCC_ClockConfig+0x254>
 80023cc:	f000 f8b4 	bl	8002538 <HAL_RCC_GetSysClockFreq>
 80023d0:	4603      	mov	r3, r0
 80023d2:	4a55      	ldr	r2, [pc, #340]	@ (8002528 <HAL_RCC_ClockConfig+0x264>)
 80023d4:	4293      	cmp	r3, r2
 80023d6:	d90f      	bls.n	80023f8 <HAL_RCC_ClockConfig+0x134>
 80023d8:	4b52      	ldr	r3, [pc, #328]	@ (8002524 <HAL_RCC_ClockConfig+0x260>)
 80023da:	689b      	ldr	r3, [r3, #8]
 80023dc:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 80023e0:	2b00      	cmp	r3, #0
 80023e2:	d109      	bne.n	80023f8 <HAL_RCC_ClockConfig+0x134>
 80023e4:	4b4f      	ldr	r3, [pc, #316]	@ (8002524 <HAL_RCC_ClockConfig+0x260>)
 80023e6:	689b      	ldr	r3, [r3, #8]
 80023e8:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 80023ec:	4a4d      	ldr	r2, [pc, #308]	@ (8002524 <HAL_RCC_ClockConfig+0x260>)
 80023ee:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80023f2:	6093      	str	r3, [r2, #8]
 80023f4:	2380      	movs	r3, #128	@ 0x80
 80023f6:	617b      	str	r3, [r7, #20]
 80023f8:	4b4a      	ldr	r3, [pc, #296]	@ (8002524 <HAL_RCC_ClockConfig+0x260>)
 80023fa:	689b      	ldr	r3, [r3, #8]
 80023fc:	f023 0203 	bic.w	r2, r3, #3
 8002400:	687b      	ldr	r3, [r7, #4]
 8002402:	685b      	ldr	r3, [r3, #4]
 8002404:	4947      	ldr	r1, [pc, #284]	@ (8002524 <HAL_RCC_ClockConfig+0x260>)
 8002406:	4313      	orrs	r3, r2
 8002408:	608b      	str	r3, [r1, #8]
 800240a:	f7ff f98b 	bl	8001724 <HAL_GetTick>
 800240e:	6138      	str	r0, [r7, #16]
 8002410:	e00a      	b.n	8002428 <HAL_RCC_ClockConfig+0x164>
 8002412:	f7ff f987 	bl	8001724 <HAL_GetTick>
 8002416:	4602      	mov	r2, r0
 8002418:	693b      	ldr	r3, [r7, #16]
 800241a:	1ad3      	subs	r3, r2, r3
 800241c:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002420:	4293      	cmp	r3, r2
 8002422:	d901      	bls.n	8002428 <HAL_RCC_ClockConfig+0x164>
 8002424:	2303      	movs	r3, #3
 8002426:	e077      	b.n	8002518 <HAL_RCC_ClockConfig+0x254>
 8002428:	4b3e      	ldr	r3, [pc, #248]	@ (8002524 <HAL_RCC_ClockConfig+0x260>)
 800242a:	689b      	ldr	r3, [r3, #8]
 800242c:	f003 020c 	and.w	r2, r3, #12
 8002430:	687b      	ldr	r3, [r7, #4]
 8002432:	685b      	ldr	r3, [r3, #4]
 8002434:	009b      	lsls	r3, r3, #2
 8002436:	429a      	cmp	r2, r3
 8002438:	d1eb      	bne.n	8002412 <HAL_RCC_ClockConfig+0x14e>
 800243a:	697b      	ldr	r3, [r7, #20]
 800243c:	2b80      	cmp	r3, #128	@ 0x80
 800243e:	d105      	bne.n	800244c <HAL_RCC_ClockConfig+0x188>
 8002440:	4b38      	ldr	r3, [pc, #224]	@ (8002524 <HAL_RCC_ClockConfig+0x260>)
 8002442:	689b      	ldr	r3, [r3, #8]
 8002444:	4a37      	ldr	r2, [pc, #220]	@ (8002524 <HAL_RCC_ClockConfig+0x260>)
 8002446:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 800244a:	6093      	str	r3, [r2, #8]
 800244c:	687b      	ldr	r3, [r7, #4]
 800244e:	681b      	ldr	r3, [r3, #0]
 8002450:	f003 0302 	and.w	r3, r3, #2
 8002454:	2b00      	cmp	r3, #0
 8002456:	d010      	beq.n	800247a <HAL_RCC_ClockConfig+0x1b6>
 8002458:	687b      	ldr	r3, [r7, #4]
 800245a:	689a      	ldr	r2, [r3, #8]
 800245c:	4b31      	ldr	r3, [pc, #196]	@ (8002524 <HAL_RCC_ClockConfig+0x260>)
 800245e:	689b      	ldr	r3, [r3, #8]
 8002460:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8002464:	429a      	cmp	r2, r3
 8002466:	d208      	bcs.n	800247a <HAL_RCC_ClockConfig+0x1b6>
 8002468:	4b2e      	ldr	r3, [pc, #184]	@ (8002524 <HAL_RCC_ClockConfig+0x260>)
 800246a:	689b      	ldr	r3, [r3, #8]
 800246c:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8002470:	687b      	ldr	r3, [r7, #4]
 8002472:	689b      	ldr	r3, [r3, #8]
 8002474:	492b      	ldr	r1, [pc, #172]	@ (8002524 <HAL_RCC_ClockConfig+0x260>)
 8002476:	4313      	orrs	r3, r2
 8002478:	608b      	str	r3, [r1, #8]
 800247a:	4b29      	ldr	r3, [pc, #164]	@ (8002520 <HAL_RCC_ClockConfig+0x25c>)
 800247c:	681b      	ldr	r3, [r3, #0]
 800247e:	f003 030f 	and.w	r3, r3, #15
 8002482:	683a      	ldr	r2, [r7, #0]
 8002484:	429a      	cmp	r2, r3
 8002486:	d210      	bcs.n	80024aa <HAL_RCC_ClockConfig+0x1e6>
 8002488:	4b25      	ldr	r3, [pc, #148]	@ (8002520 <HAL_RCC_ClockConfig+0x25c>)
 800248a:	681b      	ldr	r3, [r3, #0]
 800248c:	f023 020f 	bic.w	r2, r3, #15
 8002490:	4923      	ldr	r1, [pc, #140]	@ (8002520 <HAL_RCC_ClockConfig+0x25c>)
 8002492:	683b      	ldr	r3, [r7, #0]
 8002494:	4313      	orrs	r3, r2
 8002496:	600b      	str	r3, [r1, #0]
 8002498:	4b21      	ldr	r3, [pc, #132]	@ (8002520 <HAL_RCC_ClockConfig+0x25c>)
 800249a:	681b      	ldr	r3, [r3, #0]
 800249c:	f003 030f 	and.w	r3, r3, #15
 80024a0:	683a      	ldr	r2, [r7, #0]
 80024a2:	429a      	cmp	r2, r3
 80024a4:	d001      	beq.n	80024aa <HAL_RCC_ClockConfig+0x1e6>
 80024a6:	2301      	movs	r3, #1
 80024a8:	e036      	b.n	8002518 <HAL_RCC_ClockConfig+0x254>
 80024aa:	687b      	ldr	r3, [r7, #4]
 80024ac:	681b      	ldr	r3, [r3, #0]
 80024ae:	f003 0304 	and.w	r3, r3, #4
 80024b2:	2b00      	cmp	r3, #0
 80024b4:	d008      	beq.n	80024c8 <HAL_RCC_ClockConfig+0x204>
 80024b6:	4b1b      	ldr	r3, [pc, #108]	@ (8002524 <HAL_RCC_ClockConfig+0x260>)
 80024b8:	689b      	ldr	r3, [r3, #8]
 80024ba:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 80024be:	687b      	ldr	r3, [r7, #4]
 80024c0:	68db      	ldr	r3, [r3, #12]
 80024c2:	4918      	ldr	r1, [pc, #96]	@ (8002524 <HAL_RCC_ClockConfig+0x260>)
 80024c4:	4313      	orrs	r3, r2
 80024c6:	608b      	str	r3, [r1, #8]
 80024c8:	687b      	ldr	r3, [r7, #4]
 80024ca:	681b      	ldr	r3, [r3, #0]
 80024cc:	f003 0308 	and.w	r3, r3, #8
 80024d0:	2b00      	cmp	r3, #0
 80024d2:	d009      	beq.n	80024e8 <HAL_RCC_ClockConfig+0x224>
 80024d4:	4b13      	ldr	r3, [pc, #76]	@ (8002524 <HAL_RCC_ClockConfig+0x260>)
 80024d6:	689b      	ldr	r3, [r3, #8]
 80024d8:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 80024dc:	687b      	ldr	r3, [r7, #4]
 80024de:	691b      	ldr	r3, [r3, #16]
 80024e0:	00db      	lsls	r3, r3, #3
 80024e2:	4910      	ldr	r1, [pc, #64]	@ (8002524 <HAL_RCC_ClockConfig+0x260>)
 80024e4:	4313      	orrs	r3, r2
 80024e6:	608b      	str	r3, [r1, #8]
 80024e8:	f000 f826 	bl	8002538 <HAL_RCC_GetSysClockFreq>
 80024ec:	4602      	mov	r2, r0
 80024ee:	4b0d      	ldr	r3, [pc, #52]	@ (8002524 <HAL_RCC_ClockConfig+0x260>)
 80024f0:	689b      	ldr	r3, [r3, #8]
 80024f2:	091b      	lsrs	r3, r3, #4
 80024f4:	f003 030f 	and.w	r3, r3, #15
 80024f8:	490c      	ldr	r1, [pc, #48]	@ (800252c <HAL_RCC_ClockConfig+0x268>)
 80024fa:	5ccb      	ldrb	r3, [r1, r3]
 80024fc:	f003 031f 	and.w	r3, r3, #31
 8002500:	fa22 f303 	lsr.w	r3, r2, r3
 8002504:	4a0a      	ldr	r2, [pc, #40]	@ (8002530 <HAL_RCC_ClockConfig+0x26c>)
 8002506:	6013      	str	r3, [r2, #0]
 8002508:	4b0a      	ldr	r3, [pc, #40]	@ (8002534 <HAL_RCC_ClockConfig+0x270>)
 800250a:	681b      	ldr	r3, [r3, #0]
 800250c:	4618      	mov	r0, r3
 800250e:	f7ff f8b9 	bl	8001684 <HAL_InitTick>
 8002512:	4603      	mov	r3, r0
 8002514:	73fb      	strb	r3, [r7, #15]
 8002516:	7bfb      	ldrb	r3, [r7, #15]
 8002518:	4618      	mov	r0, r3
 800251a:	3718      	adds	r7, #24
 800251c:	46bd      	mov	sp, r7
 800251e:	bd80      	pop	{r7, pc}
 8002520:	40022000 	.word	0x40022000
 8002524:	40021000 	.word	0x40021000
 8002528:	04c4b400 	.word	0x04c4b400
 800252c:	08006120 	.word	0x08006120
 8002530:	20000000 	.word	0x20000000
 8002534:	20000004 	.word	0x20000004

08002538 <HAL_RCC_GetSysClockFreq>:
 8002538:	b480      	push	{r7}
 800253a:	b089      	sub	sp, #36	@ 0x24
 800253c:	af00      	add	r7, sp, #0
 800253e:	2300      	movs	r3, #0
 8002540:	61fb      	str	r3, [r7, #28]
 8002542:	2300      	movs	r3, #0
 8002544:	61bb      	str	r3, [r7, #24]
 8002546:	4b3e      	ldr	r3, [pc, #248]	@ (8002640 <HAL_RCC_GetSysClockFreq+0x108>)
 8002548:	689b      	ldr	r3, [r3, #8]
 800254a:	f003 030c 	and.w	r3, r3, #12
 800254e:	613b      	str	r3, [r7, #16]
 8002550:	4b3b      	ldr	r3, [pc, #236]	@ (8002640 <HAL_RCC_GetSysClockFreq+0x108>)
 8002552:	68db      	ldr	r3, [r3, #12]
 8002554:	f003 0303 	and.w	r3, r3, #3
 8002558:	60fb      	str	r3, [r7, #12]
 800255a:	693b      	ldr	r3, [r7, #16]
 800255c:	2b00      	cmp	r3, #0
 800255e:	d005      	beq.n	800256c <HAL_RCC_GetSysClockFreq+0x34>
 8002560:	693b      	ldr	r3, [r7, #16]
 8002562:	2b0c      	cmp	r3, #12
 8002564:	d121      	bne.n	80025aa <HAL_RCC_GetSysClockFreq+0x72>
 8002566:	68fb      	ldr	r3, [r7, #12]
 8002568:	2b01      	cmp	r3, #1
 800256a:	d11e      	bne.n	80025aa <HAL_RCC_GetSysClockFreq+0x72>
 800256c:	4b34      	ldr	r3, [pc, #208]	@ (8002640 <HAL_RCC_GetSysClockFreq+0x108>)
 800256e:	681b      	ldr	r3, [r3, #0]
 8002570:	f003 0308 	and.w	r3, r3, #8
 8002574:	2b00      	cmp	r3, #0
 8002576:	d107      	bne.n	8002588 <HAL_RCC_GetSysClockFreq+0x50>
 8002578:	4b31      	ldr	r3, [pc, #196]	@ (8002640 <HAL_RCC_GetSysClockFreq+0x108>)
 800257a:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 800257e:	0a1b      	lsrs	r3, r3, #8
 8002580:	f003 030f 	and.w	r3, r3, #15
 8002584:	61fb      	str	r3, [r7, #28]
 8002586:	e005      	b.n	8002594 <HAL_RCC_GetSysClockFreq+0x5c>
 8002588:	4b2d      	ldr	r3, [pc, #180]	@ (8002640 <HAL_RCC_GetSysClockFreq+0x108>)
 800258a:	681b      	ldr	r3, [r3, #0]
 800258c:	091b      	lsrs	r3, r3, #4
 800258e:	f003 030f 	and.w	r3, r3, #15
 8002592:	61fb      	str	r3, [r7, #28]
 8002594:	4a2b      	ldr	r2, [pc, #172]	@ (8002644 <HAL_RCC_GetSysClockFreq+0x10c>)
 8002596:	69fb      	ldr	r3, [r7, #28]
 8002598:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800259c:	61fb      	str	r3, [r7, #28]
 800259e:	693b      	ldr	r3, [r7, #16]
 80025a0:	2b00      	cmp	r3, #0
 80025a2:	d10d      	bne.n	80025c0 <HAL_RCC_GetSysClockFreq+0x88>
 80025a4:	69fb      	ldr	r3, [r7, #28]
 80025a6:	61bb      	str	r3, [r7, #24]
 80025a8:	e00a      	b.n	80025c0 <HAL_RCC_GetSysClockFreq+0x88>
 80025aa:	693b      	ldr	r3, [r7, #16]
 80025ac:	2b04      	cmp	r3, #4
 80025ae:	d102      	bne.n	80025b6 <HAL_RCC_GetSysClockFreq+0x7e>
 80025b0:	4b25      	ldr	r3, [pc, #148]	@ (8002648 <HAL_RCC_GetSysClockFreq+0x110>)
 80025b2:	61bb      	str	r3, [r7, #24]
 80025b4:	e004      	b.n	80025c0 <HAL_RCC_GetSysClockFreq+0x88>
 80025b6:	693b      	ldr	r3, [r7, #16]
 80025b8:	2b08      	cmp	r3, #8
 80025ba:	d101      	bne.n	80025c0 <HAL_RCC_GetSysClockFreq+0x88>
 80025bc:	4b23      	ldr	r3, [pc, #140]	@ (800264c <HAL_RCC_GetSysClockFreq+0x114>)
 80025be:	61bb      	str	r3, [r7, #24]
 80025c0:	693b      	ldr	r3, [r7, #16]
 80025c2:	2b0c      	cmp	r3, #12
 80025c4:	d134      	bne.n	8002630 <HAL_RCC_GetSysClockFreq+0xf8>
 80025c6:	4b1e      	ldr	r3, [pc, #120]	@ (8002640 <HAL_RCC_GetSysClockFreq+0x108>)
 80025c8:	68db      	ldr	r3, [r3, #12]
 80025ca:	f003 0303 	and.w	r3, r3, #3
 80025ce:	60bb      	str	r3, [r7, #8]
 80025d0:	68bb      	ldr	r3, [r7, #8]
 80025d2:	2b02      	cmp	r3, #2
 80025d4:	d003      	beq.n	80025de <HAL_RCC_GetSysClockFreq+0xa6>
 80025d6:	68bb      	ldr	r3, [r7, #8]
 80025d8:	2b03      	cmp	r3, #3
 80025da:	d003      	beq.n	80025e4 <HAL_RCC_GetSysClockFreq+0xac>
 80025dc:	e005      	b.n	80025ea <HAL_RCC_GetSysClockFreq+0xb2>
 80025de:	4b1a      	ldr	r3, [pc, #104]	@ (8002648 <HAL_RCC_GetSysClockFreq+0x110>)
 80025e0:	617b      	str	r3, [r7, #20]
 80025e2:	e005      	b.n	80025f0 <HAL_RCC_GetSysClockFreq+0xb8>
 80025e4:	4b19      	ldr	r3, [pc, #100]	@ (800264c <HAL_RCC_GetSysClockFreq+0x114>)
 80025e6:	617b      	str	r3, [r7, #20]
 80025e8:	e002      	b.n	80025f0 <HAL_RCC_GetSysClockFreq+0xb8>
 80025ea:	69fb      	ldr	r3, [r7, #28]
 80025ec:	617b      	str	r3, [r7, #20]
 80025ee:	bf00      	nop
 80025f0:	4b13      	ldr	r3, [pc, #76]	@ (8002640 <HAL_RCC_GetSysClockFreq+0x108>)
 80025f2:	68db      	ldr	r3, [r3, #12]
 80025f4:	091b      	lsrs	r3, r3, #4
 80025f6:	f003 030f 	and.w	r3, r3, #15
 80025fa:	3301      	adds	r3, #1
 80025fc:	607b      	str	r3, [r7, #4]
 80025fe:	4b10      	ldr	r3, [pc, #64]	@ (8002640 <HAL_RCC_GetSysClockFreq+0x108>)
 8002600:	68db      	ldr	r3, [r3, #12]
 8002602:	0a1b      	lsrs	r3, r3, #8
 8002604:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8002608:	697a      	ldr	r2, [r7, #20]
 800260a:	fb03 f202 	mul.w	r2, r3, r2
 800260e:	687b      	ldr	r3, [r7, #4]
 8002610:	fbb2 f3f3 	udiv	r3, r2, r3
 8002614:	617b      	str	r3, [r7, #20]
 8002616:	4b0a      	ldr	r3, [pc, #40]	@ (8002640 <HAL_RCC_GetSysClockFreq+0x108>)
 8002618:	68db      	ldr	r3, [r3, #12]
 800261a:	0e5b      	lsrs	r3, r3, #25
 800261c:	f003 0303 	and.w	r3, r3, #3
 8002620:	3301      	adds	r3, #1
 8002622:	005b      	lsls	r3, r3, #1
 8002624:	603b      	str	r3, [r7, #0]
 8002626:	697a      	ldr	r2, [r7, #20]
 8002628:	683b      	ldr	r3, [r7, #0]
 800262a:	fbb2 f3f3 	udiv	r3, r2, r3
 800262e:	61bb      	str	r3, [r7, #24]
 8002630:	69bb      	ldr	r3, [r7, #24]
 8002632:	4618      	mov	r0, r3
 8002634:	3724      	adds	r7, #36	@ 0x24
 8002636:	46bd      	mov	sp, r7
 8002638:	f85d 7b04 	ldr.w	r7, [sp], #4
 800263c:	4770      	bx	lr
 800263e:	bf00      	nop
 8002640:	40021000 	.word	0x40021000
 8002644:	08006130 	.word	0x08006130
 8002648:	00f42400 	.word	0x00f42400
 800264c:	007a1200 	.word	0x007a1200

08002650 <RCC_SetFlashLatencyFromMSIRange>:
 8002650:	b580      	push	{r7, lr}
 8002652:	b086      	sub	sp, #24
 8002654:	af00      	add	r7, sp, #0
 8002656:	6078      	str	r0, [r7, #4]
 8002658:	2300      	movs	r3, #0
 800265a:	613b      	str	r3, [r7, #16]
 800265c:	4b27      	ldr	r3, [pc, #156]	@ (80026fc <RCC_SetFlashLatencyFromMSIRange+0xac>)
 800265e:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002660:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002664:	2b00      	cmp	r3, #0
 8002666:	d003      	beq.n	8002670 <RCC_SetFlashLatencyFromMSIRange+0x20>
 8002668:	f7ff f94e 	bl	8001908 <HAL_PWREx_GetVoltageRange>
 800266c:	6178      	str	r0, [r7, #20]
 800266e:	e014      	b.n	800269a <RCC_SetFlashLatencyFromMSIRange+0x4a>
 8002670:	4b22      	ldr	r3, [pc, #136]	@ (80026fc <RCC_SetFlashLatencyFromMSIRange+0xac>)
 8002672:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002674:	4a21      	ldr	r2, [pc, #132]	@ (80026fc <RCC_SetFlashLatencyFromMSIRange+0xac>)
 8002676:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800267a:	6593      	str	r3, [r2, #88]	@ 0x58
 800267c:	4b1f      	ldr	r3, [pc, #124]	@ (80026fc <RCC_SetFlashLatencyFromMSIRange+0xac>)
 800267e:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002680:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002684:	60fb      	str	r3, [r7, #12]
 8002686:	68fb      	ldr	r3, [r7, #12]
 8002688:	f7ff f93e 	bl	8001908 <HAL_PWREx_GetVoltageRange>
 800268c:	6178      	str	r0, [r7, #20]
 800268e:	4b1b      	ldr	r3, [pc, #108]	@ (80026fc <RCC_SetFlashLatencyFromMSIRange+0xac>)
 8002690:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002692:	4a1a      	ldr	r2, [pc, #104]	@ (80026fc <RCC_SetFlashLatencyFromMSIRange+0xac>)
 8002694:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8002698:	6593      	str	r3, [r2, #88]	@ 0x58
 800269a:	697b      	ldr	r3, [r7, #20]
 800269c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80026a0:	d10b      	bne.n	80026ba <RCC_SetFlashLatencyFromMSIRange+0x6a>
 80026a2:	687b      	ldr	r3, [r7, #4]
 80026a4:	2b80      	cmp	r3, #128	@ 0x80
 80026a6:	d913      	bls.n	80026d0 <RCC_SetFlashLatencyFromMSIRange+0x80>
 80026a8:	687b      	ldr	r3, [r7, #4]
 80026aa:	2ba0      	cmp	r3, #160	@ 0xa0
 80026ac:	d902      	bls.n	80026b4 <RCC_SetFlashLatencyFromMSIRange+0x64>
 80026ae:	2302      	movs	r3, #2
 80026b0:	613b      	str	r3, [r7, #16]
 80026b2:	e00d      	b.n	80026d0 <RCC_SetFlashLatencyFromMSIRange+0x80>
 80026b4:	2301      	movs	r3, #1
 80026b6:	613b      	str	r3, [r7, #16]
 80026b8:	e00a      	b.n	80026d0 <RCC_SetFlashLatencyFromMSIRange+0x80>
 80026ba:	687b      	ldr	r3, [r7, #4]
 80026bc:	2b7f      	cmp	r3, #127	@ 0x7f
 80026be:	d902      	bls.n	80026c6 <RCC_SetFlashLatencyFromMSIRange+0x76>
 80026c0:	2302      	movs	r3, #2
 80026c2:	613b      	str	r3, [r7, #16]
 80026c4:	e004      	b.n	80026d0 <RCC_SetFlashLatencyFromMSIRange+0x80>
 80026c6:	687b      	ldr	r3, [r7, #4]
 80026c8:	2b70      	cmp	r3, #112	@ 0x70
 80026ca:	d101      	bne.n	80026d0 <RCC_SetFlashLatencyFromMSIRange+0x80>
 80026cc:	2301      	movs	r3, #1
 80026ce:	613b      	str	r3, [r7, #16]
 80026d0:	4b0b      	ldr	r3, [pc, #44]	@ (8002700 <RCC_SetFlashLatencyFromMSIRange+0xb0>)
 80026d2:	681b      	ldr	r3, [r3, #0]
 80026d4:	f023 020f 	bic.w	r2, r3, #15
 80026d8:	4909      	ldr	r1, [pc, #36]	@ (8002700 <RCC_SetFlashLatencyFromMSIRange+0xb0>)
 80026da:	693b      	ldr	r3, [r7, #16]
 80026dc:	4313      	orrs	r3, r2
 80026de:	600b      	str	r3, [r1, #0]
 80026e0:	4b07      	ldr	r3, [pc, #28]	@ (8002700 <RCC_SetFlashLatencyFromMSIRange+0xb0>)
 80026e2:	681b      	ldr	r3, [r3, #0]
 80026e4:	f003 030f 	and.w	r3, r3, #15
 80026e8:	693a      	ldr	r2, [r7, #16]
 80026ea:	429a      	cmp	r2, r3
 80026ec:	d001      	beq.n	80026f2 <RCC_SetFlashLatencyFromMSIRange+0xa2>
 80026ee:	2301      	movs	r3, #1
 80026f0:	e000      	b.n	80026f4 <RCC_SetFlashLatencyFromMSIRange+0xa4>
 80026f2:	2300      	movs	r3, #0
 80026f4:	4618      	mov	r0, r3
 80026f6:	3718      	adds	r7, #24
 80026f8:	46bd      	mov	sp, r7
 80026fa:	bd80      	pop	{r7, pc}
 80026fc:	40021000 	.word	0x40021000
 8002700:	40022000 	.word	0x40022000

08002704 <RCC_GetSysClockFreqFromPLLSource>:
 8002704:	b480      	push	{r7}
 8002706:	b087      	sub	sp, #28
 8002708:	af00      	add	r7, sp, #0
 800270a:	4b2d      	ldr	r3, [pc, #180]	@ (80027c0 <RCC_GetSysClockFreqFromPLLSource+0xbc>)
 800270c:	68db      	ldr	r3, [r3, #12]
 800270e:	f003 0303 	and.w	r3, r3, #3
 8002712:	60fb      	str	r3, [r7, #12]
 8002714:	68fb      	ldr	r3, [r7, #12]
 8002716:	2b03      	cmp	r3, #3
 8002718:	d00b      	beq.n	8002732 <RCC_GetSysClockFreqFromPLLSource+0x2e>
 800271a:	68fb      	ldr	r3, [r7, #12]
 800271c:	2b03      	cmp	r3, #3
 800271e:	d825      	bhi.n	800276c <RCC_GetSysClockFreqFromPLLSource+0x68>
 8002720:	68fb      	ldr	r3, [r7, #12]
 8002722:	2b01      	cmp	r3, #1
 8002724:	d008      	beq.n	8002738 <RCC_GetSysClockFreqFromPLLSource+0x34>
 8002726:	68fb      	ldr	r3, [r7, #12]
 8002728:	2b02      	cmp	r3, #2
 800272a:	d11f      	bne.n	800276c <RCC_GetSysClockFreqFromPLLSource+0x68>
 800272c:	4b25      	ldr	r3, [pc, #148]	@ (80027c4 <RCC_GetSysClockFreqFromPLLSource+0xc0>)
 800272e:	613b      	str	r3, [r7, #16]
 8002730:	e01f      	b.n	8002772 <RCC_GetSysClockFreqFromPLLSource+0x6e>
 8002732:	4b25      	ldr	r3, [pc, #148]	@ (80027c8 <RCC_GetSysClockFreqFromPLLSource+0xc4>)
 8002734:	613b      	str	r3, [r7, #16]
 8002736:	e01c      	b.n	8002772 <RCC_GetSysClockFreqFromPLLSource+0x6e>
 8002738:	4b21      	ldr	r3, [pc, #132]	@ (80027c0 <RCC_GetSysClockFreqFromPLLSource+0xbc>)
 800273a:	681b      	ldr	r3, [r3, #0]
 800273c:	f003 0308 	and.w	r3, r3, #8
 8002740:	2b00      	cmp	r3, #0
 8002742:	d107      	bne.n	8002754 <RCC_GetSysClockFreqFromPLLSource+0x50>
 8002744:	4b1e      	ldr	r3, [pc, #120]	@ (80027c0 <RCC_GetSysClockFreqFromPLLSource+0xbc>)
 8002746:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 800274a:	0a1b      	lsrs	r3, r3, #8
 800274c:	f003 030f 	and.w	r3, r3, #15
 8002750:	617b      	str	r3, [r7, #20]
 8002752:	e005      	b.n	8002760 <RCC_GetSysClockFreqFromPLLSource+0x5c>
 8002754:	4b1a      	ldr	r3, [pc, #104]	@ (80027c0 <RCC_GetSysClockFreqFromPLLSource+0xbc>)
 8002756:	681b      	ldr	r3, [r3, #0]
 8002758:	091b      	lsrs	r3, r3, #4
 800275a:	f003 030f 	and.w	r3, r3, #15
 800275e:	617b      	str	r3, [r7, #20]
 8002760:	4a1a      	ldr	r2, [pc, #104]	@ (80027cc <RCC_GetSysClockFreqFromPLLSource+0xc8>)
 8002762:	697b      	ldr	r3, [r7, #20]
 8002764:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002768:	613b      	str	r3, [r7, #16]
 800276a:	e002      	b.n	8002772 <RCC_GetSysClockFreqFromPLLSource+0x6e>
 800276c:	2300      	movs	r3, #0
 800276e:	613b      	str	r3, [r7, #16]
 8002770:	bf00      	nop
 8002772:	4b13      	ldr	r3, [pc, #76]	@ (80027c0 <RCC_GetSysClockFreqFromPLLSource+0xbc>)
 8002774:	68db      	ldr	r3, [r3, #12]
 8002776:	091b      	lsrs	r3, r3, #4
 8002778:	f003 030f 	and.w	r3, r3, #15
 800277c:	3301      	adds	r3, #1
 800277e:	60bb      	str	r3, [r7, #8]
 8002780:	4b0f      	ldr	r3, [pc, #60]	@ (80027c0 <RCC_GetSysClockFreqFromPLLSource+0xbc>)
 8002782:	68db      	ldr	r3, [r3, #12]
 8002784:	0a1b      	lsrs	r3, r3, #8
 8002786:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800278a:	693a      	ldr	r2, [r7, #16]
 800278c:	fb03 f202 	mul.w	r2, r3, r2
 8002790:	68bb      	ldr	r3, [r7, #8]
 8002792:	fbb2 f3f3 	udiv	r3, r2, r3
 8002796:	613b      	str	r3, [r7, #16]
 8002798:	4b09      	ldr	r3, [pc, #36]	@ (80027c0 <RCC_GetSysClockFreqFromPLLSource+0xbc>)
 800279a:	68db      	ldr	r3, [r3, #12]
 800279c:	0e5b      	lsrs	r3, r3, #25
 800279e:	f003 0303 	and.w	r3, r3, #3
 80027a2:	3301      	adds	r3, #1
 80027a4:	005b      	lsls	r3, r3, #1
 80027a6:	607b      	str	r3, [r7, #4]
 80027a8:	693a      	ldr	r2, [r7, #16]
 80027aa:	687b      	ldr	r3, [r7, #4]
 80027ac:	fbb2 f3f3 	udiv	r3, r2, r3
 80027b0:	603b      	str	r3, [r7, #0]
 80027b2:	683b      	ldr	r3, [r7, #0]
 80027b4:	4618      	mov	r0, r3
 80027b6:	371c      	adds	r7, #28
 80027b8:	46bd      	mov	sp, r7
 80027ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027be:	4770      	bx	lr
 80027c0:	40021000 	.word	0x40021000
 80027c4:	00f42400 	.word	0x00f42400
 80027c8:	007a1200 	.word	0x007a1200
 80027cc:	08006130 	.word	0x08006130

080027d0 <arm_std_f32>:
 80027d0:	2901      	cmp	r1, #1
 80027d2:	d97d      	bls.n	80028d0 <arm_std_f32+0x100>
 80027d4:	b530      	push	{r4, r5, lr}
 80027d6:	ed2d 8b02 	vpush	{d8}
 80027da:	ed9f 7a41 	vldr	s14, [pc, #260]	@ 80028e0 <arm_std_f32+0x110>
 80027de:	088d      	lsrs	r5, r1, #2
 80027e0:	b083      	sub	sp, #12
 80027e2:	eef0 4a47 	vmov.f32	s9, s14
 80027e6:	d028      	beq.n	800283a <arm_std_f32+0x6a>
 80027e8:	f100 0310 	add.w	r3, r0, #16
 80027ec:	462c      	mov	r4, r5
 80027ee:	ed53 7a04 	vldr	s15, [r3, #-16]
 80027f2:	ed13 5a03 	vldr	s10, [r3, #-12]
 80027f6:	ed53 5a02 	vldr	s11, [r3, #-8]
 80027fa:	ed13 6a01 	vldr	s12, [r3, #-4]
 80027fe:	ee67 6aa7 	vmul.f32	s13, s15, s15
 8002802:	ee77 7aa4 	vadd.f32	s15, s15, s9
 8002806:	ee36 7a87 	vadd.f32	s14, s13, s14
 800280a:	ee65 6a05 	vmul.f32	s13, s10, s10
 800280e:	ee77 7a85 	vadd.f32	s15, s15, s10
 8002812:	ee76 6a87 	vadd.f32	s13, s13, s14
 8002816:	ee25 7aa5 	vmul.f32	s14, s11, s11
 800281a:	ee77 7aa5 	vadd.f32	s15, s15, s11
 800281e:	ee77 6a26 	vadd.f32	s13, s14, s13
 8002822:	ee26 7a06 	vmul.f32	s14, s12, s12
 8002826:	3c01      	subs	r4, #1
 8002828:	ee77 4a86 	vadd.f32	s9, s15, s12
 800282c:	ee37 7a26 	vadd.f32	s14, s14, s13
 8002830:	f103 0310 	add.w	r3, r3, #16
 8002834:	d1db      	bne.n	80027ee <arm_std_f32+0x1e>
 8002836:	eb00 1005 	add.w	r0, r0, r5, lsl #4
 800283a:	f011 0303 	ands.w	r3, r1, #3
 800283e:	d01b      	beq.n	8002878 <arm_std_f32+0xa8>
 8002840:	edd0 7a00 	vldr	s15, [r0]
 8002844:	ee67 6aa7 	vmul.f32	s13, s15, s15
 8002848:	3b01      	subs	r3, #1
 800284a:	ee74 4aa7 	vadd.f32	s9, s9, s15
 800284e:	ee37 7a26 	vadd.f32	s14, s14, s13
 8002852:	d011      	beq.n	8002878 <arm_std_f32+0xa8>
 8002854:	edd0 7a01 	vldr	s15, [r0, #4]
 8002858:	ee67 6aa7 	vmul.f32	s13, s15, s15
 800285c:	2b01      	cmp	r3, #1
 800285e:	ee74 4aa7 	vadd.f32	s9, s9, s15
 8002862:	ee37 7a26 	vadd.f32	s14, s14, s13
 8002866:	d007      	beq.n	8002878 <arm_std_f32+0xa8>
 8002868:	edd0 7a02 	vldr	s15, [r0, #8]
 800286c:	ee67 6aa7 	vmul.f32	s13, s15, s15
 8002870:	ee74 4aa7 	vadd.f32	s9, s9, s15
 8002874:	ee37 7a26 	vadd.f32	s14, s14, s13
 8002878:	ee07 1a90 	vmov	s15, r1
 800287c:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8002880:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 8002884:	ee37 6ac6 	vsub.f32	s12, s15, s12
 8002888:	eec4 6aa7 	vdiv.f32	s13, s9, s15
 800288c:	eec7 5a86 	vdiv.f32	s11, s15, s12
 8002890:	ee87 0a06 	vdiv.f32	s0, s14, s12
 8002894:	ee66 6aa6 	vmul.f32	s13, s13, s13
 8002898:	ee66 6aa5 	vmul.f32	s13, s13, s11
 800289c:	ee30 0a66 	vsub.f32	s0, s0, s13
 80028a0:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80028a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80028a8:	db0c      	blt.n	80028c4 <arm_std_f32+0xf4>
 80028aa:	eeb5 0a40 	vcmp.f32	s0, #0.0
 80028ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80028b2:	eeb1 8ac0 	vsqrt.f32	s16, s0
 80028b6:	d40e      	bmi.n	80028d6 <arm_std_f32+0x106>
 80028b8:	ed82 8a00 	vstr	s16, [r2]
 80028bc:	b003      	add	sp, #12
 80028be:	ecbd 8b02 	vpop	{d8}
 80028c2:	bd30      	pop	{r4, r5, pc}
 80028c4:	2300      	movs	r3, #0
 80028c6:	6013      	str	r3, [r2, #0]
 80028c8:	b003      	add	sp, #12
 80028ca:	ecbd 8b02 	vpop	{d8}
 80028ce:	bd30      	pop	{r4, r5, pc}
 80028d0:	2300      	movs	r3, #0
 80028d2:	6013      	str	r3, [r2, #0]
 80028d4:	4770      	bx	lr
 80028d6:	9201      	str	r2, [sp, #4]
 80028d8:	f003 fb1e 	bl	8005f18 <sqrtf>
 80028dc:	9a01      	ldr	r2, [sp, #4]
 80028de:	e7eb      	b.n	80028b8 <arm_std_f32+0xe8>
 80028e0:	00000000 	.word	0x00000000

080028e4 <arm_mean_f32>:
 80028e4:	b430      	push	{r4, r5}
 80028e6:	088d      	lsrs	r5, r1, #2
 80028e8:	eddf 7a1c 	vldr	s15, [pc, #112]	@ 800295c <arm_mean_f32+0x78>
 80028ec:	d018      	beq.n	8002920 <arm_mean_f32+0x3c>
 80028ee:	f100 0310 	add.w	r3, r0, #16
 80028f2:	462c      	mov	r4, r5
 80028f4:	ed53 5a04 	vldr	s11, [r3, #-16]
 80028f8:	ed13 6a03 	vldr	s12, [r3, #-12]
 80028fc:	ed53 6a02 	vldr	s13, [r3, #-8]
 8002900:	ed13 7a01 	vldr	s14, [r3, #-4]
 8002904:	ee77 7aa5 	vadd.f32	s15, s15, s11
 8002908:	3c01      	subs	r4, #1
 800290a:	ee77 7a86 	vadd.f32	s15, s15, s12
 800290e:	f103 0310 	add.w	r3, r3, #16
 8002912:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8002916:	ee77 7a87 	vadd.f32	s15, s15, s14
 800291a:	d1eb      	bne.n	80028f4 <arm_mean_f32+0x10>
 800291c:	eb00 1005 	add.w	r0, r0, r5, lsl #4
 8002920:	f011 0303 	ands.w	r3, r1, #3
 8002924:	d00f      	beq.n	8002946 <arm_mean_f32+0x62>
 8002926:	ed90 7a00 	vldr	s14, [r0]
 800292a:	3b01      	subs	r3, #1
 800292c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8002930:	d009      	beq.n	8002946 <arm_mean_f32+0x62>
 8002932:	ed90 7a01 	vldr	s14, [r0, #4]
 8002936:	2b01      	cmp	r3, #1
 8002938:	ee77 7a87 	vadd.f32	s15, s15, s14
 800293c:	bf1c      	itt	ne
 800293e:	ed90 7a02 	vldrne	s14, [r0, #8]
 8002942:	ee77 7a87 	vaddne.f32	s15, s15, s14
 8002946:	ee07 1a10 	vmov	s14, r1
 800294a:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 800294e:	bc30      	pop	{r4, r5}
 8002950:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8002954:	edc2 6a00 	vstr	s13, [r2]
 8002958:	4770      	bx	lr
 800295a:	bf00      	nop
 800295c:	00000000 	.word	0x00000000

08002960 <arm_correlate_f32>:
 8002960:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002964:	4299      	cmp	r1, r3
 8002966:	b08d      	sub	sp, #52	@ 0x34
 8002968:	f0c0 824c 	bcc.w	8002e04 <arm_correlate_f32+0x4a4>
 800296c:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 800296e:	eba1 0c03 	sub.w	ip, r1, r3
 8002972:	eb04 0c8c 	add.w	ip, r4, ip, lsl #2
 8002976:	f04f 0e04 	mov.w	lr, #4
 800297a:	f103 4480 	add.w	r4, r3, #1073741824	@ 0x40000000
 800297e:	3101      	adds	r1, #1
 8002980:	1ac9      	subs	r1, r1, r3
 8002982:	3c01      	subs	r4, #1
 8002984:	1e5e      	subs	r6, r3, #1
 8002986:	9102      	str	r1, [sp, #8]
 8002988:	eb02 0184 	add.w	r1, r2, r4, lsl #2
 800298c:	f000 8294 	beq.w	8002eb8 <arm_correlate_f32+0x558>
 8002990:	eddf 7a53 	vldr	s15, [pc, #332]	@ 8002ae0 <arm_correlate_f32+0x180>
 8002994:	f1a1 0804 	sub.w	r8, r1, #4
 8002998:	46e1      	mov	r9, ip
 800299a:	4605      	mov	r5, r0
 800299c:	2401      	movs	r4, #1
 800299e:	f014 0703 	ands.w	r7, r4, #3
 80029a2:	d01b      	beq.n	80029dc <arm_correlate_f32+0x7c>
 80029a4:	ed91 7a00 	vldr	s14, [r1]
 80029a8:	edd5 6a00 	vldr	s13, [r5]
 80029ac:	ee27 7a26 	vmul.f32	s14, s14, s13
 80029b0:	3f01      	subs	r7, #1
 80029b2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80029b6:	d011      	beq.n	80029dc <arm_correlate_f32+0x7c>
 80029b8:	ed91 7a01 	vldr	s14, [r1, #4]
 80029bc:	edd5 6a01 	vldr	s13, [r5, #4]
 80029c0:	ee27 7a26 	vmul.f32	s14, s14, s13
 80029c4:	2f01      	cmp	r7, #1
 80029c6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80029ca:	d007      	beq.n	80029dc <arm_correlate_f32+0x7c>
 80029cc:	ed95 7a02 	vldr	s14, [r5, #8]
 80029d0:	edd1 6a02 	vldr	s13, [r1, #8]
 80029d4:	ee27 7a26 	vmul.f32	s14, s14, s13
 80029d8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80029dc:	1c67      	adds	r7, r4, #1
 80029de:	42bb      	cmp	r3, r7
 80029e0:	edc9 7a00 	vstr	s15, [r9]
 80029e4:	4641      	mov	r1, r8
 80029e6:	44f1      	add	r9, lr
 80029e8:	d03a      	beq.n	8002a60 <arm_correlate_f32+0x100>
 80029ea:	ea5f 0a97 	movs.w	sl, r7, lsr #2
 80029ee:	f000 8267 	beq.w	8002ec0 <arm_correlate_f32+0x560>
 80029f2:	ea4f 1a0a 	mov.w	sl, sl, lsl #4
 80029f6:	f100 0110 	add.w	r1, r0, #16
 80029fa:	eddf 7a39 	vldr	s15, [pc, #228]	@ 8002ae0 <arm_correlate_f32+0x180>
 80029fe:	eb01 050a 	add.w	r5, r1, sl
 8002a02:	f108 0410 	add.w	r4, r8, #16
 8002a06:	ed11 7a04 	vldr	s14, [r1, #-16]
 8002a0a:	ed54 3a04 	vldr	s7, [r4, #-16]
 8002a0e:	ed11 6a03 	vldr	s12, [r1, #-12]
 8002a12:	ed14 4a03 	vldr	s8, [r4, #-12]
 8002a16:	ed51 6a02 	vldr	s13, [r1, #-8]
 8002a1a:	ed54 4a02 	vldr	s9, [r4, #-8]
 8002a1e:	ed51 5a01 	vldr	s11, [r1, #-4]
 8002a22:	ed14 5a01 	vldr	s10, [r4, #-4]
 8002a26:	ee27 7a23 	vmul.f32	s14, s14, s7
 8002a2a:	ee26 6a04 	vmul.f32	s12, s12, s8
 8002a2e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002a32:	ee26 7aa4 	vmul.f32	s14, s13, s9
 8002a36:	ee76 7a27 	vadd.f32	s15, s12, s15
 8002a3a:	ee65 6a85 	vmul.f32	s13, s11, s10
 8002a3e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002a42:	3110      	adds	r1, #16
 8002a44:	428d      	cmp	r5, r1
 8002a46:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8002a4a:	f104 0410 	add.w	r4, r4, #16
 8002a4e:	d1da      	bne.n	8002a06 <arm_correlate_f32+0xa6>
 8002a50:	eb00 050a 	add.w	r5, r0, sl
 8002a54:	eb08 010a 	add.w	r1, r8, sl
 8002a58:	f1a8 0804 	sub.w	r8, r8, #4
 8002a5c:	463c      	mov	r4, r7
 8002a5e:	e79e      	b.n	800299e <arm_correlate_f32+0x3e>
 8002a60:	2b03      	cmp	r3, #3
 8002a62:	fb0e cc04 	mla	ip, lr, r4, ip
 8002a66:	f240 81dd 	bls.w	8002e24 <arm_correlate_f32+0x4c4>
 8002a6a:	9b02      	ldr	r3, [sp, #8]
 8002a6c:	0899      	lsrs	r1, r3, #2
 8002a6e:	9103      	str	r1, [sp, #12]
 8002a70:	f000 8220 	beq.w	8002eb4 <arm_correlate_f32+0x554>
 8002a74:	08bb      	lsrs	r3, r7, #2
 8002a76:	f007 0403 	and.w	r4, r7, #3
 8002a7a:	9300      	str	r3, [sp, #0]
 8002a7c:	011b      	lsls	r3, r3, #4
 8002a7e:	f103 0b0c 	add.w	fp, r3, #12
 8002a82:	18d5      	adds	r5, r2, r3
 8002a84:	1e63      	subs	r3, r4, #1
 8002a86:	0109      	lsls	r1, r1, #4
 8002a88:	9306      	str	r3, [sp, #24]
 8002a8a:	f100 080c 	add.w	r8, r0, #12
 8002a8e:	9401      	str	r4, [sp, #4]
 8002a90:	9104      	str	r1, [sp, #16]
 8002a92:	ea4f 048e 	mov.w	r4, lr, lsl #2
 8002a96:	4441      	add	r1, r8
 8002a98:	f102 0310 	add.w	r3, r2, #16
 8002a9c:	e9cd 6009 	strd	r6, r0, [sp, #36]	@ 0x24
 8002aa0:	9e06      	ldr	r6, [sp, #24]
 8002aa2:	9405      	str	r4, [sp, #20]
 8002aa4:	e9cd 7c07 	strd	r7, ip, [sp, #28]
 8002aa8:	eb0c 0a4e 	add.w	sl, ip, lr, lsl #1
 8002aac:	46e1      	mov	r9, ip
 8002aae:	4483      	add	fp, r0
 8002ab0:	460f      	mov	r7, r1
 8002ab2:	920b      	str	r2, [sp, #44]	@ 0x2c
 8002ab4:	469c      	mov	ip, r3
 8002ab6:	ed9f 6a0a 	vldr	s12, [pc, #40]	@ 8002ae0 <arm_correlate_f32+0x180>
 8002aba:	ed58 1a03 	vldr	s3, [r8, #-12]
 8002abe:	ed18 2a02 	vldr	s4, [r8, #-8]
 8002ac2:	ed58 2a01 	vldr	s5, [r8, #-4]
 8002ac6:	ed98 0a00 	vldr	s0, [r8]
 8002aca:	9900      	ldr	r1, [sp, #0]
 8002acc:	eef0 5a46 	vmov.f32	s11, s12
 8002ad0:	eeb0 5a46 	vmov.f32	s10, s12
 8002ad4:	eef0 4a46 	vmov.f32	s9, s12
 8002ad8:	4663      	mov	r3, ip
 8002ada:	4642      	mov	r2, r8
 8002adc:	e005      	b.n	8002aea <arm_correlate_f32+0x18a>
 8002ade:	bf00      	nop
 8002ae0:	00000000 	.word	0x00000000
 8002ae4:	ed90 0a04 	vldr	s0, [r0, #16]
 8002ae8:	3210      	adds	r2, #16
 8002aea:	ed53 6a04 	vldr	s13, [r3, #-16]
 8002aee:	ed13 7a03 	vldr	s14, [r3, #-12]
 8002af2:	ed53 7a02 	vldr	s15, [r3, #-8]
 8002af6:	ed13 1a01 	vldr	s2, [r3, #-4]
 8002afa:	ee62 3a26 	vmul.f32	s7, s4, s13
 8002afe:	ee22 4aa6 	vmul.f32	s8, s5, s13
 8002b02:	ee61 0aa6 	vmul.f32	s1, s3, s13
 8002b06:	edd2 1a01 	vldr	s3, [r2, #4]
 8002b0a:	ee66 6a80 	vmul.f32	s13, s13, s0
 8002b0e:	ee22 3a07 	vmul.f32	s6, s4, s14
 8002b12:	ee33 5a85 	vadd.f32	s10, s7, s10
 8002b16:	ee74 5a25 	vadd.f32	s11, s8, s11
 8002b1a:	ee62 3a87 	vmul.f32	s7, s5, s14
 8002b1e:	ee20 4a07 	vmul.f32	s8, s0, s14
 8002b22:	ee70 4aa4 	vadd.f32	s9, s1, s9
 8002b26:	ee36 6a86 	vadd.f32	s12, s13, s12
 8002b2a:	ed92 2a02 	vldr	s4, [r2, #8]
 8002b2e:	ee27 7a21 	vmul.f32	s14, s14, s3
 8002b32:	ee73 3a85 	vadd.f32	s7, s7, s10
 8002b36:	ee37 7a06 	vadd.f32	s14, s14, s12
 8002b3a:	ee20 5a27 	vmul.f32	s10, s0, s15
 8002b3e:	ee33 3a24 	vadd.f32	s6, s6, s9
 8002b42:	ee34 4a25 	vadd.f32	s8, s8, s11
 8002b46:	ee62 4aa7 	vmul.f32	s9, s5, s15
 8002b4a:	ee61 5aa7 	vmul.f32	s11, s3, s15
 8002b4e:	edd2 2a03 	vldr	s5, [r2, #12]
 8002b52:	ee67 7a82 	vmul.f32	s15, s15, s4
 8002b56:	ee35 5a23 	vadd.f32	s10, s10, s7
 8002b5a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8002b5e:	ee74 4a83 	vadd.f32	s9, s9, s6
 8002b62:	ee20 0a01 	vmul.f32	s0, s0, s2
 8002b66:	ee61 3a81 	vmul.f32	s7, s3, s2
 8002b6a:	ee75 5a84 	vadd.f32	s11, s11, s8
 8002b6e:	ee22 7a01 	vmul.f32	s14, s4, s2
 8002b72:	ee21 6a22 	vmul.f32	s12, s2, s5
 8002b76:	3901      	subs	r1, #1
 8002b78:	f103 0310 	add.w	r3, r3, #16
 8002b7c:	ee70 4a24 	vadd.f32	s9, s0, s9
 8002b80:	ee33 5a85 	vadd.f32	s10, s7, s10
 8002b84:	ee77 5a25 	vadd.f32	s11, s14, s11
 8002b88:	ee36 6a27 	vadd.f32	s12, s12, s15
 8002b8c:	4610      	mov	r0, r2
 8002b8e:	d1a9      	bne.n	8002ae4 <arm_correlate_f32+0x184>
 8002b90:	9b01      	ldr	r3, [sp, #4]
 8002b92:	b3f3      	cbz	r3, 8002c12 <arm_correlate_f32+0x2b2>
 8002b94:	edd5 7a00 	vldr	s15, [r5]
 8002b98:	ed9b 4a00 	vldr	s8, [fp]
 8002b9c:	ee61 6aa7 	vmul.f32	s13, s3, s15
 8002ba0:	ee62 3a27 	vmul.f32	s7, s4, s15
 8002ba4:	ee22 7aa7 	vmul.f32	s14, s5, s15
 8002ba8:	ee64 7a27 	vmul.f32	s15, s8, s15
 8002bac:	ee74 4aa6 	vadd.f32	s9, s9, s13
 8002bb0:	ee35 5a23 	vadd.f32	s10, s10, s7
 8002bb4:	ee75 5a87 	vadd.f32	s11, s11, s14
 8002bb8:	ee36 6a27 	vadd.f32	s12, s12, s15
 8002bbc:	b34e      	cbz	r6, 8002c12 <arm_correlate_f32+0x2b2>
 8002bbe:	edd5 7a01 	vldr	s15, [r5, #4]
 8002bc2:	eddb 6a01 	vldr	s13, [fp, #4]
 8002bc6:	ee22 7a27 	vmul.f32	s14, s4, s15
 8002bca:	ee22 3aa7 	vmul.f32	s6, s5, s15
 8002bce:	ee67 3a84 	vmul.f32	s7, s15, s8
 8002bd2:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8002bd6:	2e01      	cmp	r6, #1
 8002bd8:	ee74 4a87 	vadd.f32	s9, s9, s14
 8002bdc:	ee35 5a03 	vadd.f32	s10, s10, s6
 8002be0:	ee75 5aa3 	vadd.f32	s11, s11, s7
 8002be4:	ee36 6a27 	vadd.f32	s12, s12, s15
 8002be8:	d013      	beq.n	8002c12 <arm_correlate_f32+0x2b2>
 8002bea:	ed95 7a02 	vldr	s14, [r5, #8]
 8002bee:	eddb 3a02 	vldr	s7, [fp, #8]
 8002bf2:	ee62 7a87 	vmul.f32	s15, s5, s14
 8002bf6:	ee27 4a04 	vmul.f32	s8, s14, s8
 8002bfa:	ee67 6a26 	vmul.f32	s13, s14, s13
 8002bfe:	ee27 7a23 	vmul.f32	s14, s14, s7
 8002c02:	ee74 4aa7 	vadd.f32	s9, s9, s15
 8002c06:	ee35 5a04 	vadd.f32	s10, s10, s8
 8002c0a:	ee75 5aa6 	vadd.f32	s11, s11, s13
 8002c0e:	ee36 6a07 	vadd.f32	s12, s12, s14
 8002c12:	f108 0810 	add.w	r8, r8, #16
 8002c16:	eb09 020e 	add.w	r2, r9, lr
 8002c1a:	eb0a 030e 	add.w	r3, sl, lr
 8002c1e:	4547      	cmp	r7, r8
 8002c20:	edc9 4a00 	vstr	s9, [r9]
 8002c24:	f10b 0b10 	add.w	fp, fp, #16
 8002c28:	ed82 5a00 	vstr	s10, [r2]
 8002c2c:	44a1      	add	r9, r4
 8002c2e:	edca 5a00 	vstr	s11, [sl]
 8002c32:	ed83 6a00 	vstr	s12, [r3]
 8002c36:	44a2      	add	sl, r4
 8002c38:	f47f af3d 	bne.w	8002ab6 <arm_correlate_f32+0x156>
 8002c3c:	e9dd 7c07 	ldrd	r7, ip, [sp, #28]
 8002c40:	e9dd 6009 	ldrd	r6, r0, [sp, #36]	@ 0x24
 8002c44:	9b03      	ldr	r3, [sp, #12]
 8002c46:	9c05      	ldr	r4, [sp, #20]
 8002c48:	9904      	ldr	r1, [sp, #16]
 8002c4a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8002c4c:	fb04 cc03 	mla	ip, r4, r3, ip
 8002c50:	4401      	add	r1, r0
 8002c52:	009b      	lsls	r3, r3, #2
 8002c54:	460d      	mov	r5, r1
 8002c56:	9303      	str	r3, [sp, #12]
 8002c58:	9b02      	ldr	r3, [sp, #8]
 8002c5a:	f013 0303 	ands.w	r3, r3, #3
 8002c5e:	9301      	str	r3, [sp, #4]
 8002c60:	d071      	beq.n	8002d46 <arm_correlate_f32+0x3e6>
 8002c62:	9903      	ldr	r1, [sp, #12]
 8002c64:	9205      	str	r2, [sp, #20]
 8002c66:	f007 0403 	and.w	r4, r7, #3
 8002c6a:	ea4f 0b97 	mov.w	fp, r7, lsr #2
 8002c6e:	1c4f      	adds	r7, r1, #1
 8002c70:	1859      	adds	r1, r3, r1
 8002c72:	1d03      	adds	r3, r0, #4
 8002c74:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 8002c78:	9400      	str	r4, [sp, #0]
 8002c7a:	f102 0110 	add.w	r1, r2, #16
 8002c7e:	ea4f 1a0b 	mov.w	sl, fp, lsl #4
 8002c82:	3c01      	subs	r4, #1
 8002c84:	e9cd 6003 	strd	r6, r0, [sp, #12]
 8002c88:	eb02 090a 	add.w	r9, r2, sl
 8002c8c:	eb00 0787 	add.w	r7, r0, r7, lsl #2
 8002c90:	46e0      	mov	r8, ip
 8002c92:	4618      	mov	r0, r3
 8002c94:	460e      	mov	r6, r1
 8002c96:	4622      	mov	r2, r4
 8002c98:	ed5f 7a6f 	vldr	s15, [pc, #-444]	@ 8002ae0 <arm_correlate_f32+0x180>
 8002c9c:	f105 0110 	add.w	r1, r5, #16
 8002ca0:	4633      	mov	r3, r6
 8002ca2:	465c      	mov	r4, fp
 8002ca4:	ed11 7a04 	vldr	s14, [r1, #-16]
 8002ca8:	ed53 3a04 	vldr	s7, [r3, #-16]
 8002cac:	ed11 6a03 	vldr	s12, [r1, #-12]
 8002cb0:	ed13 4a03 	vldr	s8, [r3, #-12]
 8002cb4:	ed51 6a02 	vldr	s13, [r1, #-8]
 8002cb8:	ed53 4a02 	vldr	s9, [r3, #-8]
 8002cbc:	ed51 5a01 	vldr	s11, [r1, #-4]
 8002cc0:	ed13 5a01 	vldr	s10, [r3, #-4]
 8002cc4:	ee27 7a23 	vmul.f32	s14, s14, s7
 8002cc8:	ee26 6a04 	vmul.f32	s12, s12, s8
 8002ccc:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002cd0:	ee26 7aa4 	vmul.f32	s14, s13, s9
 8002cd4:	ee76 7a27 	vadd.f32	s15, s12, s15
 8002cd8:	ee65 6a85 	vmul.f32	s13, s11, s10
 8002cdc:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002ce0:	3c01      	subs	r4, #1
 8002ce2:	f101 0110 	add.w	r1, r1, #16
 8002ce6:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8002cea:	f103 0310 	add.w	r3, r3, #16
 8002cee:	d1d9      	bne.n	8002ca4 <arm_correlate_f32+0x344>
 8002cf0:	9b00      	ldr	r3, [sp, #0]
 8002cf2:	4455      	add	r5, sl
 8002cf4:	b1d3      	cbz	r3, 8002d2c <arm_correlate_f32+0x3cc>
 8002cf6:	ed99 7a00 	vldr	s14, [r9]
 8002cfa:	edd5 6a00 	vldr	s13, [r5]
 8002cfe:	ee27 7a26 	vmul.f32	s14, s14, s13
 8002d02:	ee77 7a87 	vadd.f32	s15, s15, s14
 8002d06:	b18a      	cbz	r2, 8002d2c <arm_correlate_f32+0x3cc>
 8002d08:	ed99 7a01 	vldr	s14, [r9, #4]
 8002d0c:	edd5 6a01 	vldr	s13, [r5, #4]
 8002d10:	ee27 7a26 	vmul.f32	s14, s14, s13
 8002d14:	2a01      	cmp	r2, #1
 8002d16:	ee77 7a87 	vadd.f32	s15, s15, s14
 8002d1a:	d007      	beq.n	8002d2c <arm_correlate_f32+0x3cc>
 8002d1c:	ed95 7a02 	vldr	s14, [r5, #8]
 8002d20:	edd9 6a02 	vldr	s13, [r9, #8]
 8002d24:	ee27 7a26 	vmul.f32	s14, s14, s13
 8002d28:	ee77 7a87 	vadd.f32	s15, s15, s14
 8002d2c:	463d      	mov	r5, r7
 8002d2e:	3704      	adds	r7, #4
 8002d30:	42b8      	cmp	r0, r7
 8002d32:	edc8 7a00 	vstr	s15, [r8]
 8002d36:	44f0      	add	r8, lr
 8002d38:	d1ae      	bne.n	8002c98 <arm_correlate_f32+0x338>
 8002d3a:	9b01      	ldr	r3, [sp, #4]
 8002d3c:	9a05      	ldr	r2, [sp, #20]
 8002d3e:	e9dd 6003 	ldrd	r6, r0, [sp, #12]
 8002d42:	fb0e cc03 	mla	ip, lr, r3, ip
 8002d46:	9b02      	ldr	r3, [sp, #8]
 8002d48:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 8002d4c:	08b5      	lsrs	r5, r6, #2
 8002d4e:	ed5f 5a9c 	vldr	s11, [pc, #-624]	@ 8002ae0 <arm_correlate_f32+0x180>
 8002d52:	f000 80ac 	beq.w	8002eae <arm_correlate_f32+0x54e>
 8002d56:	f100 0110 	add.w	r1, r0, #16
 8002d5a:	f102 0310 	add.w	r3, r2, #16
 8002d5e:	462c      	mov	r4, r5
 8002d60:	ed51 6a04 	vldr	s13, [r1, #-16]
 8002d64:	ed53 3a04 	vldr	s7, [r3, #-16]
 8002d68:	ed11 7a03 	vldr	s14, [r1, #-12]
 8002d6c:	ed13 4a03 	vldr	s8, [r3, #-12]
 8002d70:	ed51 7a02 	vldr	s15, [r1, #-8]
 8002d74:	ed53 4a02 	vldr	s9, [r3, #-8]
 8002d78:	ed11 6a01 	vldr	s12, [r1, #-4]
 8002d7c:	ed13 5a01 	vldr	s10, [r3, #-4]
 8002d80:	ee66 6aa3 	vmul.f32	s13, s13, s7
 8002d84:	ee27 7a04 	vmul.f32	s14, s14, s8
 8002d88:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8002d8c:	ee67 7aa4 	vmul.f32	s15, s15, s9
 8002d90:	ee37 7a26 	vadd.f32	s14, s14, s13
 8002d94:	ee66 6a05 	vmul.f32	s13, s12, s10
 8002d98:	ee77 7a87 	vadd.f32	s15, s15, s14
 8002d9c:	3c01      	subs	r4, #1
 8002d9e:	f101 0110 	add.w	r1, r1, #16
 8002da2:	ee76 5aa7 	vadd.f32	s11, s13, s15
 8002da6:	f103 0310 	add.w	r3, r3, #16
 8002daa:	d1d9      	bne.n	8002d60 <arm_correlate_f32+0x400>
 8002dac:	012d      	lsls	r5, r5, #4
 8002dae:	1941      	adds	r1, r0, r5
 8002db0:	4415      	add	r5, r2
 8002db2:	f016 0303 	ands.w	r3, r6, #3
 8002db6:	d01b      	beq.n	8002df0 <arm_correlate_f32+0x490>
 8002db8:	edd5 7a00 	vldr	s15, [r5]
 8002dbc:	ed91 7a00 	vldr	s14, [r1]
 8002dc0:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002dc4:	3b01      	subs	r3, #1
 8002dc6:	ee75 5aa7 	vadd.f32	s11, s11, s15
 8002dca:	d011      	beq.n	8002df0 <arm_correlate_f32+0x490>
 8002dcc:	edd5 7a01 	vldr	s15, [r5, #4]
 8002dd0:	ed91 7a01 	vldr	s14, [r1, #4]
 8002dd4:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002dd8:	2b01      	cmp	r3, #1
 8002dda:	ee75 5aa7 	vadd.f32	s11, s11, s15
 8002dde:	d007      	beq.n	8002df0 <arm_correlate_f32+0x490>
 8002de0:	edd1 7a02 	vldr	s15, [r1, #8]
 8002de4:	ed95 7a02 	vldr	s14, [r5, #8]
 8002de8:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002dec:	ee75 5aa7 	vadd.f32	s11, s11, s15
 8002df0:	3e01      	subs	r6, #1
 8002df2:	edcc 5a00 	vstr	s11, [ip]
 8002df6:	f100 0004 	add.w	r0, r0, #4
 8002dfa:	44f4      	add	ip, lr
 8002dfc:	d1a6      	bne.n	8002d4c <arm_correlate_f32+0x3ec>
 8002dfe:	b00d      	add	sp, #52	@ 0x34
 8002e00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002e04:	f103 4480 	add.w	r4, r3, #1073741824	@ 0x40000000
 8002e08:	4606      	mov	r6, r0
 8002e0a:	3c02      	subs	r4, #2
 8002e0c:	4610      	mov	r0, r2
 8002e0e:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 8002e10:	440c      	add	r4, r1
 8002e12:	460d      	mov	r5, r1
 8002e14:	eb02 0c84 	add.w	ip, r2, r4, lsl #2
 8002e18:	4619      	mov	r1, r3
 8002e1a:	4632      	mov	r2, r6
 8002e1c:	f06f 0e03 	mvn.w	lr, #3
 8002e20:	462b      	mov	r3, r5
 8002e22:	e5aa      	b.n	800297a <arm_correlate_f32+0x1a>
 8002e24:	9902      	ldr	r1, [sp, #8]
 8002e26:	2900      	cmp	r1, #0
 8002e28:	d090      	beq.n	8002d4c <arm_correlate_f32+0x3ec>
 8002e2a:	9902      	ldr	r1, [sp, #8]
 8002e2c:	ed1f 6ad4 	vldr	s12, [pc, #-848]	@ 8002ae0 <arm_correlate_f32+0x180>
 8002e30:	ea4f 0881 	mov.w	r8, r1, lsl #2
 8002e34:	eb00 0708 	add.w	r7, r0, r8
 8002e38:	4601      	mov	r1, r0
 8002e3a:	4665      	mov	r5, ip
 8002e3c:	e020      	b.n	8002e80 <arm_correlate_f32+0x520>
 8002e3e:	edd2 7a00 	vldr	s15, [r2]
 8002e42:	ecb4 7a01 	vldmia	r4!, {s14}
 8002e46:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002e4a:	ee77 7a86 	vadd.f32	s15, s15, s12
 8002e4e:	b18e      	cbz	r6, 8002e74 <arm_correlate_f32+0x514>
 8002e50:	ed92 7a01 	vldr	s14, [r2, #4]
 8002e54:	edd1 6a01 	vldr	s13, [r1, #4]
 8002e58:	ee27 7a26 	vmul.f32	s14, s14, s13
 8002e5c:	2b02      	cmp	r3, #2
 8002e5e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8002e62:	d007      	beq.n	8002e74 <arm_correlate_f32+0x514>
 8002e64:	ed91 7a02 	vldr	s14, [r1, #8]
 8002e68:	edd2 6a02 	vldr	s13, [r2, #8]
 8002e6c:	ee27 7a26 	vmul.f32	s14, s14, s13
 8002e70:	ee77 7a87 	vadd.f32	s15, s15, s14
 8002e74:	42bc      	cmp	r4, r7
 8002e76:	edc5 7a00 	vstr	s15, [r5]
 8002e7a:	4621      	mov	r1, r4
 8002e7c:	4475      	add	r5, lr
 8002e7e:	d00b      	beq.n	8002e98 <arm_correlate_f32+0x538>
 8002e80:	460c      	mov	r4, r1
 8002e82:	2b00      	cmp	r3, #0
 8002e84:	d1db      	bne.n	8002e3e <arm_correlate_f32+0x4de>
 8002e86:	1d0c      	adds	r4, r1, #4
 8002e88:	eddf 7a0f 	vldr	s15, [pc, #60]	@ 8002ec8 <arm_correlate_f32+0x568>
 8002e8c:	42bc      	cmp	r4, r7
 8002e8e:	edc5 7a00 	vstr	s15, [r5]
 8002e92:	4621      	mov	r1, r4
 8002e94:	4475      	add	r5, lr
 8002e96:	d1f3      	bne.n	8002e80 <arm_correlate_f32+0x520>
 8002e98:	9b02      	ldr	r3, [sp, #8]
 8002e9a:	4440      	add	r0, r8
 8002e9c:	fb0e cc03 	mla	ip, lr, r3, ip
 8002ea0:	2e00      	cmp	r6, #0
 8002ea2:	d0ac      	beq.n	8002dfe <arm_correlate_f32+0x49e>
 8002ea4:	08b5      	lsrs	r5, r6, #2
 8002ea6:	eddf 5a08 	vldr	s11, [pc, #32]	@ 8002ec8 <arm_correlate_f32+0x568>
 8002eaa:	f47f af54 	bne.w	8002d56 <arm_correlate_f32+0x3f6>
 8002eae:	4615      	mov	r5, r2
 8002eb0:	4601      	mov	r1, r0
 8002eb2:	e77e      	b.n	8002db2 <arm_correlate_f32+0x452>
 8002eb4:	4605      	mov	r5, r0
 8002eb6:	e6cf      	b.n	8002c58 <arm_correlate_f32+0x2f8>
 8002eb8:	9902      	ldr	r1, [sp, #8]
 8002eba:	2900      	cmp	r1, #0
 8002ebc:	d1b5      	bne.n	8002e2a <arm_correlate_f32+0x4ca>
 8002ebe:	e79e      	b.n	8002dfe <arm_correlate_f32+0x49e>
 8002ec0:	eddf 7a01 	vldr	s15, [pc, #4]	@ 8002ec8 <arm_correlate_f32+0x568>
 8002ec4:	4605      	mov	r5, r0
 8002ec6:	e5c7      	b.n	8002a58 <arm_correlate_f32+0xf8>
 8002ec8:	00000000 	.word	0x00000000

08002ecc <arm_conv_f32>:
 8002ecc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002ed0:	b08b      	sub	sp, #44	@ 0x2c
 8002ed2:	4299      	cmp	r1, r3
 8002ed4:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8002ed6:	d205      	bcs.n	8002ee4 <arm_conv_f32+0x18>
 8002ed8:	4606      	mov	r6, r0
 8002eda:	460c      	mov	r4, r1
 8002edc:	4610      	mov	r0, r2
 8002ede:	4619      	mov	r1, r3
 8002ee0:	4632      	mov	r2, r6
 8002ee2:	4623      	mov	r3, r4
 8002ee4:	f103 4b80 	add.w	fp, r3, #1073741824	@ 0x40000000
 8002ee8:	3101      	adds	r1, #1
 8002eea:	1ac9      	subs	r1, r1, r3
 8002eec:	f10b 3bff 	add.w	fp, fp, #4294967295	@ 0xffffffff
 8002ef0:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 8002ef4:	9101      	str	r1, [sp, #4]
 8002ef6:	1e59      	subs	r1, r3, #1
 8002ef8:	eb02 070b 	add.w	r7, r2, fp
 8002efc:	f000 8277 	beq.w	80033ee <arm_conv_f32+0x522>
 8002f00:	eddf 7aaf 	vldr	s15, [pc, #700]	@ 80031c0 <arm_conv_f32+0x2f4>
 8002f04:	f102 0904 	add.w	r9, r2, #4
 8002f08:	46aa      	mov	sl, r5
 8002f0a:	4680      	mov	r8, r0
 8002f0c:	2401      	movs	r4, #1
 8002f0e:	f014 0603 	ands.w	r6, r4, #3
 8002f12:	d01b      	beq.n	8002f4c <arm_conv_f32+0x80>
 8002f14:	ed92 7a00 	vldr	s14, [r2]
 8002f18:	edd8 6a00 	vldr	s13, [r8]
 8002f1c:	ee27 7a26 	vmul.f32	s14, s14, s13
 8002f20:	3e01      	subs	r6, #1
 8002f22:	ee77 7a87 	vadd.f32	s15, s15, s14
 8002f26:	d011      	beq.n	8002f4c <arm_conv_f32+0x80>
 8002f28:	ed12 7a01 	vldr	s14, [r2, #-4]
 8002f2c:	edd8 6a01 	vldr	s13, [r8, #4]
 8002f30:	ee27 7a26 	vmul.f32	s14, s14, s13
 8002f34:	2e01      	cmp	r6, #1
 8002f36:	ee77 7a87 	vadd.f32	s15, s15, s14
 8002f3a:	d007      	beq.n	8002f4c <arm_conv_f32+0x80>
 8002f3c:	ed98 7a02 	vldr	s14, [r8, #8]
 8002f40:	ed52 6a02 	vldr	s13, [r2, #-8]
 8002f44:	ee27 7a26 	vmul.f32	s14, s14, s13
 8002f48:	ee77 7a87 	vadd.f32	s15, s15, s14
 8002f4c:	3401      	adds	r4, #1
 8002f4e:	42a3      	cmp	r3, r4
 8002f50:	ecea 7a01 	vstmia	sl!, {s15}
 8002f54:	464a      	mov	r2, r9
 8002f56:	d03a      	beq.n	8002fce <arm_conv_f32+0x102>
 8002f58:	ea5f 0e94 	movs.w	lr, r4, lsr #2
 8002f5c:	f000 824c 	beq.w	80033f8 <arm_conv_f32+0x52c>
 8002f60:	f100 0210 	add.w	r2, r0, #16
 8002f64:	ea4f 180e 	mov.w	r8, lr, lsl #4
 8002f68:	eddf 7a95 	vldr	s15, [pc, #596]	@ 80031c0 <arm_conv_f32+0x2f4>
 8002f6c:	eb02 0c08 	add.w	ip, r2, r8
 8002f70:	f1a9 0610 	sub.w	r6, r9, #16
 8002f74:	ed12 7a04 	vldr	s14, [r2, #-16]
 8002f78:	edd6 3a04 	vldr	s7, [r6, #16]
 8002f7c:	ed12 6a03 	vldr	s12, [r2, #-12]
 8002f80:	ed96 4a03 	vldr	s8, [r6, #12]
 8002f84:	ed52 6a02 	vldr	s13, [r2, #-8]
 8002f88:	edd6 4a02 	vldr	s9, [r6, #8]
 8002f8c:	ed52 5a01 	vldr	s11, [r2, #-4]
 8002f90:	ed96 5a01 	vldr	s10, [r6, #4]
 8002f94:	ee27 7a23 	vmul.f32	s14, s14, s7
 8002f98:	ee26 6a04 	vmul.f32	s12, s12, s8
 8002f9c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002fa0:	ee26 7aa4 	vmul.f32	s14, s13, s9
 8002fa4:	ee76 7a27 	vadd.f32	s15, s12, s15
 8002fa8:	ee65 6a85 	vmul.f32	s13, s11, s10
 8002fac:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002fb0:	3210      	adds	r2, #16
 8002fb2:	4594      	cmp	ip, r2
 8002fb4:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8002fb8:	f1a6 0610 	sub.w	r6, r6, #16
 8002fbc:	d1da      	bne.n	8002f74 <arm_conv_f32+0xa8>
 8002fbe:	ebce 7e0e 	rsb	lr, lr, lr, lsl #28
 8002fc2:	eb09 120e 	add.w	r2, r9, lr, lsl #4
 8002fc6:	4480      	add	r8, r0
 8002fc8:	f109 0904 	add.w	r9, r9, #4
 8002fcc:	e79f      	b.n	8002f0e <arm_conv_f32+0x42>
 8002fce:	2b03      	cmp	r3, #3
 8002fd0:	445d      	add	r5, fp
 8002fd2:	f240 80e9 	bls.w	80031a8 <arm_conv_f32+0x2dc>
 8002fd6:	9b01      	ldr	r3, [sp, #4]
 8002fd8:	089a      	lsrs	r2, r3, #2
 8002fda:	9202      	str	r2, [sp, #8]
 8002fdc:	f000 8203 	beq.w	80033e6 <arm_conv_f32+0x51a>
 8002fe0:	ea4f 0894 	mov.w	r8, r4, lsr #2
 8002fe4:	ea4f 1308 	mov.w	r3, r8, lsl #4
 8002fe8:	0112      	lsls	r2, r2, #4
 8002fea:	f004 0603 	and.w	r6, r4, #3
 8002fee:	9203      	str	r2, [sp, #12]
 8002ff0:	f1a3 0a10 	sub.w	sl, r3, #16
 8002ff4:	f1a3 020c 	sub.w	r2, r3, #12
 8002ff8:	3b08      	subs	r3, #8
 8002ffa:	9204      	str	r2, [sp, #16]
 8002ffc:	9305      	str	r3, [sp, #20]
 8002ffe:	f106 39ff 	add.w	r9, r6, #4294967295	@ 0xffffffff
 8003002:	e9cd 7008 	strd	r7, r0, [sp, #32]
 8003006:	9a03      	ldr	r2, [sp, #12]
 8003008:	f100 0c1c 	add.w	ip, r0, #28
 800300c:	e9cd 4106 	strd	r4, r1, [sp, #24]
 8003010:	464c      	mov	r4, r9
 8003012:	e9dd 9004 	ldrd	r9, r0, [sp, #16]
 8003016:	ebc8 7e08 	rsb	lr, r8, r8, lsl #28
 800301a:	f1a7 0310 	sub.w	r3, r7, #16
 800301e:	eb07 1e0e 	add.w	lr, r7, lr, lsl #4
 8003022:	eb05 0b02 	add.w	fp, r5, r2
 8003026:	461f      	mov	r7, r3
 8003028:	3510      	adds	r5, #16
 800302a:	ed9f 6a65 	vldr	s12, [pc, #404]	@ 80031c0 <arm_conv_f32+0x2f4>
 800302e:	ed1c 1a07 	vldr	s2, [ip, #-28]	@ 0xffffffe4
 8003032:	ed5c 1a06 	vldr	s3, [ip, #-24]	@ 0xffffffe8
 8003036:	ed1c 2a05 	vldr	s4, [ip, #-20]	@ 0xffffffec
 800303a:	eeb0 5a46 	vmov.f32	s10, s12
 800303e:	eef0 4a46 	vmov.f32	s9, s12
 8003042:	eef0 5a46 	vmov.f32	s11, s12
 8003046:	463a      	mov	r2, r7
 8003048:	4663      	mov	r3, ip
 800304a:	4641      	mov	r1, r8
 800304c:	edd2 6a04 	vldr	s13, [r2, #16]
 8003050:	ed13 0a04 	vldr	s0, [r3, #-16]
 8003054:	ed92 7a03 	vldr	s14, [r2, #12]
 8003058:	edd2 7a02 	vldr	s15, [r2, #8]
 800305c:	edd2 0a01 	vldr	s1, [r2, #4]
 8003060:	ee21 3aa6 	vmul.f32	s6, s3, s13
 8003064:	ee62 3a26 	vmul.f32	s7, s4, s13
 8003068:	ee61 2a26 	vmul.f32	s5, s2, s13
 800306c:	ed13 1a03 	vldr	s2, [r3, #-12]
 8003070:	ee66 6a80 	vmul.f32	s13, s13, s0
 8003074:	ee21 4a87 	vmul.f32	s8, s3, s14
 8003078:	ee73 4a24 	vadd.f32	s9, s6, s9
 800307c:	ee33 5a85 	vadd.f32	s10, s7, s10
 8003080:	ee22 3a07 	vmul.f32	s6, s4, s14
 8003084:	ed53 1a02 	vldr	s3, [r3, #-8]
 8003088:	ee72 2aa5 	vadd.f32	s5, s5, s11
 800308c:	ee36 6a86 	vadd.f32	s12, s13, s12
 8003090:	ee60 3a07 	vmul.f32	s7, s0, s14
 8003094:	ee27 7a01 	vmul.f32	s14, s14, s2
 8003098:	ee33 3a24 	vadd.f32	s6, s6, s9
 800309c:	ee37 7a06 	vadd.f32	s14, s14, s12
 80030a0:	ee74 2a22 	vadd.f32	s5, s8, s5
 80030a4:	ee60 4a27 	vmul.f32	s9, s0, s15
 80030a8:	ee22 4a27 	vmul.f32	s8, s4, s15
 80030ac:	ee73 3a85 	vadd.f32	s7, s7, s10
 80030b0:	ed13 2a01 	vldr	s4, [r3, #-4]
 80030b4:	ee21 5a27 	vmul.f32	s10, s2, s15
 80030b8:	ee67 7aa1 	vmul.f32	s15, s15, s3
 80030bc:	ee74 4a83 	vadd.f32	s9, s9, s6
 80030c0:	ee77 7a87 	vadd.f32	s15, s15, s14
 80030c4:	ee34 4a22 	vadd.f32	s8, s8, s5
 80030c8:	ee60 5a20 	vmul.f32	s11, s0, s1
 80030cc:	ee21 3a20 	vmul.f32	s6, s2, s1
 80030d0:	ee35 5a23 	vadd.f32	s10, s10, s7
 80030d4:	ee21 7aa0 	vmul.f32	s14, s3, s1
 80030d8:	ee20 6a82 	vmul.f32	s12, s1, s4
 80030dc:	3901      	subs	r1, #1
 80030de:	f1a2 0210 	sub.w	r2, r2, #16
 80030e2:	ee75 5a84 	vadd.f32	s11, s11, s8
 80030e6:	ee73 4a24 	vadd.f32	s9, s6, s9
 80030ea:	ee37 5a05 	vadd.f32	s10, s14, s10
 80030ee:	ee36 6a27 	vadd.f32	s12, s12, s15
 80030f2:	f103 0310 	add.w	r3, r3, #16
 80030f6:	d1a9      	bne.n	800304c <arm_conv_f32+0x180>
 80030f8:	eb0a 030c 	add.w	r3, sl, ip
 80030fc:	2e00      	cmp	r6, #0
 80030fe:	d042      	beq.n	8003186 <arm_conv_f32+0x2ba>
 8003100:	edde 7a00 	vldr	s15, [lr]
 8003104:	ed93 4a00 	vldr	s8, [r3]
 8003108:	ee61 6a27 	vmul.f32	s13, s2, s15
 800310c:	ee61 3aa7 	vmul.f32	s7, s3, s15
 8003110:	ee22 7a27 	vmul.f32	s14, s4, s15
 8003114:	ee64 7a27 	vmul.f32	s15, s8, s15
 8003118:	ee75 5aa6 	vadd.f32	s11, s11, s13
 800311c:	ee74 4aa3 	vadd.f32	s9, s9, s7
 8003120:	ee35 5a07 	vadd.f32	s10, s10, s14
 8003124:	ee36 6a27 	vadd.f32	s12, s12, s15
 8003128:	eb09 030c 	add.w	r3, r9, ip
 800312c:	b35c      	cbz	r4, 8003186 <arm_conv_f32+0x2ba>
 800312e:	ed5e 7a01 	vldr	s15, [lr, #-4]
 8003132:	edd3 6a00 	vldr	s13, [r3]
 8003136:	ee21 7aa7 	vmul.f32	s14, s3, s15
 800313a:	ee22 3a27 	vmul.f32	s6, s4, s15
 800313e:	ee67 3a84 	vmul.f32	s7, s15, s8
 8003142:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8003146:	2c01      	cmp	r4, #1
 8003148:	ee75 5a87 	vadd.f32	s11, s11, s14
 800314c:	ee74 4a83 	vadd.f32	s9, s9, s6
 8003150:	ee35 5a23 	vadd.f32	s10, s10, s7
 8003154:	ee36 6a27 	vadd.f32	s12, s12, s15
 8003158:	eb00 030c 	add.w	r3, r0, ip
 800315c:	d013      	beq.n	8003186 <arm_conv_f32+0x2ba>
 800315e:	ed1e 7a02 	vldr	s14, [lr, #-8]
 8003162:	edd3 3a00 	vldr	s7, [r3]
 8003166:	ee62 7a07 	vmul.f32	s15, s4, s14
 800316a:	ee27 4a04 	vmul.f32	s8, s14, s8
 800316e:	ee67 6a26 	vmul.f32	s13, s14, s13
 8003172:	ee27 7a23 	vmul.f32	s14, s14, s7
 8003176:	ee75 5aa7 	vadd.f32	s11, s11, s15
 800317a:	ee74 4a84 	vadd.f32	s9, s9, s8
 800317e:	ee35 5a26 	vadd.f32	s10, s10, s13
 8003182:	ee36 6a07 	vadd.f32	s12, s12, s14
 8003186:	45ab      	cmp	fp, r5
 8003188:	ed45 5a04 	vstr	s11, [r5, #-16]
 800318c:	ed45 4a03 	vstr	s9, [r5, #-12]
 8003190:	ed05 5a02 	vstr	s10, [r5, #-8]
 8003194:	ed05 6a01 	vstr	s12, [r5, #-4]
 8003198:	f10c 0c10 	add.w	ip, ip, #16
 800319c:	f105 0310 	add.w	r3, r5, #16
 80031a0:	f000 809e 	beq.w	80032e0 <arm_conv_f32+0x414>
 80031a4:	461d      	mov	r5, r3
 80031a6:	e740      	b.n	800302a <arm_conv_f32+0x15e>
 80031a8:	9a01      	ldr	r2, [sp, #4]
 80031aa:	46ac      	mov	ip, r5
 80031ac:	2a00      	cmp	r2, #0
 80031ae:	d037      	beq.n	8003220 <arm_conv_f32+0x354>
 80031b0:	9a01      	ldr	r2, [sp, #4]
 80031b2:	ed9f 6a03 	vldr	s12, [pc, #12]	@ 80031c0 <arm_conv_f32+0x2f4>
 80031b6:	0096      	lsls	r6, r2, #2
 80031b8:	eb05 0c06 	add.w	ip, r5, r6
 80031bc:	4604      	mov	r4, r0
 80031be:	e021      	b.n	8003204 <arm_conv_f32+0x338>
 80031c0:	00000000 	.word	0x00000000
 80031c4:	edd7 7a00 	vldr	s15, [r7]
 80031c8:	ecb2 7a01 	vldmia	r2!, {s14}
 80031cc:	ee67 7a87 	vmul.f32	s15, s15, s14
 80031d0:	ee77 7a86 	vadd.f32	s15, s15, s12
 80031d4:	b189      	cbz	r1, 80031fa <arm_conv_f32+0x32e>
 80031d6:	ed17 7a01 	vldr	s14, [r7, #-4]
 80031da:	edd4 6a01 	vldr	s13, [r4, #4]
 80031de:	ee27 7a26 	vmul.f32	s14, s14, s13
 80031e2:	2b02      	cmp	r3, #2
 80031e4:	ee77 7a87 	vadd.f32	s15, s15, s14
 80031e8:	d007      	beq.n	80031fa <arm_conv_f32+0x32e>
 80031ea:	ed94 7a02 	vldr	s14, [r4, #8]
 80031ee:	ed57 6a02 	vldr	s13, [r7, #-8]
 80031f2:	ee27 7a26 	vmul.f32	s14, s14, s13
 80031f6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80031fa:	ece5 7a01 	vstmia	r5!, {s15}
 80031fe:	4565      	cmp	r5, ip
 8003200:	4614      	mov	r4, r2
 8003202:	d00a      	beq.n	800321a <arm_conv_f32+0x34e>
 8003204:	4622      	mov	r2, r4
 8003206:	2b00      	cmp	r3, #0
 8003208:	d1dc      	bne.n	80031c4 <arm_conv_f32+0x2f8>
 800320a:	ed5f 7a13 	vldr	s15, [pc, #-76]	@ 80031c0 <arm_conv_f32+0x2f4>
 800320e:	ece5 7a01 	vstmia	r5!, {s15}
 8003212:	1d22      	adds	r2, r4, #4
 8003214:	4565      	cmp	r5, ip
 8003216:	4614      	mov	r4, r2
 8003218:	d1f4      	bne.n	8003204 <arm_conv_f32+0x338>
 800321a:	4430      	add	r0, r6
 800321c:	2900      	cmp	r1, #0
 800321e:	d059      	beq.n	80032d4 <arm_conv_f32+0x408>
 8003220:	088d      	lsrs	r5, r1, #2
 8003222:	ed5f 5a19 	vldr	s11, [pc, #-100]	@ 80031c0 <arm_conv_f32+0x2f4>
 8003226:	d058      	beq.n	80032da <arm_conv_f32+0x40e>
 8003228:	f100 0210 	add.w	r2, r0, #16
 800322c:	f1a7 0310 	sub.w	r3, r7, #16
 8003230:	462c      	mov	r4, r5
 8003232:	ed52 6a04 	vldr	s13, [r2, #-16]
 8003236:	edd3 3a04 	vldr	s7, [r3, #16]
 800323a:	ed12 7a03 	vldr	s14, [r2, #-12]
 800323e:	ed93 4a03 	vldr	s8, [r3, #12]
 8003242:	ed52 7a02 	vldr	s15, [r2, #-8]
 8003246:	edd3 4a02 	vldr	s9, [r3, #8]
 800324a:	ed12 6a01 	vldr	s12, [r2, #-4]
 800324e:	ed93 5a01 	vldr	s10, [r3, #4]
 8003252:	ee66 6aa3 	vmul.f32	s13, s13, s7
 8003256:	ee27 7a04 	vmul.f32	s14, s14, s8
 800325a:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800325e:	ee67 7aa4 	vmul.f32	s15, s15, s9
 8003262:	ee37 7a26 	vadd.f32	s14, s14, s13
 8003266:	ee66 6a05 	vmul.f32	s13, s12, s10
 800326a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800326e:	3c01      	subs	r4, #1
 8003270:	f102 0210 	add.w	r2, r2, #16
 8003274:	ee76 5aa7 	vadd.f32	s11, s13, s15
 8003278:	f1a3 0310 	sub.w	r3, r3, #16
 800327c:	d1d9      	bne.n	8003232 <arm_conv_f32+0x366>
 800327e:	ebc5 7305 	rsb	r3, r5, r5, lsl #28
 8003282:	eb07 1303 	add.w	r3, r7, r3, lsl #4
 8003286:	eb00 1505 	add.w	r5, r0, r5, lsl #4
 800328a:	f011 0203 	ands.w	r2, r1, #3
 800328e:	d01b      	beq.n	80032c8 <arm_conv_f32+0x3fc>
 8003290:	edd3 7a00 	vldr	s15, [r3]
 8003294:	ed95 7a00 	vldr	s14, [r5]
 8003298:	ee67 7a87 	vmul.f32	s15, s15, s14
 800329c:	3a01      	subs	r2, #1
 800329e:	ee75 5aa7 	vadd.f32	s11, s11, s15
 80032a2:	d011      	beq.n	80032c8 <arm_conv_f32+0x3fc>
 80032a4:	ed53 7a01 	vldr	s15, [r3, #-4]
 80032a8:	ed95 7a01 	vldr	s14, [r5, #4]
 80032ac:	ee67 7a87 	vmul.f32	s15, s15, s14
 80032b0:	2a01      	cmp	r2, #1
 80032b2:	ee75 5aa7 	vadd.f32	s11, s11, s15
 80032b6:	d007      	beq.n	80032c8 <arm_conv_f32+0x3fc>
 80032b8:	edd5 7a02 	vldr	s15, [r5, #8]
 80032bc:	ed13 7a02 	vldr	s14, [r3, #-8]
 80032c0:	ee67 7a87 	vmul.f32	s15, s15, s14
 80032c4:	ee75 5aa7 	vadd.f32	s11, s11, s15
 80032c8:	3901      	subs	r1, #1
 80032ca:	ecec 5a01 	vstmia	ip!, {s11}
 80032ce:	f100 0004 	add.w	r0, r0, #4
 80032d2:	d1a5      	bne.n	8003220 <arm_conv_f32+0x354>
 80032d4:	b00b      	add	sp, #44	@ 0x2c
 80032d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80032da:	463b      	mov	r3, r7
 80032dc:	4605      	mov	r5, r0
 80032de:	e7d4      	b.n	800328a <arm_conv_f32+0x3be>
 80032e0:	9b02      	ldr	r3, [sp, #8]
 80032e2:	e9dd 7008 	ldrd	r7, r0, [sp, #32]
 80032e6:	009b      	lsls	r3, r3, #2
 80032e8:	9302      	str	r3, [sp, #8]
 80032ea:	9b03      	ldr	r3, [sp, #12]
 80032ec:	e9dd 4106 	ldrd	r4, r1, [sp, #24]
 80032f0:	4403      	add	r3, r0
 80032f2:	465d      	mov	r5, fp
 80032f4:	469e      	mov	lr, r3
 80032f6:	9b01      	ldr	r3, [sp, #4]
 80032f8:	f013 0c03 	ands.w	ip, r3, #3
 80032fc:	d075      	beq.n	80033ea <arm_conv_f32+0x51e>
 80032fe:	9b02      	ldr	r3, [sp, #8]
 8003300:	ea4f 0a94 	mov.w	sl, r4, lsr #2
 8003304:	f004 0403 	and.w	r4, r4, #3
 8003308:	f104 3bff 	add.w	fp, r4, #4294967295	@ 0xffffffff
 800330c:	f103 0801 	add.w	r8, r3, #1
 8003310:	ea4f 130a 	mov.w	r3, sl, lsl #4
 8003314:	e9cd 7002 	strd	r7, r0, [sp, #8]
 8003318:	ebca 790a 	rsb	r9, sl, sl, lsl #28
 800331c:	eb00 0888 	add.w	r8, r0, r8, lsl #2
 8003320:	f1a7 0210 	sub.w	r2, r7, #16
 8003324:	4618      	mov	r0, r3
 8003326:	465b      	mov	r3, fp
 8003328:	eb07 1909 	add.w	r9, r7, r9, lsl #4
 800332c:	468b      	mov	fp, r1
 800332e:	eb05 0c8c 	add.w	ip, r5, ip, lsl #2
 8003332:	4621      	mov	r1, r4
 8003334:	4617      	mov	r7, r2
 8003336:	461c      	mov	r4, r3
 8003338:	ed5f 7a5f 	vldr	s15, [pc, #-380]	@ 80031c0 <arm_conv_f32+0x2f4>
 800333c:	f10e 0210 	add.w	r2, lr, #16
 8003340:	463b      	mov	r3, r7
 8003342:	4656      	mov	r6, sl
 8003344:	ed12 7a04 	vldr	s14, [r2, #-16]
 8003348:	edd3 3a04 	vldr	s7, [r3, #16]
 800334c:	ed12 6a03 	vldr	s12, [r2, #-12]
 8003350:	ed93 4a03 	vldr	s8, [r3, #12]
 8003354:	ed52 6a02 	vldr	s13, [r2, #-8]
 8003358:	edd3 4a02 	vldr	s9, [r3, #8]
 800335c:	ed52 5a01 	vldr	s11, [r2, #-4]
 8003360:	ed93 5a01 	vldr	s10, [r3, #4]
 8003364:	ee27 7a23 	vmul.f32	s14, s14, s7
 8003368:	ee26 6a04 	vmul.f32	s12, s12, s8
 800336c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8003370:	ee26 7aa4 	vmul.f32	s14, s13, s9
 8003374:	ee76 7a27 	vadd.f32	s15, s12, s15
 8003378:	ee65 6a85 	vmul.f32	s13, s11, s10
 800337c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8003380:	3e01      	subs	r6, #1
 8003382:	f102 0210 	add.w	r2, r2, #16
 8003386:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800338a:	f1a3 0310 	sub.w	r3, r3, #16
 800338e:	d1d9      	bne.n	8003344 <arm_conv_f32+0x478>
 8003390:	4486      	add	lr, r0
 8003392:	b1d1      	cbz	r1, 80033ca <arm_conv_f32+0x4fe>
 8003394:	ed99 7a00 	vldr	s14, [r9]
 8003398:	edde 6a00 	vldr	s13, [lr]
 800339c:	ee27 7a26 	vmul.f32	s14, s14, s13
 80033a0:	ee77 7a87 	vadd.f32	s15, s15, s14
 80033a4:	b18c      	cbz	r4, 80033ca <arm_conv_f32+0x4fe>
 80033a6:	ed19 7a01 	vldr	s14, [r9, #-4]
 80033aa:	edde 6a01 	vldr	s13, [lr, #4]
 80033ae:	ee27 7a26 	vmul.f32	s14, s14, s13
 80033b2:	2c01      	cmp	r4, #1
 80033b4:	ee77 7a87 	vadd.f32	s15, s15, s14
 80033b8:	d007      	beq.n	80033ca <arm_conv_f32+0x4fe>
 80033ba:	ed9e 7a02 	vldr	s14, [lr, #8]
 80033be:	ed59 6a02 	vldr	s13, [r9, #-8]
 80033c2:	ee27 7a26 	vmul.f32	s14, s14, s13
 80033c6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80033ca:	ece5 7a01 	vstmia	r5!, {s15}
 80033ce:	4565      	cmp	r5, ip
 80033d0:	46c6      	mov	lr, r8
 80033d2:	f108 0804 	add.w	r8, r8, #4
 80033d6:	d1af      	bne.n	8003338 <arm_conv_f32+0x46c>
 80033d8:	e9dd 7002 	ldrd	r7, r0, [sp, #8]
 80033dc:	4659      	mov	r1, fp
 80033de:	9b01      	ldr	r3, [sp, #4]
 80033e0:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 80033e4:	e71c      	b.n	8003220 <arm_conv_f32+0x354>
 80033e6:	4686      	mov	lr, r0
 80033e8:	e785      	b.n	80032f6 <arm_conv_f32+0x42a>
 80033ea:	46ac      	mov	ip, r5
 80033ec:	e7f7      	b.n	80033de <arm_conv_f32+0x512>
 80033ee:	9a01      	ldr	r2, [sp, #4]
 80033f0:	2a00      	cmp	r2, #0
 80033f2:	f47f aedd 	bne.w	80031b0 <arm_conv_f32+0x2e4>
 80033f6:	e76d      	b.n	80032d4 <arm_conv_f32+0x408>
 80033f8:	ed5f 7a8f 	vldr	s15, [pc, #-572]	@ 80031c0 <arm_conv_f32+0x2f4>
 80033fc:	4680      	mov	r8, r0
 80033fe:	e5e3      	b.n	8002fc8 <arm_conv_f32+0xfc>

08003400 <arm_sub_f32>:
 8003400:	ea5f 0c93 	movs.w	ip, r3, lsr #2
 8003404:	b4f0      	push	{r4, r5, r6, r7}
 8003406:	d033      	beq.n	8003470 <arm_sub_f32+0x70>
 8003408:	f100 0610 	add.w	r6, r0, #16
 800340c:	f101 0510 	add.w	r5, r1, #16
 8003410:	f102 0410 	add.w	r4, r2, #16
 8003414:	4667      	mov	r7, ip
 8003416:	ed15 7a04 	vldr	s14, [r5, #-16]
 800341a:	ed56 7a04 	vldr	s15, [r6, #-16]
 800341e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8003422:	3f01      	subs	r7, #1
 8003424:	ed44 7a04 	vstr	s15, [r4, #-16]
 8003428:	ed15 7a03 	vldr	s14, [r5, #-12]
 800342c:	ed56 7a03 	vldr	s15, [r6, #-12]
 8003430:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8003434:	f106 0610 	add.w	r6, r6, #16
 8003438:	ed44 7a03 	vstr	s15, [r4, #-12]
 800343c:	ed15 7a02 	vldr	s14, [r5, #-8]
 8003440:	ed56 7a06 	vldr	s15, [r6, #-24]	@ 0xffffffe8
 8003444:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8003448:	f105 0510 	add.w	r5, r5, #16
 800344c:	ed44 7a02 	vstr	s15, [r4, #-8]
 8003450:	ed56 7a05 	vldr	s15, [r6, #-20]	@ 0xffffffec
 8003454:	ed15 7a05 	vldr	s14, [r5, #-20]	@ 0xffffffec
 8003458:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800345c:	f104 0410 	add.w	r4, r4, #16
 8003460:	ed44 7a05 	vstr	s15, [r4, #-20]	@ 0xffffffec
 8003464:	d1d7      	bne.n	8003416 <arm_sub_f32+0x16>
 8003466:	ea4f 140c 	mov.w	r4, ip, lsl #4
 800346a:	4420      	add	r0, r4
 800346c:	4421      	add	r1, r4
 800346e:	4422      	add	r2, r4
 8003470:	f013 0303 	ands.w	r3, r3, #3
 8003474:	d01b      	beq.n	80034ae <arm_sub_f32+0xae>
 8003476:	edd0 7a00 	vldr	s15, [r0]
 800347a:	ed91 7a00 	vldr	s14, [r1]
 800347e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8003482:	3b01      	subs	r3, #1
 8003484:	edc2 7a00 	vstr	s15, [r2]
 8003488:	d011      	beq.n	80034ae <arm_sub_f32+0xae>
 800348a:	edd0 7a01 	vldr	s15, [r0, #4]
 800348e:	ed91 7a01 	vldr	s14, [r1, #4]
 8003492:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8003496:	2b01      	cmp	r3, #1
 8003498:	edc2 7a01 	vstr	s15, [r2, #4]
 800349c:	d007      	beq.n	80034ae <arm_sub_f32+0xae>
 800349e:	edd0 7a02 	vldr	s15, [r0, #8]
 80034a2:	ed91 7a02 	vldr	s14, [r1, #8]
 80034a6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80034aa:	edc2 7a02 	vstr	s15, [r2, #8]
 80034ae:	bcf0      	pop	{r4, r5, r6, r7}
 80034b0:	4770      	bx	lr
 80034b2:	bf00      	nop

080034b4 <arm_mult_f32>:
 80034b4:	ea5f 0c93 	movs.w	ip, r3, lsr #2
 80034b8:	b4f0      	push	{r4, r5, r6, r7}
 80034ba:	d033      	beq.n	8003524 <arm_mult_f32+0x70>
 80034bc:	f100 0610 	add.w	r6, r0, #16
 80034c0:	f101 0510 	add.w	r5, r1, #16
 80034c4:	f102 0410 	add.w	r4, r2, #16
 80034c8:	4667      	mov	r7, ip
 80034ca:	ed15 7a04 	vldr	s14, [r5, #-16]
 80034ce:	ed56 7a04 	vldr	s15, [r6, #-16]
 80034d2:	ee67 7a87 	vmul.f32	s15, s15, s14
 80034d6:	3f01      	subs	r7, #1
 80034d8:	ed44 7a04 	vstr	s15, [r4, #-16]
 80034dc:	ed15 7a03 	vldr	s14, [r5, #-12]
 80034e0:	ed56 7a03 	vldr	s15, [r6, #-12]
 80034e4:	ee67 7a87 	vmul.f32	s15, s15, s14
 80034e8:	f106 0610 	add.w	r6, r6, #16
 80034ec:	ed44 7a03 	vstr	s15, [r4, #-12]
 80034f0:	ed15 7a02 	vldr	s14, [r5, #-8]
 80034f4:	ed56 7a06 	vldr	s15, [r6, #-24]	@ 0xffffffe8
 80034f8:	ee67 7a87 	vmul.f32	s15, s15, s14
 80034fc:	f105 0510 	add.w	r5, r5, #16
 8003500:	ed44 7a02 	vstr	s15, [r4, #-8]
 8003504:	ed56 7a05 	vldr	s15, [r6, #-20]	@ 0xffffffec
 8003508:	ed15 7a05 	vldr	s14, [r5, #-20]	@ 0xffffffec
 800350c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003510:	f104 0410 	add.w	r4, r4, #16
 8003514:	ed44 7a05 	vstr	s15, [r4, #-20]	@ 0xffffffec
 8003518:	d1d7      	bne.n	80034ca <arm_mult_f32+0x16>
 800351a:	ea4f 140c 	mov.w	r4, ip, lsl #4
 800351e:	4420      	add	r0, r4
 8003520:	4421      	add	r1, r4
 8003522:	4422      	add	r2, r4
 8003524:	f013 0303 	ands.w	r3, r3, #3
 8003528:	d01b      	beq.n	8003562 <arm_mult_f32+0xae>
 800352a:	edd1 7a00 	vldr	s15, [r1]
 800352e:	ed90 7a00 	vldr	s14, [r0]
 8003532:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003536:	3b01      	subs	r3, #1
 8003538:	edc2 7a00 	vstr	s15, [r2]
 800353c:	d011      	beq.n	8003562 <arm_mult_f32+0xae>
 800353e:	edd0 7a01 	vldr	s15, [r0, #4]
 8003542:	ed91 7a01 	vldr	s14, [r1, #4]
 8003546:	ee67 7a87 	vmul.f32	s15, s15, s14
 800354a:	2b01      	cmp	r3, #1
 800354c:	edc2 7a01 	vstr	s15, [r2, #4]
 8003550:	d007      	beq.n	8003562 <arm_mult_f32+0xae>
 8003552:	edd0 7a02 	vldr	s15, [r0, #8]
 8003556:	ed91 7a02 	vldr	s14, [r1, #8]
 800355a:	ee67 7a87 	vmul.f32	s15, s15, s14
 800355e:	edc2 7a02 	vstr	s15, [r2, #8]
 8003562:	bcf0      	pop	{r4, r5, r6, r7}
 8003564:	4770      	bx	lr
 8003566:	bf00      	nop

08003568 <arm_add_f32>:
 8003568:	ea5f 0c93 	movs.w	ip, r3, lsr #2
 800356c:	b4f0      	push	{r4, r5, r6, r7}
 800356e:	d033      	beq.n	80035d8 <arm_add_f32+0x70>
 8003570:	f100 0610 	add.w	r6, r0, #16
 8003574:	f101 0510 	add.w	r5, r1, #16
 8003578:	f102 0410 	add.w	r4, r2, #16
 800357c:	4667      	mov	r7, ip
 800357e:	ed15 7a04 	vldr	s14, [r5, #-16]
 8003582:	ed56 7a04 	vldr	s15, [r6, #-16]
 8003586:	ee77 7a87 	vadd.f32	s15, s15, s14
 800358a:	3f01      	subs	r7, #1
 800358c:	ed44 7a04 	vstr	s15, [r4, #-16]
 8003590:	ed15 7a03 	vldr	s14, [r5, #-12]
 8003594:	ed56 7a03 	vldr	s15, [r6, #-12]
 8003598:	ee77 7a87 	vadd.f32	s15, s15, s14
 800359c:	f106 0610 	add.w	r6, r6, #16
 80035a0:	ed44 7a03 	vstr	s15, [r4, #-12]
 80035a4:	ed15 7a02 	vldr	s14, [r5, #-8]
 80035a8:	ed56 7a06 	vldr	s15, [r6, #-24]	@ 0xffffffe8
 80035ac:	ee77 7a87 	vadd.f32	s15, s15, s14
 80035b0:	f105 0510 	add.w	r5, r5, #16
 80035b4:	ed44 7a02 	vstr	s15, [r4, #-8]
 80035b8:	ed56 7a05 	vldr	s15, [r6, #-20]	@ 0xffffffec
 80035bc:	ed15 7a05 	vldr	s14, [r5, #-20]	@ 0xffffffec
 80035c0:	ee77 7a87 	vadd.f32	s15, s15, s14
 80035c4:	f104 0410 	add.w	r4, r4, #16
 80035c8:	ed44 7a05 	vstr	s15, [r4, #-20]	@ 0xffffffec
 80035cc:	d1d7      	bne.n	800357e <arm_add_f32+0x16>
 80035ce:	ea4f 140c 	mov.w	r4, ip, lsl #4
 80035d2:	4420      	add	r0, r4
 80035d4:	4421      	add	r1, r4
 80035d6:	4422      	add	r2, r4
 80035d8:	f013 0303 	ands.w	r3, r3, #3
 80035dc:	d01b      	beq.n	8003616 <arm_add_f32+0xae>
 80035de:	edd1 7a00 	vldr	s15, [r1]
 80035e2:	ed90 7a00 	vldr	s14, [r0]
 80035e6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80035ea:	3b01      	subs	r3, #1
 80035ec:	edc2 7a00 	vstr	s15, [r2]
 80035f0:	d011      	beq.n	8003616 <arm_add_f32+0xae>
 80035f2:	edd0 7a01 	vldr	s15, [r0, #4]
 80035f6:	ed91 7a01 	vldr	s14, [r1, #4]
 80035fa:	ee77 7a87 	vadd.f32	s15, s15, s14
 80035fe:	2b01      	cmp	r3, #1
 8003600:	edc2 7a01 	vstr	s15, [r2, #4]
 8003604:	d007      	beq.n	8003616 <arm_add_f32+0xae>
 8003606:	edd0 7a02 	vldr	s15, [r0, #8]
 800360a:	ed91 7a02 	vldr	s14, [r1, #8]
 800360e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8003612:	edc2 7a02 	vstr	s15, [r2, #8]
 8003616:	bcf0      	pop	{r4, r5, r6, r7}
 8003618:	4770      	bx	lr
 800361a:	bf00      	nop

0800361c <__cvt>:
 800361c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8003620:	ec57 6b10 	vmov	r6, r7, d0
 8003624:	2f00      	cmp	r7, #0
 8003626:	460c      	mov	r4, r1
 8003628:	4619      	mov	r1, r3
 800362a:	463b      	mov	r3, r7
 800362c:	bfbb      	ittet	lt
 800362e:	f107 4300 	addlt.w	r3, r7, #2147483648	@ 0x80000000
 8003632:	461f      	movlt	r7, r3
 8003634:	2300      	movge	r3, #0
 8003636:	232d      	movlt	r3, #45	@ 0x2d
 8003638:	700b      	strb	r3, [r1, #0]
 800363a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800363c:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 8003640:	4691      	mov	r9, r2
 8003642:	f023 0820 	bic.w	r8, r3, #32
 8003646:	bfbc      	itt	lt
 8003648:	4632      	movlt	r2, r6
 800364a:	4616      	movlt	r6, r2
 800364c:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8003650:	d005      	beq.n	800365e <__cvt+0x42>
 8003652:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 8003656:	d100      	bne.n	800365a <__cvt+0x3e>
 8003658:	3401      	adds	r4, #1
 800365a:	2102      	movs	r1, #2
 800365c:	e000      	b.n	8003660 <__cvt+0x44>
 800365e:	2103      	movs	r1, #3
 8003660:	ab03      	add	r3, sp, #12
 8003662:	9301      	str	r3, [sp, #4]
 8003664:	ab02      	add	r3, sp, #8
 8003666:	9300      	str	r3, [sp, #0]
 8003668:	ec47 6b10 	vmov	d0, r6, r7
 800366c:	4653      	mov	r3, sl
 800366e:	4622      	mov	r2, r4
 8003670:	f000 fdbe 	bl	80041f0 <_dtoa_r>
 8003674:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 8003678:	4605      	mov	r5, r0
 800367a:	d119      	bne.n	80036b0 <__cvt+0x94>
 800367c:	f019 0f01 	tst.w	r9, #1
 8003680:	d00e      	beq.n	80036a0 <__cvt+0x84>
 8003682:	eb00 0904 	add.w	r9, r0, r4
 8003686:	2200      	movs	r2, #0
 8003688:	2300      	movs	r3, #0
 800368a:	4630      	mov	r0, r6
 800368c:	4639      	mov	r1, r7
 800368e:	f7fd fa33 	bl	8000af8 <__aeabi_dcmpeq>
 8003692:	b108      	cbz	r0, 8003698 <__cvt+0x7c>
 8003694:	f8cd 900c 	str.w	r9, [sp, #12]
 8003698:	2230      	movs	r2, #48	@ 0x30
 800369a:	9b03      	ldr	r3, [sp, #12]
 800369c:	454b      	cmp	r3, r9
 800369e:	d31e      	bcc.n	80036de <__cvt+0xc2>
 80036a0:	9b03      	ldr	r3, [sp, #12]
 80036a2:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80036a4:	1b5b      	subs	r3, r3, r5
 80036a6:	4628      	mov	r0, r5
 80036a8:	6013      	str	r3, [r2, #0]
 80036aa:	b004      	add	sp, #16
 80036ac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80036b0:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 80036b4:	eb00 0904 	add.w	r9, r0, r4
 80036b8:	d1e5      	bne.n	8003686 <__cvt+0x6a>
 80036ba:	7803      	ldrb	r3, [r0, #0]
 80036bc:	2b30      	cmp	r3, #48	@ 0x30
 80036be:	d10a      	bne.n	80036d6 <__cvt+0xba>
 80036c0:	2200      	movs	r2, #0
 80036c2:	2300      	movs	r3, #0
 80036c4:	4630      	mov	r0, r6
 80036c6:	4639      	mov	r1, r7
 80036c8:	f7fd fa16 	bl	8000af8 <__aeabi_dcmpeq>
 80036cc:	b918      	cbnz	r0, 80036d6 <__cvt+0xba>
 80036ce:	f1c4 0401 	rsb	r4, r4, #1
 80036d2:	f8ca 4000 	str.w	r4, [sl]
 80036d6:	f8da 3000 	ldr.w	r3, [sl]
 80036da:	4499      	add	r9, r3
 80036dc:	e7d3      	b.n	8003686 <__cvt+0x6a>
 80036de:	1c59      	adds	r1, r3, #1
 80036e0:	9103      	str	r1, [sp, #12]
 80036e2:	701a      	strb	r2, [r3, #0]
 80036e4:	e7d9      	b.n	800369a <__cvt+0x7e>

080036e6 <__exponent>:
 80036e6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80036e8:	2900      	cmp	r1, #0
 80036ea:	bfba      	itte	lt
 80036ec:	4249      	neglt	r1, r1
 80036ee:	232d      	movlt	r3, #45	@ 0x2d
 80036f0:	232b      	movge	r3, #43	@ 0x2b
 80036f2:	2909      	cmp	r1, #9
 80036f4:	7002      	strb	r2, [r0, #0]
 80036f6:	7043      	strb	r3, [r0, #1]
 80036f8:	dd29      	ble.n	800374e <__exponent+0x68>
 80036fa:	f10d 0307 	add.w	r3, sp, #7
 80036fe:	461d      	mov	r5, r3
 8003700:	270a      	movs	r7, #10
 8003702:	461a      	mov	r2, r3
 8003704:	fbb1 f6f7 	udiv	r6, r1, r7
 8003708:	fb07 1416 	mls	r4, r7, r6, r1
 800370c:	3430      	adds	r4, #48	@ 0x30
 800370e:	f802 4c01 	strb.w	r4, [r2, #-1]
 8003712:	460c      	mov	r4, r1
 8003714:	2c63      	cmp	r4, #99	@ 0x63
 8003716:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
 800371a:	4631      	mov	r1, r6
 800371c:	dcf1      	bgt.n	8003702 <__exponent+0x1c>
 800371e:	3130      	adds	r1, #48	@ 0x30
 8003720:	1e94      	subs	r4, r2, #2
 8003722:	f803 1c01 	strb.w	r1, [r3, #-1]
 8003726:	1c41      	adds	r1, r0, #1
 8003728:	4623      	mov	r3, r4
 800372a:	42ab      	cmp	r3, r5
 800372c:	d30a      	bcc.n	8003744 <__exponent+0x5e>
 800372e:	f10d 0309 	add.w	r3, sp, #9
 8003732:	1a9b      	subs	r3, r3, r2
 8003734:	42ac      	cmp	r4, r5
 8003736:	bf88      	it	hi
 8003738:	2300      	movhi	r3, #0
 800373a:	3302      	adds	r3, #2
 800373c:	4403      	add	r3, r0
 800373e:	1a18      	subs	r0, r3, r0
 8003740:	b003      	add	sp, #12
 8003742:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003744:	f813 6b01 	ldrb.w	r6, [r3], #1
 8003748:	f801 6f01 	strb.w	r6, [r1, #1]!
 800374c:	e7ed      	b.n	800372a <__exponent+0x44>
 800374e:	2330      	movs	r3, #48	@ 0x30
 8003750:	3130      	adds	r1, #48	@ 0x30
 8003752:	7083      	strb	r3, [r0, #2]
 8003754:	70c1      	strb	r1, [r0, #3]
 8003756:	1d03      	adds	r3, r0, #4
 8003758:	e7f1      	b.n	800373e <__exponent+0x58>
	...

0800375c <_printf_float>:
 800375c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003760:	b08d      	sub	sp, #52	@ 0x34
 8003762:	460c      	mov	r4, r1
 8003764:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8003768:	4616      	mov	r6, r2
 800376a:	461f      	mov	r7, r3
 800376c:	4605      	mov	r5, r0
 800376e:	f000 fc77 	bl	8004060 <_localeconv_r>
 8003772:	6803      	ldr	r3, [r0, #0]
 8003774:	9304      	str	r3, [sp, #16]
 8003776:	4618      	mov	r0, r3
 8003778:	f7fc fd92 	bl	80002a0 <strlen>
 800377c:	2300      	movs	r3, #0
 800377e:	930a      	str	r3, [sp, #40]	@ 0x28
 8003780:	f8d8 3000 	ldr.w	r3, [r8]
 8003784:	9005      	str	r0, [sp, #20]
 8003786:	3307      	adds	r3, #7
 8003788:	f023 0307 	bic.w	r3, r3, #7
 800378c:	f103 0208 	add.w	r2, r3, #8
 8003790:	f894 a018 	ldrb.w	sl, [r4, #24]
 8003794:	f8d4 b000 	ldr.w	fp, [r4]
 8003798:	f8c8 2000 	str.w	r2, [r8]
 800379c:	e9d3 8900 	ldrd	r8, r9, [r3]
 80037a0:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 80037a4:	9307      	str	r3, [sp, #28]
 80037a6:	f8cd 8018 	str.w	r8, [sp, #24]
 80037aa:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 80037ae:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80037b2:	4b9c      	ldr	r3, [pc, #624]	@ (8003a24 <_printf_float+0x2c8>)
 80037b4:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 80037b8:	f7fd f9d0 	bl	8000b5c <__aeabi_dcmpun>
 80037bc:	bb70      	cbnz	r0, 800381c <_printf_float+0xc0>
 80037be:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80037c2:	4b98      	ldr	r3, [pc, #608]	@ (8003a24 <_printf_float+0x2c8>)
 80037c4:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 80037c8:	f7fd f9aa 	bl	8000b20 <__aeabi_dcmple>
 80037cc:	bb30      	cbnz	r0, 800381c <_printf_float+0xc0>
 80037ce:	2200      	movs	r2, #0
 80037d0:	2300      	movs	r3, #0
 80037d2:	4640      	mov	r0, r8
 80037d4:	4649      	mov	r1, r9
 80037d6:	f7fd f999 	bl	8000b0c <__aeabi_dcmplt>
 80037da:	b110      	cbz	r0, 80037e2 <_printf_float+0x86>
 80037dc:	232d      	movs	r3, #45	@ 0x2d
 80037de:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80037e2:	4a91      	ldr	r2, [pc, #580]	@ (8003a28 <_printf_float+0x2cc>)
 80037e4:	4b91      	ldr	r3, [pc, #580]	@ (8003a2c <_printf_float+0x2d0>)
 80037e6:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 80037ea:	bf94      	ite	ls
 80037ec:	4690      	movls	r8, r2
 80037ee:	4698      	movhi	r8, r3
 80037f0:	2303      	movs	r3, #3
 80037f2:	6123      	str	r3, [r4, #16]
 80037f4:	f02b 0304 	bic.w	r3, fp, #4
 80037f8:	6023      	str	r3, [r4, #0]
 80037fa:	f04f 0900 	mov.w	r9, #0
 80037fe:	9700      	str	r7, [sp, #0]
 8003800:	4633      	mov	r3, r6
 8003802:	aa0b      	add	r2, sp, #44	@ 0x2c
 8003804:	4621      	mov	r1, r4
 8003806:	4628      	mov	r0, r5
 8003808:	f000 f9d2 	bl	8003bb0 <_printf_common>
 800380c:	3001      	adds	r0, #1
 800380e:	f040 808d 	bne.w	800392c <_printf_float+0x1d0>
 8003812:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8003816:	b00d      	add	sp, #52	@ 0x34
 8003818:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800381c:	4642      	mov	r2, r8
 800381e:	464b      	mov	r3, r9
 8003820:	4640      	mov	r0, r8
 8003822:	4649      	mov	r1, r9
 8003824:	f7fd f99a 	bl	8000b5c <__aeabi_dcmpun>
 8003828:	b140      	cbz	r0, 800383c <_printf_float+0xe0>
 800382a:	464b      	mov	r3, r9
 800382c:	2b00      	cmp	r3, #0
 800382e:	bfbc      	itt	lt
 8003830:	232d      	movlt	r3, #45	@ 0x2d
 8003832:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 8003836:	4a7e      	ldr	r2, [pc, #504]	@ (8003a30 <_printf_float+0x2d4>)
 8003838:	4b7e      	ldr	r3, [pc, #504]	@ (8003a34 <_printf_float+0x2d8>)
 800383a:	e7d4      	b.n	80037e6 <_printf_float+0x8a>
 800383c:	6863      	ldr	r3, [r4, #4]
 800383e:	f00a 02df 	and.w	r2, sl, #223	@ 0xdf
 8003842:	9206      	str	r2, [sp, #24]
 8003844:	1c5a      	adds	r2, r3, #1
 8003846:	d13b      	bne.n	80038c0 <_printf_float+0x164>
 8003848:	2306      	movs	r3, #6
 800384a:	6063      	str	r3, [r4, #4]
 800384c:	f44b 6280 	orr.w	r2, fp, #1024	@ 0x400
 8003850:	2300      	movs	r3, #0
 8003852:	6022      	str	r2, [r4, #0]
 8003854:	9303      	str	r3, [sp, #12]
 8003856:	ab0a      	add	r3, sp, #40	@ 0x28
 8003858:	e9cd a301 	strd	sl, r3, [sp, #4]
 800385c:	ab09      	add	r3, sp, #36	@ 0x24
 800385e:	9300      	str	r3, [sp, #0]
 8003860:	6861      	ldr	r1, [r4, #4]
 8003862:	ec49 8b10 	vmov	d0, r8, r9
 8003866:	f10d 0323 	add.w	r3, sp, #35	@ 0x23
 800386a:	4628      	mov	r0, r5
 800386c:	f7ff fed6 	bl	800361c <__cvt>
 8003870:	9b06      	ldr	r3, [sp, #24]
 8003872:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8003874:	2b47      	cmp	r3, #71	@ 0x47
 8003876:	4680      	mov	r8, r0
 8003878:	d129      	bne.n	80038ce <_printf_float+0x172>
 800387a:	1cc8      	adds	r0, r1, #3
 800387c:	db02      	blt.n	8003884 <_printf_float+0x128>
 800387e:	6863      	ldr	r3, [r4, #4]
 8003880:	4299      	cmp	r1, r3
 8003882:	dd41      	ble.n	8003908 <_printf_float+0x1ac>
 8003884:	f1aa 0a02 	sub.w	sl, sl, #2
 8003888:	fa5f fa8a 	uxtb.w	sl, sl
 800388c:	3901      	subs	r1, #1
 800388e:	4652      	mov	r2, sl
 8003890:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 8003894:	9109      	str	r1, [sp, #36]	@ 0x24
 8003896:	f7ff ff26 	bl	80036e6 <__exponent>
 800389a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800389c:	1813      	adds	r3, r2, r0
 800389e:	2a01      	cmp	r2, #1
 80038a0:	4681      	mov	r9, r0
 80038a2:	6123      	str	r3, [r4, #16]
 80038a4:	dc02      	bgt.n	80038ac <_printf_float+0x150>
 80038a6:	6822      	ldr	r2, [r4, #0]
 80038a8:	07d2      	lsls	r2, r2, #31
 80038aa:	d501      	bpl.n	80038b0 <_printf_float+0x154>
 80038ac:	3301      	adds	r3, #1
 80038ae:	6123      	str	r3, [r4, #16]
 80038b0:	f89d 3023 	ldrb.w	r3, [sp, #35]	@ 0x23
 80038b4:	2b00      	cmp	r3, #0
 80038b6:	d0a2      	beq.n	80037fe <_printf_float+0xa2>
 80038b8:	232d      	movs	r3, #45	@ 0x2d
 80038ba:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80038be:	e79e      	b.n	80037fe <_printf_float+0xa2>
 80038c0:	9a06      	ldr	r2, [sp, #24]
 80038c2:	2a47      	cmp	r2, #71	@ 0x47
 80038c4:	d1c2      	bne.n	800384c <_printf_float+0xf0>
 80038c6:	2b00      	cmp	r3, #0
 80038c8:	d1c0      	bne.n	800384c <_printf_float+0xf0>
 80038ca:	2301      	movs	r3, #1
 80038cc:	e7bd      	b.n	800384a <_printf_float+0xee>
 80038ce:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 80038d2:	d9db      	bls.n	800388c <_printf_float+0x130>
 80038d4:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 80038d8:	d118      	bne.n	800390c <_printf_float+0x1b0>
 80038da:	2900      	cmp	r1, #0
 80038dc:	6863      	ldr	r3, [r4, #4]
 80038de:	dd0b      	ble.n	80038f8 <_printf_float+0x19c>
 80038e0:	6121      	str	r1, [r4, #16]
 80038e2:	b913      	cbnz	r3, 80038ea <_printf_float+0x18e>
 80038e4:	6822      	ldr	r2, [r4, #0]
 80038e6:	07d0      	lsls	r0, r2, #31
 80038e8:	d502      	bpl.n	80038f0 <_printf_float+0x194>
 80038ea:	3301      	adds	r3, #1
 80038ec:	440b      	add	r3, r1
 80038ee:	6123      	str	r3, [r4, #16]
 80038f0:	65a1      	str	r1, [r4, #88]	@ 0x58
 80038f2:	f04f 0900 	mov.w	r9, #0
 80038f6:	e7db      	b.n	80038b0 <_printf_float+0x154>
 80038f8:	b913      	cbnz	r3, 8003900 <_printf_float+0x1a4>
 80038fa:	6822      	ldr	r2, [r4, #0]
 80038fc:	07d2      	lsls	r2, r2, #31
 80038fe:	d501      	bpl.n	8003904 <_printf_float+0x1a8>
 8003900:	3302      	adds	r3, #2
 8003902:	e7f4      	b.n	80038ee <_printf_float+0x192>
 8003904:	2301      	movs	r3, #1
 8003906:	e7f2      	b.n	80038ee <_printf_float+0x192>
 8003908:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 800390c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800390e:	4299      	cmp	r1, r3
 8003910:	db05      	blt.n	800391e <_printf_float+0x1c2>
 8003912:	6823      	ldr	r3, [r4, #0]
 8003914:	6121      	str	r1, [r4, #16]
 8003916:	07d8      	lsls	r0, r3, #31
 8003918:	d5ea      	bpl.n	80038f0 <_printf_float+0x194>
 800391a:	1c4b      	adds	r3, r1, #1
 800391c:	e7e7      	b.n	80038ee <_printf_float+0x192>
 800391e:	2900      	cmp	r1, #0
 8003920:	bfd4      	ite	le
 8003922:	f1c1 0202 	rsble	r2, r1, #2
 8003926:	2201      	movgt	r2, #1
 8003928:	4413      	add	r3, r2
 800392a:	e7e0      	b.n	80038ee <_printf_float+0x192>
 800392c:	6823      	ldr	r3, [r4, #0]
 800392e:	055a      	lsls	r2, r3, #21
 8003930:	d407      	bmi.n	8003942 <_printf_float+0x1e6>
 8003932:	6923      	ldr	r3, [r4, #16]
 8003934:	4642      	mov	r2, r8
 8003936:	4631      	mov	r1, r6
 8003938:	4628      	mov	r0, r5
 800393a:	47b8      	blx	r7
 800393c:	3001      	adds	r0, #1
 800393e:	d12b      	bne.n	8003998 <_printf_float+0x23c>
 8003940:	e767      	b.n	8003812 <_printf_float+0xb6>
 8003942:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8003946:	f240 80dd 	bls.w	8003b04 <_printf_float+0x3a8>
 800394a:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 800394e:	2200      	movs	r2, #0
 8003950:	2300      	movs	r3, #0
 8003952:	f7fd f8d1 	bl	8000af8 <__aeabi_dcmpeq>
 8003956:	2800      	cmp	r0, #0
 8003958:	d033      	beq.n	80039c2 <_printf_float+0x266>
 800395a:	4a37      	ldr	r2, [pc, #220]	@ (8003a38 <_printf_float+0x2dc>)
 800395c:	2301      	movs	r3, #1
 800395e:	4631      	mov	r1, r6
 8003960:	4628      	mov	r0, r5
 8003962:	47b8      	blx	r7
 8003964:	3001      	adds	r0, #1
 8003966:	f43f af54 	beq.w	8003812 <_printf_float+0xb6>
 800396a:	e9dd 3809 	ldrd	r3, r8, [sp, #36]	@ 0x24
 800396e:	4543      	cmp	r3, r8
 8003970:	db02      	blt.n	8003978 <_printf_float+0x21c>
 8003972:	6823      	ldr	r3, [r4, #0]
 8003974:	07d8      	lsls	r0, r3, #31
 8003976:	d50f      	bpl.n	8003998 <_printf_float+0x23c>
 8003978:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800397c:	4631      	mov	r1, r6
 800397e:	4628      	mov	r0, r5
 8003980:	47b8      	blx	r7
 8003982:	3001      	adds	r0, #1
 8003984:	f43f af45 	beq.w	8003812 <_printf_float+0xb6>
 8003988:	f04f 0900 	mov.w	r9, #0
 800398c:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
 8003990:	f104 0a1a 	add.w	sl, r4, #26
 8003994:	45c8      	cmp	r8, r9
 8003996:	dc09      	bgt.n	80039ac <_printf_float+0x250>
 8003998:	6823      	ldr	r3, [r4, #0]
 800399a:	079b      	lsls	r3, r3, #30
 800399c:	f100 8103 	bmi.w	8003ba6 <_printf_float+0x44a>
 80039a0:	68e0      	ldr	r0, [r4, #12]
 80039a2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80039a4:	4298      	cmp	r0, r3
 80039a6:	bfb8      	it	lt
 80039a8:	4618      	movlt	r0, r3
 80039aa:	e734      	b.n	8003816 <_printf_float+0xba>
 80039ac:	2301      	movs	r3, #1
 80039ae:	4652      	mov	r2, sl
 80039b0:	4631      	mov	r1, r6
 80039b2:	4628      	mov	r0, r5
 80039b4:	47b8      	blx	r7
 80039b6:	3001      	adds	r0, #1
 80039b8:	f43f af2b 	beq.w	8003812 <_printf_float+0xb6>
 80039bc:	f109 0901 	add.w	r9, r9, #1
 80039c0:	e7e8      	b.n	8003994 <_printf_float+0x238>
 80039c2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80039c4:	2b00      	cmp	r3, #0
 80039c6:	dc39      	bgt.n	8003a3c <_printf_float+0x2e0>
 80039c8:	4a1b      	ldr	r2, [pc, #108]	@ (8003a38 <_printf_float+0x2dc>)
 80039ca:	2301      	movs	r3, #1
 80039cc:	4631      	mov	r1, r6
 80039ce:	4628      	mov	r0, r5
 80039d0:	47b8      	blx	r7
 80039d2:	3001      	adds	r0, #1
 80039d4:	f43f af1d 	beq.w	8003812 <_printf_float+0xb6>
 80039d8:	e9dd 3909 	ldrd	r3, r9, [sp, #36]	@ 0x24
 80039dc:	ea59 0303 	orrs.w	r3, r9, r3
 80039e0:	d102      	bne.n	80039e8 <_printf_float+0x28c>
 80039e2:	6823      	ldr	r3, [r4, #0]
 80039e4:	07d9      	lsls	r1, r3, #31
 80039e6:	d5d7      	bpl.n	8003998 <_printf_float+0x23c>
 80039e8:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80039ec:	4631      	mov	r1, r6
 80039ee:	4628      	mov	r0, r5
 80039f0:	47b8      	blx	r7
 80039f2:	3001      	adds	r0, #1
 80039f4:	f43f af0d 	beq.w	8003812 <_printf_float+0xb6>
 80039f8:	f04f 0a00 	mov.w	sl, #0
 80039fc:	f104 0b1a 	add.w	fp, r4, #26
 8003a00:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003a02:	425b      	negs	r3, r3
 8003a04:	4553      	cmp	r3, sl
 8003a06:	dc01      	bgt.n	8003a0c <_printf_float+0x2b0>
 8003a08:	464b      	mov	r3, r9
 8003a0a:	e793      	b.n	8003934 <_printf_float+0x1d8>
 8003a0c:	2301      	movs	r3, #1
 8003a0e:	465a      	mov	r2, fp
 8003a10:	4631      	mov	r1, r6
 8003a12:	4628      	mov	r0, r5
 8003a14:	47b8      	blx	r7
 8003a16:	3001      	adds	r0, #1
 8003a18:	f43f aefb 	beq.w	8003812 <_printf_float+0xb6>
 8003a1c:	f10a 0a01 	add.w	sl, sl, #1
 8003a20:	e7ee      	b.n	8003a00 <_printf_float+0x2a4>
 8003a22:	bf00      	nop
 8003a24:	7fefffff 	.word	0x7fefffff
 8003a28:	08006160 	.word	0x08006160
 8003a2c:	08006164 	.word	0x08006164
 8003a30:	08006168 	.word	0x08006168
 8003a34:	0800616c 	.word	0x0800616c
 8003a38:	08006170 	.word	0x08006170
 8003a3c:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8003a3e:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8003a42:	4553      	cmp	r3, sl
 8003a44:	bfa8      	it	ge
 8003a46:	4653      	movge	r3, sl
 8003a48:	2b00      	cmp	r3, #0
 8003a4a:	4699      	mov	r9, r3
 8003a4c:	dc36      	bgt.n	8003abc <_printf_float+0x360>
 8003a4e:	f04f 0b00 	mov.w	fp, #0
 8003a52:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8003a56:	f104 021a 	add.w	r2, r4, #26
 8003a5a:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8003a5c:	9306      	str	r3, [sp, #24]
 8003a5e:	eba3 0309 	sub.w	r3, r3, r9
 8003a62:	455b      	cmp	r3, fp
 8003a64:	dc31      	bgt.n	8003aca <_printf_float+0x36e>
 8003a66:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003a68:	459a      	cmp	sl, r3
 8003a6a:	dc3a      	bgt.n	8003ae2 <_printf_float+0x386>
 8003a6c:	6823      	ldr	r3, [r4, #0]
 8003a6e:	07da      	lsls	r2, r3, #31
 8003a70:	d437      	bmi.n	8003ae2 <_printf_float+0x386>
 8003a72:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003a74:	ebaa 0903 	sub.w	r9, sl, r3
 8003a78:	9b06      	ldr	r3, [sp, #24]
 8003a7a:	ebaa 0303 	sub.w	r3, sl, r3
 8003a7e:	4599      	cmp	r9, r3
 8003a80:	bfa8      	it	ge
 8003a82:	4699      	movge	r9, r3
 8003a84:	f1b9 0f00 	cmp.w	r9, #0
 8003a88:	dc33      	bgt.n	8003af2 <_printf_float+0x396>
 8003a8a:	f04f 0800 	mov.w	r8, #0
 8003a8e:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8003a92:	f104 0b1a 	add.w	fp, r4, #26
 8003a96:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003a98:	ebaa 0303 	sub.w	r3, sl, r3
 8003a9c:	eba3 0309 	sub.w	r3, r3, r9
 8003aa0:	4543      	cmp	r3, r8
 8003aa2:	f77f af79 	ble.w	8003998 <_printf_float+0x23c>
 8003aa6:	2301      	movs	r3, #1
 8003aa8:	465a      	mov	r2, fp
 8003aaa:	4631      	mov	r1, r6
 8003aac:	4628      	mov	r0, r5
 8003aae:	47b8      	blx	r7
 8003ab0:	3001      	adds	r0, #1
 8003ab2:	f43f aeae 	beq.w	8003812 <_printf_float+0xb6>
 8003ab6:	f108 0801 	add.w	r8, r8, #1
 8003aba:	e7ec      	b.n	8003a96 <_printf_float+0x33a>
 8003abc:	4642      	mov	r2, r8
 8003abe:	4631      	mov	r1, r6
 8003ac0:	4628      	mov	r0, r5
 8003ac2:	47b8      	blx	r7
 8003ac4:	3001      	adds	r0, #1
 8003ac6:	d1c2      	bne.n	8003a4e <_printf_float+0x2f2>
 8003ac8:	e6a3      	b.n	8003812 <_printf_float+0xb6>
 8003aca:	2301      	movs	r3, #1
 8003acc:	4631      	mov	r1, r6
 8003ace:	4628      	mov	r0, r5
 8003ad0:	9206      	str	r2, [sp, #24]
 8003ad2:	47b8      	blx	r7
 8003ad4:	3001      	adds	r0, #1
 8003ad6:	f43f ae9c 	beq.w	8003812 <_printf_float+0xb6>
 8003ada:	9a06      	ldr	r2, [sp, #24]
 8003adc:	f10b 0b01 	add.w	fp, fp, #1
 8003ae0:	e7bb      	b.n	8003a5a <_printf_float+0x2fe>
 8003ae2:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8003ae6:	4631      	mov	r1, r6
 8003ae8:	4628      	mov	r0, r5
 8003aea:	47b8      	blx	r7
 8003aec:	3001      	adds	r0, #1
 8003aee:	d1c0      	bne.n	8003a72 <_printf_float+0x316>
 8003af0:	e68f      	b.n	8003812 <_printf_float+0xb6>
 8003af2:	9a06      	ldr	r2, [sp, #24]
 8003af4:	464b      	mov	r3, r9
 8003af6:	4442      	add	r2, r8
 8003af8:	4631      	mov	r1, r6
 8003afa:	4628      	mov	r0, r5
 8003afc:	47b8      	blx	r7
 8003afe:	3001      	adds	r0, #1
 8003b00:	d1c3      	bne.n	8003a8a <_printf_float+0x32e>
 8003b02:	e686      	b.n	8003812 <_printf_float+0xb6>
 8003b04:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8003b08:	f1ba 0f01 	cmp.w	sl, #1
 8003b0c:	dc01      	bgt.n	8003b12 <_printf_float+0x3b6>
 8003b0e:	07db      	lsls	r3, r3, #31
 8003b10:	d536      	bpl.n	8003b80 <_printf_float+0x424>
 8003b12:	2301      	movs	r3, #1
 8003b14:	4642      	mov	r2, r8
 8003b16:	4631      	mov	r1, r6
 8003b18:	4628      	mov	r0, r5
 8003b1a:	47b8      	blx	r7
 8003b1c:	3001      	adds	r0, #1
 8003b1e:	f43f ae78 	beq.w	8003812 <_printf_float+0xb6>
 8003b22:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8003b26:	4631      	mov	r1, r6
 8003b28:	4628      	mov	r0, r5
 8003b2a:	47b8      	blx	r7
 8003b2c:	3001      	adds	r0, #1
 8003b2e:	f43f ae70 	beq.w	8003812 <_printf_float+0xb6>
 8003b32:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8003b36:	2200      	movs	r2, #0
 8003b38:	2300      	movs	r3, #0
 8003b3a:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
 8003b3e:	f7fc ffdb 	bl	8000af8 <__aeabi_dcmpeq>
 8003b42:	b9c0      	cbnz	r0, 8003b76 <_printf_float+0x41a>
 8003b44:	4653      	mov	r3, sl
 8003b46:	f108 0201 	add.w	r2, r8, #1
 8003b4a:	4631      	mov	r1, r6
 8003b4c:	4628      	mov	r0, r5
 8003b4e:	47b8      	blx	r7
 8003b50:	3001      	adds	r0, #1
 8003b52:	d10c      	bne.n	8003b6e <_printf_float+0x412>
 8003b54:	e65d      	b.n	8003812 <_printf_float+0xb6>
 8003b56:	2301      	movs	r3, #1
 8003b58:	465a      	mov	r2, fp
 8003b5a:	4631      	mov	r1, r6
 8003b5c:	4628      	mov	r0, r5
 8003b5e:	47b8      	blx	r7
 8003b60:	3001      	adds	r0, #1
 8003b62:	f43f ae56 	beq.w	8003812 <_printf_float+0xb6>
 8003b66:	f108 0801 	add.w	r8, r8, #1
 8003b6a:	45d0      	cmp	r8, sl
 8003b6c:	dbf3      	blt.n	8003b56 <_printf_float+0x3fa>
 8003b6e:	464b      	mov	r3, r9
 8003b70:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 8003b74:	e6df      	b.n	8003936 <_printf_float+0x1da>
 8003b76:	f04f 0800 	mov.w	r8, #0
 8003b7a:	f104 0b1a 	add.w	fp, r4, #26
 8003b7e:	e7f4      	b.n	8003b6a <_printf_float+0x40e>
 8003b80:	2301      	movs	r3, #1
 8003b82:	4642      	mov	r2, r8
 8003b84:	e7e1      	b.n	8003b4a <_printf_float+0x3ee>
 8003b86:	2301      	movs	r3, #1
 8003b88:	464a      	mov	r2, r9
 8003b8a:	4631      	mov	r1, r6
 8003b8c:	4628      	mov	r0, r5
 8003b8e:	47b8      	blx	r7
 8003b90:	3001      	adds	r0, #1
 8003b92:	f43f ae3e 	beq.w	8003812 <_printf_float+0xb6>
 8003b96:	f108 0801 	add.w	r8, r8, #1
 8003b9a:	68e3      	ldr	r3, [r4, #12]
 8003b9c:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8003b9e:	1a5b      	subs	r3, r3, r1
 8003ba0:	4543      	cmp	r3, r8
 8003ba2:	dcf0      	bgt.n	8003b86 <_printf_float+0x42a>
 8003ba4:	e6fc      	b.n	80039a0 <_printf_float+0x244>
 8003ba6:	f04f 0800 	mov.w	r8, #0
 8003baa:	f104 0919 	add.w	r9, r4, #25
 8003bae:	e7f4      	b.n	8003b9a <_printf_float+0x43e>

08003bb0 <_printf_common>:
 8003bb0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003bb4:	4616      	mov	r6, r2
 8003bb6:	4698      	mov	r8, r3
 8003bb8:	688a      	ldr	r2, [r1, #8]
 8003bba:	690b      	ldr	r3, [r1, #16]
 8003bbc:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8003bc0:	4293      	cmp	r3, r2
 8003bc2:	bfb8      	it	lt
 8003bc4:	4613      	movlt	r3, r2
 8003bc6:	6033      	str	r3, [r6, #0]
 8003bc8:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8003bcc:	4607      	mov	r7, r0
 8003bce:	460c      	mov	r4, r1
 8003bd0:	b10a      	cbz	r2, 8003bd6 <_printf_common+0x26>
 8003bd2:	3301      	adds	r3, #1
 8003bd4:	6033      	str	r3, [r6, #0]
 8003bd6:	6823      	ldr	r3, [r4, #0]
 8003bd8:	0699      	lsls	r1, r3, #26
 8003bda:	bf42      	ittt	mi
 8003bdc:	6833      	ldrmi	r3, [r6, #0]
 8003bde:	3302      	addmi	r3, #2
 8003be0:	6033      	strmi	r3, [r6, #0]
 8003be2:	6825      	ldr	r5, [r4, #0]
 8003be4:	f015 0506 	ands.w	r5, r5, #6
 8003be8:	d106      	bne.n	8003bf8 <_printf_common+0x48>
 8003bea:	f104 0a19 	add.w	sl, r4, #25
 8003bee:	68e3      	ldr	r3, [r4, #12]
 8003bf0:	6832      	ldr	r2, [r6, #0]
 8003bf2:	1a9b      	subs	r3, r3, r2
 8003bf4:	42ab      	cmp	r3, r5
 8003bf6:	dc26      	bgt.n	8003c46 <_printf_common+0x96>
 8003bf8:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8003bfc:	6822      	ldr	r2, [r4, #0]
 8003bfe:	3b00      	subs	r3, #0
 8003c00:	bf18      	it	ne
 8003c02:	2301      	movne	r3, #1
 8003c04:	0692      	lsls	r2, r2, #26
 8003c06:	d42b      	bmi.n	8003c60 <_printf_common+0xb0>
 8003c08:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8003c0c:	4641      	mov	r1, r8
 8003c0e:	4638      	mov	r0, r7
 8003c10:	47c8      	blx	r9
 8003c12:	3001      	adds	r0, #1
 8003c14:	d01e      	beq.n	8003c54 <_printf_common+0xa4>
 8003c16:	6823      	ldr	r3, [r4, #0]
 8003c18:	6922      	ldr	r2, [r4, #16]
 8003c1a:	f003 0306 	and.w	r3, r3, #6
 8003c1e:	2b04      	cmp	r3, #4
 8003c20:	bf02      	ittt	eq
 8003c22:	68e5      	ldreq	r5, [r4, #12]
 8003c24:	6833      	ldreq	r3, [r6, #0]
 8003c26:	1aed      	subeq	r5, r5, r3
 8003c28:	68a3      	ldr	r3, [r4, #8]
 8003c2a:	bf0c      	ite	eq
 8003c2c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8003c30:	2500      	movne	r5, #0
 8003c32:	4293      	cmp	r3, r2
 8003c34:	bfc4      	itt	gt
 8003c36:	1a9b      	subgt	r3, r3, r2
 8003c38:	18ed      	addgt	r5, r5, r3
 8003c3a:	2600      	movs	r6, #0
 8003c3c:	341a      	adds	r4, #26
 8003c3e:	42b5      	cmp	r5, r6
 8003c40:	d11a      	bne.n	8003c78 <_printf_common+0xc8>
 8003c42:	2000      	movs	r0, #0
 8003c44:	e008      	b.n	8003c58 <_printf_common+0xa8>
 8003c46:	2301      	movs	r3, #1
 8003c48:	4652      	mov	r2, sl
 8003c4a:	4641      	mov	r1, r8
 8003c4c:	4638      	mov	r0, r7
 8003c4e:	47c8      	blx	r9
 8003c50:	3001      	adds	r0, #1
 8003c52:	d103      	bne.n	8003c5c <_printf_common+0xac>
 8003c54:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8003c58:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003c5c:	3501      	adds	r5, #1
 8003c5e:	e7c6      	b.n	8003bee <_printf_common+0x3e>
 8003c60:	18e1      	adds	r1, r4, r3
 8003c62:	1c5a      	adds	r2, r3, #1
 8003c64:	2030      	movs	r0, #48	@ 0x30
 8003c66:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8003c6a:	4422      	add	r2, r4
 8003c6c:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8003c70:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8003c74:	3302      	adds	r3, #2
 8003c76:	e7c7      	b.n	8003c08 <_printf_common+0x58>
 8003c78:	2301      	movs	r3, #1
 8003c7a:	4622      	mov	r2, r4
 8003c7c:	4641      	mov	r1, r8
 8003c7e:	4638      	mov	r0, r7
 8003c80:	47c8      	blx	r9
 8003c82:	3001      	adds	r0, #1
 8003c84:	d0e6      	beq.n	8003c54 <_printf_common+0xa4>
 8003c86:	3601      	adds	r6, #1
 8003c88:	e7d9      	b.n	8003c3e <_printf_common+0x8e>
	...

08003c8c <_printf_i>:
 8003c8c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8003c90:	7e0f      	ldrb	r7, [r1, #24]
 8003c92:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8003c94:	2f78      	cmp	r7, #120	@ 0x78
 8003c96:	4691      	mov	r9, r2
 8003c98:	4680      	mov	r8, r0
 8003c9a:	460c      	mov	r4, r1
 8003c9c:	469a      	mov	sl, r3
 8003c9e:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8003ca2:	d807      	bhi.n	8003cb4 <_printf_i+0x28>
 8003ca4:	2f62      	cmp	r7, #98	@ 0x62
 8003ca6:	d80a      	bhi.n	8003cbe <_printf_i+0x32>
 8003ca8:	2f00      	cmp	r7, #0
 8003caa:	f000 80d2 	beq.w	8003e52 <_printf_i+0x1c6>
 8003cae:	2f58      	cmp	r7, #88	@ 0x58
 8003cb0:	f000 80b9 	beq.w	8003e26 <_printf_i+0x19a>
 8003cb4:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8003cb8:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8003cbc:	e03a      	b.n	8003d34 <_printf_i+0xa8>
 8003cbe:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8003cc2:	2b15      	cmp	r3, #21
 8003cc4:	d8f6      	bhi.n	8003cb4 <_printf_i+0x28>
 8003cc6:	a101      	add	r1, pc, #4	@ (adr r1, 8003ccc <_printf_i+0x40>)
 8003cc8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8003ccc:	08003d25 	.word	0x08003d25
 8003cd0:	08003d39 	.word	0x08003d39
 8003cd4:	08003cb5 	.word	0x08003cb5
 8003cd8:	08003cb5 	.word	0x08003cb5
 8003cdc:	08003cb5 	.word	0x08003cb5
 8003ce0:	08003cb5 	.word	0x08003cb5
 8003ce4:	08003d39 	.word	0x08003d39
 8003ce8:	08003cb5 	.word	0x08003cb5
 8003cec:	08003cb5 	.word	0x08003cb5
 8003cf0:	08003cb5 	.word	0x08003cb5
 8003cf4:	08003cb5 	.word	0x08003cb5
 8003cf8:	08003e39 	.word	0x08003e39
 8003cfc:	08003d63 	.word	0x08003d63
 8003d00:	08003df3 	.word	0x08003df3
 8003d04:	08003cb5 	.word	0x08003cb5
 8003d08:	08003cb5 	.word	0x08003cb5
 8003d0c:	08003e5b 	.word	0x08003e5b
 8003d10:	08003cb5 	.word	0x08003cb5
 8003d14:	08003d63 	.word	0x08003d63
 8003d18:	08003cb5 	.word	0x08003cb5
 8003d1c:	08003cb5 	.word	0x08003cb5
 8003d20:	08003dfb 	.word	0x08003dfb
 8003d24:	6833      	ldr	r3, [r6, #0]
 8003d26:	1d1a      	adds	r2, r3, #4
 8003d28:	681b      	ldr	r3, [r3, #0]
 8003d2a:	6032      	str	r2, [r6, #0]
 8003d2c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8003d30:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8003d34:	2301      	movs	r3, #1
 8003d36:	e09d      	b.n	8003e74 <_printf_i+0x1e8>
 8003d38:	6833      	ldr	r3, [r6, #0]
 8003d3a:	6820      	ldr	r0, [r4, #0]
 8003d3c:	1d19      	adds	r1, r3, #4
 8003d3e:	6031      	str	r1, [r6, #0]
 8003d40:	0606      	lsls	r6, r0, #24
 8003d42:	d501      	bpl.n	8003d48 <_printf_i+0xbc>
 8003d44:	681d      	ldr	r5, [r3, #0]
 8003d46:	e003      	b.n	8003d50 <_printf_i+0xc4>
 8003d48:	0645      	lsls	r5, r0, #25
 8003d4a:	d5fb      	bpl.n	8003d44 <_printf_i+0xb8>
 8003d4c:	f9b3 5000 	ldrsh.w	r5, [r3]
 8003d50:	2d00      	cmp	r5, #0
 8003d52:	da03      	bge.n	8003d5c <_printf_i+0xd0>
 8003d54:	232d      	movs	r3, #45	@ 0x2d
 8003d56:	426d      	negs	r5, r5
 8003d58:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8003d5c:	4859      	ldr	r0, [pc, #356]	@ (8003ec4 <_printf_i+0x238>)
 8003d5e:	230a      	movs	r3, #10
 8003d60:	e011      	b.n	8003d86 <_printf_i+0xfa>
 8003d62:	6821      	ldr	r1, [r4, #0]
 8003d64:	6833      	ldr	r3, [r6, #0]
 8003d66:	0608      	lsls	r0, r1, #24
 8003d68:	f853 5b04 	ldr.w	r5, [r3], #4
 8003d6c:	d402      	bmi.n	8003d74 <_printf_i+0xe8>
 8003d6e:	0649      	lsls	r1, r1, #25
 8003d70:	bf48      	it	mi
 8003d72:	b2ad      	uxthmi	r5, r5
 8003d74:	2f6f      	cmp	r7, #111	@ 0x6f
 8003d76:	4853      	ldr	r0, [pc, #332]	@ (8003ec4 <_printf_i+0x238>)
 8003d78:	6033      	str	r3, [r6, #0]
 8003d7a:	bf14      	ite	ne
 8003d7c:	230a      	movne	r3, #10
 8003d7e:	2308      	moveq	r3, #8
 8003d80:	2100      	movs	r1, #0
 8003d82:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8003d86:	6866      	ldr	r6, [r4, #4]
 8003d88:	60a6      	str	r6, [r4, #8]
 8003d8a:	2e00      	cmp	r6, #0
 8003d8c:	bfa2      	ittt	ge
 8003d8e:	6821      	ldrge	r1, [r4, #0]
 8003d90:	f021 0104 	bicge.w	r1, r1, #4
 8003d94:	6021      	strge	r1, [r4, #0]
 8003d96:	b90d      	cbnz	r5, 8003d9c <_printf_i+0x110>
 8003d98:	2e00      	cmp	r6, #0
 8003d9a:	d04b      	beq.n	8003e34 <_printf_i+0x1a8>
 8003d9c:	4616      	mov	r6, r2
 8003d9e:	fbb5 f1f3 	udiv	r1, r5, r3
 8003da2:	fb03 5711 	mls	r7, r3, r1, r5
 8003da6:	5dc7      	ldrb	r7, [r0, r7]
 8003da8:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8003dac:	462f      	mov	r7, r5
 8003dae:	42bb      	cmp	r3, r7
 8003db0:	460d      	mov	r5, r1
 8003db2:	d9f4      	bls.n	8003d9e <_printf_i+0x112>
 8003db4:	2b08      	cmp	r3, #8
 8003db6:	d10b      	bne.n	8003dd0 <_printf_i+0x144>
 8003db8:	6823      	ldr	r3, [r4, #0]
 8003dba:	07df      	lsls	r7, r3, #31
 8003dbc:	d508      	bpl.n	8003dd0 <_printf_i+0x144>
 8003dbe:	6923      	ldr	r3, [r4, #16]
 8003dc0:	6861      	ldr	r1, [r4, #4]
 8003dc2:	4299      	cmp	r1, r3
 8003dc4:	bfde      	ittt	le
 8003dc6:	2330      	movle	r3, #48	@ 0x30
 8003dc8:	f806 3c01 	strble.w	r3, [r6, #-1]
 8003dcc:	f106 36ff 	addle.w	r6, r6, #4294967295	@ 0xffffffff
 8003dd0:	1b92      	subs	r2, r2, r6
 8003dd2:	6122      	str	r2, [r4, #16]
 8003dd4:	f8cd a000 	str.w	sl, [sp]
 8003dd8:	464b      	mov	r3, r9
 8003dda:	aa03      	add	r2, sp, #12
 8003ddc:	4621      	mov	r1, r4
 8003dde:	4640      	mov	r0, r8
 8003de0:	f7ff fee6 	bl	8003bb0 <_printf_common>
 8003de4:	3001      	adds	r0, #1
 8003de6:	d14a      	bne.n	8003e7e <_printf_i+0x1f2>
 8003de8:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8003dec:	b004      	add	sp, #16
 8003dee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003df2:	6823      	ldr	r3, [r4, #0]
 8003df4:	f043 0320 	orr.w	r3, r3, #32
 8003df8:	6023      	str	r3, [r4, #0]
 8003dfa:	4833      	ldr	r0, [pc, #204]	@ (8003ec8 <_printf_i+0x23c>)
 8003dfc:	2778      	movs	r7, #120	@ 0x78
 8003dfe:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8003e02:	6823      	ldr	r3, [r4, #0]
 8003e04:	6831      	ldr	r1, [r6, #0]
 8003e06:	061f      	lsls	r7, r3, #24
 8003e08:	f851 5b04 	ldr.w	r5, [r1], #4
 8003e0c:	d402      	bmi.n	8003e14 <_printf_i+0x188>
 8003e0e:	065f      	lsls	r7, r3, #25
 8003e10:	bf48      	it	mi
 8003e12:	b2ad      	uxthmi	r5, r5
 8003e14:	6031      	str	r1, [r6, #0]
 8003e16:	07d9      	lsls	r1, r3, #31
 8003e18:	bf44      	itt	mi
 8003e1a:	f043 0320 	orrmi.w	r3, r3, #32
 8003e1e:	6023      	strmi	r3, [r4, #0]
 8003e20:	b11d      	cbz	r5, 8003e2a <_printf_i+0x19e>
 8003e22:	2310      	movs	r3, #16
 8003e24:	e7ac      	b.n	8003d80 <_printf_i+0xf4>
 8003e26:	4827      	ldr	r0, [pc, #156]	@ (8003ec4 <_printf_i+0x238>)
 8003e28:	e7e9      	b.n	8003dfe <_printf_i+0x172>
 8003e2a:	6823      	ldr	r3, [r4, #0]
 8003e2c:	f023 0320 	bic.w	r3, r3, #32
 8003e30:	6023      	str	r3, [r4, #0]
 8003e32:	e7f6      	b.n	8003e22 <_printf_i+0x196>
 8003e34:	4616      	mov	r6, r2
 8003e36:	e7bd      	b.n	8003db4 <_printf_i+0x128>
 8003e38:	6833      	ldr	r3, [r6, #0]
 8003e3a:	6825      	ldr	r5, [r4, #0]
 8003e3c:	6961      	ldr	r1, [r4, #20]
 8003e3e:	1d18      	adds	r0, r3, #4
 8003e40:	6030      	str	r0, [r6, #0]
 8003e42:	062e      	lsls	r6, r5, #24
 8003e44:	681b      	ldr	r3, [r3, #0]
 8003e46:	d501      	bpl.n	8003e4c <_printf_i+0x1c0>
 8003e48:	6019      	str	r1, [r3, #0]
 8003e4a:	e002      	b.n	8003e52 <_printf_i+0x1c6>
 8003e4c:	0668      	lsls	r0, r5, #25
 8003e4e:	d5fb      	bpl.n	8003e48 <_printf_i+0x1bc>
 8003e50:	8019      	strh	r1, [r3, #0]
 8003e52:	2300      	movs	r3, #0
 8003e54:	6123      	str	r3, [r4, #16]
 8003e56:	4616      	mov	r6, r2
 8003e58:	e7bc      	b.n	8003dd4 <_printf_i+0x148>
 8003e5a:	6833      	ldr	r3, [r6, #0]
 8003e5c:	1d1a      	adds	r2, r3, #4
 8003e5e:	6032      	str	r2, [r6, #0]
 8003e60:	681e      	ldr	r6, [r3, #0]
 8003e62:	6862      	ldr	r2, [r4, #4]
 8003e64:	2100      	movs	r1, #0
 8003e66:	4630      	mov	r0, r6
 8003e68:	f7fc f9ca 	bl	8000200 <memchr>
 8003e6c:	b108      	cbz	r0, 8003e72 <_printf_i+0x1e6>
 8003e6e:	1b80      	subs	r0, r0, r6
 8003e70:	6060      	str	r0, [r4, #4]
 8003e72:	6863      	ldr	r3, [r4, #4]
 8003e74:	6123      	str	r3, [r4, #16]
 8003e76:	2300      	movs	r3, #0
 8003e78:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8003e7c:	e7aa      	b.n	8003dd4 <_printf_i+0x148>
 8003e7e:	6923      	ldr	r3, [r4, #16]
 8003e80:	4632      	mov	r2, r6
 8003e82:	4649      	mov	r1, r9
 8003e84:	4640      	mov	r0, r8
 8003e86:	47d0      	blx	sl
 8003e88:	3001      	adds	r0, #1
 8003e8a:	d0ad      	beq.n	8003de8 <_printf_i+0x15c>
 8003e8c:	6823      	ldr	r3, [r4, #0]
 8003e8e:	079b      	lsls	r3, r3, #30
 8003e90:	d413      	bmi.n	8003eba <_printf_i+0x22e>
 8003e92:	68e0      	ldr	r0, [r4, #12]
 8003e94:	9b03      	ldr	r3, [sp, #12]
 8003e96:	4298      	cmp	r0, r3
 8003e98:	bfb8      	it	lt
 8003e9a:	4618      	movlt	r0, r3
 8003e9c:	e7a6      	b.n	8003dec <_printf_i+0x160>
 8003e9e:	2301      	movs	r3, #1
 8003ea0:	4632      	mov	r2, r6
 8003ea2:	4649      	mov	r1, r9
 8003ea4:	4640      	mov	r0, r8
 8003ea6:	47d0      	blx	sl
 8003ea8:	3001      	adds	r0, #1
 8003eaa:	d09d      	beq.n	8003de8 <_printf_i+0x15c>
 8003eac:	3501      	adds	r5, #1
 8003eae:	68e3      	ldr	r3, [r4, #12]
 8003eb0:	9903      	ldr	r1, [sp, #12]
 8003eb2:	1a5b      	subs	r3, r3, r1
 8003eb4:	42ab      	cmp	r3, r5
 8003eb6:	dcf2      	bgt.n	8003e9e <_printf_i+0x212>
 8003eb8:	e7eb      	b.n	8003e92 <_printf_i+0x206>
 8003eba:	2500      	movs	r5, #0
 8003ebc:	f104 0619 	add.w	r6, r4, #25
 8003ec0:	e7f5      	b.n	8003eae <_printf_i+0x222>
 8003ec2:	bf00      	nop
 8003ec4:	08006172 	.word	0x08006172
 8003ec8:	08006183 	.word	0x08006183

08003ecc <std>:
 8003ecc:	2300      	movs	r3, #0
 8003ece:	b510      	push	{r4, lr}
 8003ed0:	4604      	mov	r4, r0
 8003ed2:	e9c0 3300 	strd	r3, r3, [r0]
 8003ed6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8003eda:	6083      	str	r3, [r0, #8]
 8003edc:	8181      	strh	r1, [r0, #12]
 8003ede:	6643      	str	r3, [r0, #100]	@ 0x64
 8003ee0:	81c2      	strh	r2, [r0, #14]
 8003ee2:	6183      	str	r3, [r0, #24]
 8003ee4:	4619      	mov	r1, r3
 8003ee6:	2208      	movs	r2, #8
 8003ee8:	305c      	adds	r0, #92	@ 0x5c
 8003eea:	f000 f8b1 	bl	8004050 <memset>
 8003eee:	4b0d      	ldr	r3, [pc, #52]	@ (8003f24 <std+0x58>)
 8003ef0:	6263      	str	r3, [r4, #36]	@ 0x24
 8003ef2:	4b0d      	ldr	r3, [pc, #52]	@ (8003f28 <std+0x5c>)
 8003ef4:	62a3      	str	r3, [r4, #40]	@ 0x28
 8003ef6:	4b0d      	ldr	r3, [pc, #52]	@ (8003f2c <std+0x60>)
 8003ef8:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8003efa:	4b0d      	ldr	r3, [pc, #52]	@ (8003f30 <std+0x64>)
 8003efc:	6323      	str	r3, [r4, #48]	@ 0x30
 8003efe:	4b0d      	ldr	r3, [pc, #52]	@ (8003f34 <std+0x68>)
 8003f00:	6224      	str	r4, [r4, #32]
 8003f02:	429c      	cmp	r4, r3
 8003f04:	d006      	beq.n	8003f14 <std+0x48>
 8003f06:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8003f0a:	4294      	cmp	r4, r2
 8003f0c:	d002      	beq.n	8003f14 <std+0x48>
 8003f0e:	33d0      	adds	r3, #208	@ 0xd0
 8003f10:	429c      	cmp	r4, r3
 8003f12:	d105      	bne.n	8003f20 <std+0x54>
 8003f14:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8003f18:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003f1c:	f000 b8ce 	b.w	80040bc <__retarget_lock_init_recursive>
 8003f20:	bd10      	pop	{r4, pc}
 8003f22:	bf00      	nop
 8003f24:	08005741 	.word	0x08005741
 8003f28:	08005763 	.word	0x08005763
 8003f2c:	0800579b 	.word	0x0800579b
 8003f30:	080057bf 	.word	0x080057bf
 8003f34:	200001f8 	.word	0x200001f8

08003f38 <stdio_exit_handler>:
 8003f38:	4a02      	ldr	r2, [pc, #8]	@ (8003f44 <stdio_exit_handler+0xc>)
 8003f3a:	4903      	ldr	r1, [pc, #12]	@ (8003f48 <stdio_exit_handler+0x10>)
 8003f3c:	4803      	ldr	r0, [pc, #12]	@ (8003f4c <stdio_exit_handler+0x14>)
 8003f3e:	f000 b869 	b.w	8004014 <_fwalk_sglue>
 8003f42:	bf00      	nop
 8003f44:	2000000c 	.word	0x2000000c
 8003f48:	08004fd5 	.word	0x08004fd5
 8003f4c:	2000001c 	.word	0x2000001c

08003f50 <cleanup_stdio>:
 8003f50:	6841      	ldr	r1, [r0, #4]
 8003f52:	4b0c      	ldr	r3, [pc, #48]	@ (8003f84 <cleanup_stdio+0x34>)
 8003f54:	4299      	cmp	r1, r3
 8003f56:	b510      	push	{r4, lr}
 8003f58:	4604      	mov	r4, r0
 8003f5a:	d001      	beq.n	8003f60 <cleanup_stdio+0x10>
 8003f5c:	f001 f83a 	bl	8004fd4 <_fflush_r>
 8003f60:	68a1      	ldr	r1, [r4, #8]
 8003f62:	4b09      	ldr	r3, [pc, #36]	@ (8003f88 <cleanup_stdio+0x38>)
 8003f64:	4299      	cmp	r1, r3
 8003f66:	d002      	beq.n	8003f6e <cleanup_stdio+0x1e>
 8003f68:	4620      	mov	r0, r4
 8003f6a:	f001 f833 	bl	8004fd4 <_fflush_r>
 8003f6e:	68e1      	ldr	r1, [r4, #12]
 8003f70:	4b06      	ldr	r3, [pc, #24]	@ (8003f8c <cleanup_stdio+0x3c>)
 8003f72:	4299      	cmp	r1, r3
 8003f74:	d004      	beq.n	8003f80 <cleanup_stdio+0x30>
 8003f76:	4620      	mov	r0, r4
 8003f78:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003f7c:	f001 b82a 	b.w	8004fd4 <_fflush_r>
 8003f80:	bd10      	pop	{r4, pc}
 8003f82:	bf00      	nop
 8003f84:	200001f8 	.word	0x200001f8
 8003f88:	20000260 	.word	0x20000260
 8003f8c:	200002c8 	.word	0x200002c8

08003f90 <global_stdio_init.part.0>:
 8003f90:	b510      	push	{r4, lr}
 8003f92:	4b0b      	ldr	r3, [pc, #44]	@ (8003fc0 <global_stdio_init.part.0+0x30>)
 8003f94:	4c0b      	ldr	r4, [pc, #44]	@ (8003fc4 <global_stdio_init.part.0+0x34>)
 8003f96:	4a0c      	ldr	r2, [pc, #48]	@ (8003fc8 <global_stdio_init.part.0+0x38>)
 8003f98:	601a      	str	r2, [r3, #0]
 8003f9a:	4620      	mov	r0, r4
 8003f9c:	2200      	movs	r2, #0
 8003f9e:	2104      	movs	r1, #4
 8003fa0:	f7ff ff94 	bl	8003ecc <std>
 8003fa4:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8003fa8:	2201      	movs	r2, #1
 8003faa:	2109      	movs	r1, #9
 8003fac:	f7ff ff8e 	bl	8003ecc <std>
 8003fb0:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8003fb4:	2202      	movs	r2, #2
 8003fb6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003fba:	2112      	movs	r1, #18
 8003fbc:	f7ff bf86 	b.w	8003ecc <std>
 8003fc0:	20000330 	.word	0x20000330
 8003fc4:	200001f8 	.word	0x200001f8
 8003fc8:	08003f39 	.word	0x08003f39

08003fcc <__sfp_lock_acquire>:
 8003fcc:	4801      	ldr	r0, [pc, #4]	@ (8003fd4 <__sfp_lock_acquire+0x8>)
 8003fce:	f000 b876 	b.w	80040be <__retarget_lock_acquire_recursive>
 8003fd2:	bf00      	nop
 8003fd4:	20000335 	.word	0x20000335

08003fd8 <__sfp_lock_release>:
 8003fd8:	4801      	ldr	r0, [pc, #4]	@ (8003fe0 <__sfp_lock_release+0x8>)
 8003fda:	f000 b871 	b.w	80040c0 <__retarget_lock_release_recursive>
 8003fde:	bf00      	nop
 8003fe0:	20000335 	.word	0x20000335

08003fe4 <__sinit>:
 8003fe4:	b510      	push	{r4, lr}
 8003fe6:	4604      	mov	r4, r0
 8003fe8:	f7ff fff0 	bl	8003fcc <__sfp_lock_acquire>
 8003fec:	6a23      	ldr	r3, [r4, #32]
 8003fee:	b11b      	cbz	r3, 8003ff8 <__sinit+0x14>
 8003ff0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003ff4:	f7ff bff0 	b.w	8003fd8 <__sfp_lock_release>
 8003ff8:	4b04      	ldr	r3, [pc, #16]	@ (800400c <__sinit+0x28>)
 8003ffa:	6223      	str	r3, [r4, #32]
 8003ffc:	4b04      	ldr	r3, [pc, #16]	@ (8004010 <__sinit+0x2c>)
 8003ffe:	681b      	ldr	r3, [r3, #0]
 8004000:	2b00      	cmp	r3, #0
 8004002:	d1f5      	bne.n	8003ff0 <__sinit+0xc>
 8004004:	f7ff ffc4 	bl	8003f90 <global_stdio_init.part.0>
 8004008:	e7f2      	b.n	8003ff0 <__sinit+0xc>
 800400a:	bf00      	nop
 800400c:	08003f51 	.word	0x08003f51
 8004010:	20000330 	.word	0x20000330

08004014 <_fwalk_sglue>:
 8004014:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004018:	4607      	mov	r7, r0
 800401a:	4688      	mov	r8, r1
 800401c:	4614      	mov	r4, r2
 800401e:	2600      	movs	r6, #0
 8004020:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8004024:	f1b9 0901 	subs.w	r9, r9, #1
 8004028:	d505      	bpl.n	8004036 <_fwalk_sglue+0x22>
 800402a:	6824      	ldr	r4, [r4, #0]
 800402c:	2c00      	cmp	r4, #0
 800402e:	d1f7      	bne.n	8004020 <_fwalk_sglue+0xc>
 8004030:	4630      	mov	r0, r6
 8004032:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004036:	89ab      	ldrh	r3, [r5, #12]
 8004038:	2b01      	cmp	r3, #1
 800403a:	d907      	bls.n	800404c <_fwalk_sglue+0x38>
 800403c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8004040:	3301      	adds	r3, #1
 8004042:	d003      	beq.n	800404c <_fwalk_sglue+0x38>
 8004044:	4629      	mov	r1, r5
 8004046:	4638      	mov	r0, r7
 8004048:	47c0      	blx	r8
 800404a:	4306      	orrs	r6, r0
 800404c:	3568      	adds	r5, #104	@ 0x68
 800404e:	e7e9      	b.n	8004024 <_fwalk_sglue+0x10>

08004050 <memset>:
 8004050:	4402      	add	r2, r0
 8004052:	4603      	mov	r3, r0
 8004054:	4293      	cmp	r3, r2
 8004056:	d100      	bne.n	800405a <memset+0xa>
 8004058:	4770      	bx	lr
 800405a:	f803 1b01 	strb.w	r1, [r3], #1
 800405e:	e7f9      	b.n	8004054 <memset+0x4>

08004060 <_localeconv_r>:
 8004060:	4800      	ldr	r0, [pc, #0]	@ (8004064 <_localeconv_r+0x4>)
 8004062:	4770      	bx	lr
 8004064:	20000158 	.word	0x20000158

08004068 <__errno>:
 8004068:	4b01      	ldr	r3, [pc, #4]	@ (8004070 <__errno+0x8>)
 800406a:	6818      	ldr	r0, [r3, #0]
 800406c:	4770      	bx	lr
 800406e:	bf00      	nop
 8004070:	20000018 	.word	0x20000018

08004074 <__libc_init_array>:
 8004074:	b570      	push	{r4, r5, r6, lr}
 8004076:	4d0d      	ldr	r5, [pc, #52]	@ (80040ac <__libc_init_array+0x38>)
 8004078:	4c0d      	ldr	r4, [pc, #52]	@ (80040b0 <__libc_init_array+0x3c>)
 800407a:	1b64      	subs	r4, r4, r5
 800407c:	10a4      	asrs	r4, r4, #2
 800407e:	2600      	movs	r6, #0
 8004080:	42a6      	cmp	r6, r4
 8004082:	d109      	bne.n	8004098 <__libc_init_array+0x24>
 8004084:	4d0b      	ldr	r5, [pc, #44]	@ (80040b4 <__libc_init_array+0x40>)
 8004086:	4c0c      	ldr	r4, [pc, #48]	@ (80040b8 <__libc_init_array+0x44>)
 8004088:	f001 ff68 	bl	8005f5c <_init>
 800408c:	1b64      	subs	r4, r4, r5
 800408e:	10a4      	asrs	r4, r4, #2
 8004090:	2600      	movs	r6, #0
 8004092:	42a6      	cmp	r6, r4
 8004094:	d105      	bne.n	80040a2 <__libc_init_array+0x2e>
 8004096:	bd70      	pop	{r4, r5, r6, pc}
 8004098:	f855 3b04 	ldr.w	r3, [r5], #4
 800409c:	4798      	blx	r3
 800409e:	3601      	adds	r6, #1
 80040a0:	e7ee      	b.n	8004080 <__libc_init_array+0xc>
 80040a2:	f855 3b04 	ldr.w	r3, [r5], #4
 80040a6:	4798      	blx	r3
 80040a8:	3601      	adds	r6, #1
 80040aa:	e7f2      	b.n	8004092 <__libc_init_array+0x1e>
 80040ac:	080064d8 	.word	0x080064d8
 80040b0:	080064d8 	.word	0x080064d8
 80040b4:	080064d8 	.word	0x080064d8
 80040b8:	080064dc 	.word	0x080064dc

080040bc <__retarget_lock_init_recursive>:
 80040bc:	4770      	bx	lr

080040be <__retarget_lock_acquire_recursive>:
 80040be:	4770      	bx	lr

080040c0 <__retarget_lock_release_recursive>:
 80040c0:	4770      	bx	lr

080040c2 <memcpy>:
 80040c2:	440a      	add	r2, r1
 80040c4:	4291      	cmp	r1, r2
 80040c6:	f100 33ff 	add.w	r3, r0, #4294967295	@ 0xffffffff
 80040ca:	d100      	bne.n	80040ce <memcpy+0xc>
 80040cc:	4770      	bx	lr
 80040ce:	b510      	push	{r4, lr}
 80040d0:	f811 4b01 	ldrb.w	r4, [r1], #1
 80040d4:	f803 4f01 	strb.w	r4, [r3, #1]!
 80040d8:	4291      	cmp	r1, r2
 80040da:	d1f9      	bne.n	80040d0 <memcpy+0xe>
 80040dc:	bd10      	pop	{r4, pc}

080040de <quorem>:
 80040de:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80040e2:	6903      	ldr	r3, [r0, #16]
 80040e4:	690c      	ldr	r4, [r1, #16]
 80040e6:	42a3      	cmp	r3, r4
 80040e8:	4607      	mov	r7, r0
 80040ea:	db7e      	blt.n	80041ea <quorem+0x10c>
 80040ec:	3c01      	subs	r4, #1
 80040ee:	f101 0814 	add.w	r8, r1, #20
 80040f2:	00a3      	lsls	r3, r4, #2
 80040f4:	f100 0514 	add.w	r5, r0, #20
 80040f8:	9300      	str	r3, [sp, #0]
 80040fa:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80040fe:	9301      	str	r3, [sp, #4]
 8004100:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8004104:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8004108:	3301      	adds	r3, #1
 800410a:	429a      	cmp	r2, r3
 800410c:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8004110:	fbb2 f6f3 	udiv	r6, r2, r3
 8004114:	d32e      	bcc.n	8004174 <quorem+0x96>
 8004116:	f04f 0a00 	mov.w	sl, #0
 800411a:	46c4      	mov	ip, r8
 800411c:	46ae      	mov	lr, r5
 800411e:	46d3      	mov	fp, sl
 8004120:	f85c 3b04 	ldr.w	r3, [ip], #4
 8004124:	b298      	uxth	r0, r3
 8004126:	fb06 a000 	mla	r0, r6, r0, sl
 800412a:	0c02      	lsrs	r2, r0, #16
 800412c:	0c1b      	lsrs	r3, r3, #16
 800412e:	fb06 2303 	mla	r3, r6, r3, r2
 8004132:	f8de 2000 	ldr.w	r2, [lr]
 8004136:	b280      	uxth	r0, r0
 8004138:	b292      	uxth	r2, r2
 800413a:	1a12      	subs	r2, r2, r0
 800413c:	445a      	add	r2, fp
 800413e:	f8de 0000 	ldr.w	r0, [lr]
 8004142:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8004146:	b29b      	uxth	r3, r3
 8004148:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 800414c:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 8004150:	b292      	uxth	r2, r2
 8004152:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 8004156:	45e1      	cmp	r9, ip
 8004158:	f84e 2b04 	str.w	r2, [lr], #4
 800415c:	ea4f 4b23 	mov.w	fp, r3, asr #16
 8004160:	d2de      	bcs.n	8004120 <quorem+0x42>
 8004162:	9b00      	ldr	r3, [sp, #0]
 8004164:	58eb      	ldr	r3, [r5, r3]
 8004166:	b92b      	cbnz	r3, 8004174 <quorem+0x96>
 8004168:	9b01      	ldr	r3, [sp, #4]
 800416a:	3b04      	subs	r3, #4
 800416c:	429d      	cmp	r5, r3
 800416e:	461a      	mov	r2, r3
 8004170:	d32f      	bcc.n	80041d2 <quorem+0xf4>
 8004172:	613c      	str	r4, [r7, #16]
 8004174:	4638      	mov	r0, r7
 8004176:	f001 f9db 	bl	8005530 <__mcmp>
 800417a:	2800      	cmp	r0, #0
 800417c:	db25      	blt.n	80041ca <quorem+0xec>
 800417e:	4629      	mov	r1, r5
 8004180:	2000      	movs	r0, #0
 8004182:	f858 2b04 	ldr.w	r2, [r8], #4
 8004186:	f8d1 c000 	ldr.w	ip, [r1]
 800418a:	fa1f fe82 	uxth.w	lr, r2
 800418e:	fa1f f38c 	uxth.w	r3, ip
 8004192:	eba3 030e 	sub.w	r3, r3, lr
 8004196:	4403      	add	r3, r0
 8004198:	0c12      	lsrs	r2, r2, #16
 800419a:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 800419e:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 80041a2:	b29b      	uxth	r3, r3
 80041a4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80041a8:	45c1      	cmp	r9, r8
 80041aa:	f841 3b04 	str.w	r3, [r1], #4
 80041ae:	ea4f 4022 	mov.w	r0, r2, asr #16
 80041b2:	d2e6      	bcs.n	8004182 <quorem+0xa4>
 80041b4:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80041b8:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80041bc:	b922      	cbnz	r2, 80041c8 <quorem+0xea>
 80041be:	3b04      	subs	r3, #4
 80041c0:	429d      	cmp	r5, r3
 80041c2:	461a      	mov	r2, r3
 80041c4:	d30b      	bcc.n	80041de <quorem+0x100>
 80041c6:	613c      	str	r4, [r7, #16]
 80041c8:	3601      	adds	r6, #1
 80041ca:	4630      	mov	r0, r6
 80041cc:	b003      	add	sp, #12
 80041ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80041d2:	6812      	ldr	r2, [r2, #0]
 80041d4:	3b04      	subs	r3, #4
 80041d6:	2a00      	cmp	r2, #0
 80041d8:	d1cb      	bne.n	8004172 <quorem+0x94>
 80041da:	3c01      	subs	r4, #1
 80041dc:	e7c6      	b.n	800416c <quorem+0x8e>
 80041de:	6812      	ldr	r2, [r2, #0]
 80041e0:	3b04      	subs	r3, #4
 80041e2:	2a00      	cmp	r2, #0
 80041e4:	d1ef      	bne.n	80041c6 <quorem+0xe8>
 80041e6:	3c01      	subs	r4, #1
 80041e8:	e7ea      	b.n	80041c0 <quorem+0xe2>
 80041ea:	2000      	movs	r0, #0
 80041ec:	e7ee      	b.n	80041cc <quorem+0xee>
	...

080041f0 <_dtoa_r>:
 80041f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80041f4:	69c7      	ldr	r7, [r0, #28]
 80041f6:	b099      	sub	sp, #100	@ 0x64
 80041f8:	ed8d 0b02 	vstr	d0, [sp, #8]
 80041fc:	ec55 4b10 	vmov	r4, r5, d0
 8004200:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 8004202:	9109      	str	r1, [sp, #36]	@ 0x24
 8004204:	4683      	mov	fp, r0
 8004206:	920e      	str	r2, [sp, #56]	@ 0x38
 8004208:	9313      	str	r3, [sp, #76]	@ 0x4c
 800420a:	b97f      	cbnz	r7, 800422c <_dtoa_r+0x3c>
 800420c:	2010      	movs	r0, #16
 800420e:	f000 fdb3 	bl	8004d78 <malloc>
 8004212:	4602      	mov	r2, r0
 8004214:	f8cb 001c 	str.w	r0, [fp, #28]
 8004218:	b920      	cbnz	r0, 8004224 <_dtoa_r+0x34>
 800421a:	4ba7      	ldr	r3, [pc, #668]	@ (80044b8 <_dtoa_r+0x2c8>)
 800421c:	21ef      	movs	r1, #239	@ 0xef
 800421e:	48a7      	ldr	r0, [pc, #668]	@ (80044bc <_dtoa_r+0x2cc>)
 8004220:	f001 fb28 	bl	8005874 <__assert_func>
 8004224:	e9c0 7701 	strd	r7, r7, [r0, #4]
 8004228:	6007      	str	r7, [r0, #0]
 800422a:	60c7      	str	r7, [r0, #12]
 800422c:	f8db 301c 	ldr.w	r3, [fp, #28]
 8004230:	6819      	ldr	r1, [r3, #0]
 8004232:	b159      	cbz	r1, 800424c <_dtoa_r+0x5c>
 8004234:	685a      	ldr	r2, [r3, #4]
 8004236:	604a      	str	r2, [r1, #4]
 8004238:	2301      	movs	r3, #1
 800423a:	4093      	lsls	r3, r2
 800423c:	608b      	str	r3, [r1, #8]
 800423e:	4658      	mov	r0, fp
 8004240:	f000 ff3c 	bl	80050bc <_Bfree>
 8004244:	f8db 301c 	ldr.w	r3, [fp, #28]
 8004248:	2200      	movs	r2, #0
 800424a:	601a      	str	r2, [r3, #0]
 800424c:	1e2b      	subs	r3, r5, #0
 800424e:	bfb9      	ittee	lt
 8004250:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 8004254:	9303      	strlt	r3, [sp, #12]
 8004256:	2300      	movge	r3, #0
 8004258:	6033      	strge	r3, [r6, #0]
 800425a:	9f03      	ldr	r7, [sp, #12]
 800425c:	4b98      	ldr	r3, [pc, #608]	@ (80044c0 <_dtoa_r+0x2d0>)
 800425e:	bfbc      	itt	lt
 8004260:	2201      	movlt	r2, #1
 8004262:	6032      	strlt	r2, [r6, #0]
 8004264:	43bb      	bics	r3, r7
 8004266:	d112      	bne.n	800428e <_dtoa_r+0x9e>
 8004268:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 800426a:	f242 730f 	movw	r3, #9999	@ 0x270f
 800426e:	6013      	str	r3, [r2, #0]
 8004270:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8004274:	4323      	orrs	r3, r4
 8004276:	f000 854d 	beq.w	8004d14 <_dtoa_r+0xb24>
 800427a:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 800427c:	f8df a254 	ldr.w	sl, [pc, #596]	@ 80044d4 <_dtoa_r+0x2e4>
 8004280:	2b00      	cmp	r3, #0
 8004282:	f000 854f 	beq.w	8004d24 <_dtoa_r+0xb34>
 8004286:	f10a 0303 	add.w	r3, sl, #3
 800428a:	f000 bd49 	b.w	8004d20 <_dtoa_r+0xb30>
 800428e:	ed9d 7b02 	vldr	d7, [sp, #8]
 8004292:	2200      	movs	r2, #0
 8004294:	ec51 0b17 	vmov	r0, r1, d7
 8004298:	2300      	movs	r3, #0
 800429a:	ed8d 7b0c 	vstr	d7, [sp, #48]	@ 0x30
 800429e:	f7fc fc2b 	bl	8000af8 <__aeabi_dcmpeq>
 80042a2:	4680      	mov	r8, r0
 80042a4:	b158      	cbz	r0, 80042be <_dtoa_r+0xce>
 80042a6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80042a8:	2301      	movs	r3, #1
 80042aa:	6013      	str	r3, [r2, #0]
 80042ac:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 80042ae:	b113      	cbz	r3, 80042b6 <_dtoa_r+0xc6>
 80042b0:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 80042b2:	4b84      	ldr	r3, [pc, #528]	@ (80044c4 <_dtoa_r+0x2d4>)
 80042b4:	6013      	str	r3, [r2, #0]
 80042b6:	f8df a220 	ldr.w	sl, [pc, #544]	@ 80044d8 <_dtoa_r+0x2e8>
 80042ba:	f000 bd33 	b.w	8004d24 <_dtoa_r+0xb34>
 80042be:	ed9d 0b0c 	vldr	d0, [sp, #48]	@ 0x30
 80042c2:	aa16      	add	r2, sp, #88	@ 0x58
 80042c4:	a917      	add	r1, sp, #92	@ 0x5c
 80042c6:	4658      	mov	r0, fp
 80042c8:	f001 f9e2 	bl	8005690 <__d2b>
 80042cc:	f3c7 560a 	ubfx	r6, r7, #20, #11
 80042d0:	4681      	mov	r9, r0
 80042d2:	2e00      	cmp	r6, #0
 80042d4:	d077      	beq.n	80043c6 <_dtoa_r+0x1d6>
 80042d6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80042d8:	f8cd 8050 	str.w	r8, [sp, #80]	@ 0x50
 80042dc:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80042e0:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80042e4:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 80042e8:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 80042ec:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 80042f0:	4619      	mov	r1, r3
 80042f2:	2200      	movs	r2, #0
 80042f4:	4b74      	ldr	r3, [pc, #464]	@ (80044c8 <_dtoa_r+0x2d8>)
 80042f6:	f7fb ffdf 	bl	80002b8 <__aeabi_dsub>
 80042fa:	a369      	add	r3, pc, #420	@ (adr r3, 80044a0 <_dtoa_r+0x2b0>)
 80042fc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004300:	f7fc f992 	bl	8000628 <__aeabi_dmul>
 8004304:	a368      	add	r3, pc, #416	@ (adr r3, 80044a8 <_dtoa_r+0x2b8>)
 8004306:	e9d3 2300 	ldrd	r2, r3, [r3]
 800430a:	f7fb ffd7 	bl	80002bc <__adddf3>
 800430e:	4604      	mov	r4, r0
 8004310:	4630      	mov	r0, r6
 8004312:	460d      	mov	r5, r1
 8004314:	f7fc f91e 	bl	8000554 <__aeabi_i2d>
 8004318:	a365      	add	r3, pc, #404	@ (adr r3, 80044b0 <_dtoa_r+0x2c0>)
 800431a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800431e:	f7fc f983 	bl	8000628 <__aeabi_dmul>
 8004322:	4602      	mov	r2, r0
 8004324:	460b      	mov	r3, r1
 8004326:	4620      	mov	r0, r4
 8004328:	4629      	mov	r1, r5
 800432a:	f7fb ffc7 	bl	80002bc <__adddf3>
 800432e:	4604      	mov	r4, r0
 8004330:	460d      	mov	r5, r1
 8004332:	f7fc fc29 	bl	8000b88 <__aeabi_d2iz>
 8004336:	2200      	movs	r2, #0
 8004338:	4607      	mov	r7, r0
 800433a:	2300      	movs	r3, #0
 800433c:	4620      	mov	r0, r4
 800433e:	4629      	mov	r1, r5
 8004340:	f7fc fbe4 	bl	8000b0c <__aeabi_dcmplt>
 8004344:	b140      	cbz	r0, 8004358 <_dtoa_r+0x168>
 8004346:	4638      	mov	r0, r7
 8004348:	f7fc f904 	bl	8000554 <__aeabi_i2d>
 800434c:	4622      	mov	r2, r4
 800434e:	462b      	mov	r3, r5
 8004350:	f7fc fbd2 	bl	8000af8 <__aeabi_dcmpeq>
 8004354:	b900      	cbnz	r0, 8004358 <_dtoa_r+0x168>
 8004356:	3f01      	subs	r7, #1
 8004358:	2f16      	cmp	r7, #22
 800435a:	d851      	bhi.n	8004400 <_dtoa_r+0x210>
 800435c:	4b5b      	ldr	r3, [pc, #364]	@ (80044cc <_dtoa_r+0x2dc>)
 800435e:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8004362:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004366:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800436a:	f7fc fbcf 	bl	8000b0c <__aeabi_dcmplt>
 800436e:	2800      	cmp	r0, #0
 8004370:	d048      	beq.n	8004404 <_dtoa_r+0x214>
 8004372:	3f01      	subs	r7, #1
 8004374:	2300      	movs	r3, #0
 8004376:	9312      	str	r3, [sp, #72]	@ 0x48
 8004378:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 800437a:	1b9b      	subs	r3, r3, r6
 800437c:	1e5a      	subs	r2, r3, #1
 800437e:	bf44      	itt	mi
 8004380:	f1c3 0801 	rsbmi	r8, r3, #1
 8004384:	2300      	movmi	r3, #0
 8004386:	9208      	str	r2, [sp, #32]
 8004388:	bf54      	ite	pl
 800438a:	f04f 0800 	movpl.w	r8, #0
 800438e:	9308      	strmi	r3, [sp, #32]
 8004390:	2f00      	cmp	r7, #0
 8004392:	db39      	blt.n	8004408 <_dtoa_r+0x218>
 8004394:	9b08      	ldr	r3, [sp, #32]
 8004396:	970f      	str	r7, [sp, #60]	@ 0x3c
 8004398:	443b      	add	r3, r7
 800439a:	9308      	str	r3, [sp, #32]
 800439c:	2300      	movs	r3, #0
 800439e:	930a      	str	r3, [sp, #40]	@ 0x28
 80043a0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80043a2:	2b09      	cmp	r3, #9
 80043a4:	d864      	bhi.n	8004470 <_dtoa_r+0x280>
 80043a6:	2b05      	cmp	r3, #5
 80043a8:	bfc4      	itt	gt
 80043aa:	3b04      	subgt	r3, #4
 80043ac:	9309      	strgt	r3, [sp, #36]	@ 0x24
 80043ae:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80043b0:	f1a3 0302 	sub.w	r3, r3, #2
 80043b4:	bfcc      	ite	gt
 80043b6:	2400      	movgt	r4, #0
 80043b8:	2401      	movle	r4, #1
 80043ba:	2b03      	cmp	r3, #3
 80043bc:	d863      	bhi.n	8004486 <_dtoa_r+0x296>
 80043be:	e8df f003 	tbb	[pc, r3]
 80043c2:	372a      	.short	0x372a
 80043c4:	5535      	.short	0x5535
 80043c6:	e9dd 6316 	ldrd	r6, r3, [sp, #88]	@ 0x58
 80043ca:	441e      	add	r6, r3
 80043cc:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 80043d0:	2b20      	cmp	r3, #32
 80043d2:	bfc1      	itttt	gt
 80043d4:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 80043d8:	409f      	lslgt	r7, r3
 80043da:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 80043de:	fa24 f303 	lsrgt.w	r3, r4, r3
 80043e2:	bfd6      	itet	le
 80043e4:	f1c3 0320 	rsble	r3, r3, #32
 80043e8:	ea47 0003 	orrgt.w	r0, r7, r3
 80043ec:	fa04 f003 	lslle.w	r0, r4, r3
 80043f0:	f7fc f8a0 	bl	8000534 <__aeabi_ui2d>
 80043f4:	2201      	movs	r2, #1
 80043f6:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 80043fa:	3e01      	subs	r6, #1
 80043fc:	9214      	str	r2, [sp, #80]	@ 0x50
 80043fe:	e777      	b.n	80042f0 <_dtoa_r+0x100>
 8004400:	2301      	movs	r3, #1
 8004402:	e7b8      	b.n	8004376 <_dtoa_r+0x186>
 8004404:	9012      	str	r0, [sp, #72]	@ 0x48
 8004406:	e7b7      	b.n	8004378 <_dtoa_r+0x188>
 8004408:	427b      	negs	r3, r7
 800440a:	930a      	str	r3, [sp, #40]	@ 0x28
 800440c:	2300      	movs	r3, #0
 800440e:	eba8 0807 	sub.w	r8, r8, r7
 8004412:	930f      	str	r3, [sp, #60]	@ 0x3c
 8004414:	e7c4      	b.n	80043a0 <_dtoa_r+0x1b0>
 8004416:	2300      	movs	r3, #0
 8004418:	930b      	str	r3, [sp, #44]	@ 0x2c
 800441a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800441c:	2b00      	cmp	r3, #0
 800441e:	dc35      	bgt.n	800448c <_dtoa_r+0x29c>
 8004420:	2301      	movs	r3, #1
 8004422:	9300      	str	r3, [sp, #0]
 8004424:	9307      	str	r3, [sp, #28]
 8004426:	461a      	mov	r2, r3
 8004428:	920e      	str	r2, [sp, #56]	@ 0x38
 800442a:	e00b      	b.n	8004444 <_dtoa_r+0x254>
 800442c:	2301      	movs	r3, #1
 800442e:	e7f3      	b.n	8004418 <_dtoa_r+0x228>
 8004430:	2300      	movs	r3, #0
 8004432:	930b      	str	r3, [sp, #44]	@ 0x2c
 8004434:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8004436:	18fb      	adds	r3, r7, r3
 8004438:	9300      	str	r3, [sp, #0]
 800443a:	3301      	adds	r3, #1
 800443c:	2b01      	cmp	r3, #1
 800443e:	9307      	str	r3, [sp, #28]
 8004440:	bfb8      	it	lt
 8004442:	2301      	movlt	r3, #1
 8004444:	f8db 001c 	ldr.w	r0, [fp, #28]
 8004448:	2100      	movs	r1, #0
 800444a:	2204      	movs	r2, #4
 800444c:	f102 0514 	add.w	r5, r2, #20
 8004450:	429d      	cmp	r5, r3
 8004452:	d91f      	bls.n	8004494 <_dtoa_r+0x2a4>
 8004454:	6041      	str	r1, [r0, #4]
 8004456:	4658      	mov	r0, fp
 8004458:	f000 fdf0 	bl	800503c <_Balloc>
 800445c:	4682      	mov	sl, r0
 800445e:	2800      	cmp	r0, #0
 8004460:	d13c      	bne.n	80044dc <_dtoa_r+0x2ec>
 8004462:	4b1b      	ldr	r3, [pc, #108]	@ (80044d0 <_dtoa_r+0x2e0>)
 8004464:	4602      	mov	r2, r0
 8004466:	f240 11af 	movw	r1, #431	@ 0x1af
 800446a:	e6d8      	b.n	800421e <_dtoa_r+0x2e>
 800446c:	2301      	movs	r3, #1
 800446e:	e7e0      	b.n	8004432 <_dtoa_r+0x242>
 8004470:	2401      	movs	r4, #1
 8004472:	2300      	movs	r3, #0
 8004474:	9309      	str	r3, [sp, #36]	@ 0x24
 8004476:	940b      	str	r4, [sp, #44]	@ 0x2c
 8004478:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 800447c:	9300      	str	r3, [sp, #0]
 800447e:	9307      	str	r3, [sp, #28]
 8004480:	2200      	movs	r2, #0
 8004482:	2312      	movs	r3, #18
 8004484:	e7d0      	b.n	8004428 <_dtoa_r+0x238>
 8004486:	2301      	movs	r3, #1
 8004488:	930b      	str	r3, [sp, #44]	@ 0x2c
 800448a:	e7f5      	b.n	8004478 <_dtoa_r+0x288>
 800448c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800448e:	9300      	str	r3, [sp, #0]
 8004490:	9307      	str	r3, [sp, #28]
 8004492:	e7d7      	b.n	8004444 <_dtoa_r+0x254>
 8004494:	3101      	adds	r1, #1
 8004496:	0052      	lsls	r2, r2, #1
 8004498:	e7d8      	b.n	800444c <_dtoa_r+0x25c>
 800449a:	bf00      	nop
 800449c:	f3af 8000 	nop.w
 80044a0:	636f4361 	.word	0x636f4361
 80044a4:	3fd287a7 	.word	0x3fd287a7
 80044a8:	8b60c8b3 	.word	0x8b60c8b3
 80044ac:	3fc68a28 	.word	0x3fc68a28
 80044b0:	509f79fb 	.word	0x509f79fb
 80044b4:	3fd34413 	.word	0x3fd34413
 80044b8:	080061a1 	.word	0x080061a1
 80044bc:	080061b8 	.word	0x080061b8
 80044c0:	7ff00000 	.word	0x7ff00000
 80044c4:	08006171 	.word	0x08006171
 80044c8:	3ff80000 	.word	0x3ff80000
 80044cc:	080062b0 	.word	0x080062b0
 80044d0:	08006210 	.word	0x08006210
 80044d4:	0800619d 	.word	0x0800619d
 80044d8:	08006170 	.word	0x08006170
 80044dc:	f8db 301c 	ldr.w	r3, [fp, #28]
 80044e0:	6018      	str	r0, [r3, #0]
 80044e2:	9b07      	ldr	r3, [sp, #28]
 80044e4:	2b0e      	cmp	r3, #14
 80044e6:	f200 80a4 	bhi.w	8004632 <_dtoa_r+0x442>
 80044ea:	2c00      	cmp	r4, #0
 80044ec:	f000 80a1 	beq.w	8004632 <_dtoa_r+0x442>
 80044f0:	2f00      	cmp	r7, #0
 80044f2:	dd33      	ble.n	800455c <_dtoa_r+0x36c>
 80044f4:	4bad      	ldr	r3, [pc, #692]	@ (80047ac <_dtoa_r+0x5bc>)
 80044f6:	f007 020f 	and.w	r2, r7, #15
 80044fa:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80044fe:	ed93 7b00 	vldr	d7, [r3]
 8004502:	05f8      	lsls	r0, r7, #23
 8004504:	ed8d 7b04 	vstr	d7, [sp, #16]
 8004508:	ea4f 1427 	mov.w	r4, r7, asr #4
 800450c:	d516      	bpl.n	800453c <_dtoa_r+0x34c>
 800450e:	4ba8      	ldr	r3, [pc, #672]	@ (80047b0 <_dtoa_r+0x5c0>)
 8004510:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8004514:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8004518:	f7fc f9b0 	bl	800087c <__aeabi_ddiv>
 800451c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8004520:	f004 040f 	and.w	r4, r4, #15
 8004524:	2603      	movs	r6, #3
 8004526:	4da2      	ldr	r5, [pc, #648]	@ (80047b0 <_dtoa_r+0x5c0>)
 8004528:	b954      	cbnz	r4, 8004540 <_dtoa_r+0x350>
 800452a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800452e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8004532:	f7fc f9a3 	bl	800087c <__aeabi_ddiv>
 8004536:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800453a:	e028      	b.n	800458e <_dtoa_r+0x39e>
 800453c:	2602      	movs	r6, #2
 800453e:	e7f2      	b.n	8004526 <_dtoa_r+0x336>
 8004540:	07e1      	lsls	r1, r4, #31
 8004542:	d508      	bpl.n	8004556 <_dtoa_r+0x366>
 8004544:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8004548:	e9d5 2300 	ldrd	r2, r3, [r5]
 800454c:	f7fc f86c 	bl	8000628 <__aeabi_dmul>
 8004550:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8004554:	3601      	adds	r6, #1
 8004556:	1064      	asrs	r4, r4, #1
 8004558:	3508      	adds	r5, #8
 800455a:	e7e5      	b.n	8004528 <_dtoa_r+0x338>
 800455c:	f000 80d2 	beq.w	8004704 <_dtoa_r+0x514>
 8004560:	427c      	negs	r4, r7
 8004562:	4b92      	ldr	r3, [pc, #584]	@ (80047ac <_dtoa_r+0x5bc>)
 8004564:	4d92      	ldr	r5, [pc, #584]	@ (80047b0 <_dtoa_r+0x5c0>)
 8004566:	f004 020f 	and.w	r2, r4, #15
 800456a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800456e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004572:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8004576:	f7fc f857 	bl	8000628 <__aeabi_dmul>
 800457a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800457e:	1124      	asrs	r4, r4, #4
 8004580:	2300      	movs	r3, #0
 8004582:	2602      	movs	r6, #2
 8004584:	2c00      	cmp	r4, #0
 8004586:	f040 80b2 	bne.w	80046ee <_dtoa_r+0x4fe>
 800458a:	2b00      	cmp	r3, #0
 800458c:	d1d3      	bne.n	8004536 <_dtoa_r+0x346>
 800458e:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8004590:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8004594:	2b00      	cmp	r3, #0
 8004596:	f000 80b7 	beq.w	8004708 <_dtoa_r+0x518>
 800459a:	4b86      	ldr	r3, [pc, #536]	@ (80047b4 <_dtoa_r+0x5c4>)
 800459c:	2200      	movs	r2, #0
 800459e:	4620      	mov	r0, r4
 80045a0:	4629      	mov	r1, r5
 80045a2:	f7fc fab3 	bl	8000b0c <__aeabi_dcmplt>
 80045a6:	2800      	cmp	r0, #0
 80045a8:	f000 80ae 	beq.w	8004708 <_dtoa_r+0x518>
 80045ac:	9b07      	ldr	r3, [sp, #28]
 80045ae:	2b00      	cmp	r3, #0
 80045b0:	f000 80aa 	beq.w	8004708 <_dtoa_r+0x518>
 80045b4:	9b00      	ldr	r3, [sp, #0]
 80045b6:	2b00      	cmp	r3, #0
 80045b8:	dd37      	ble.n	800462a <_dtoa_r+0x43a>
 80045ba:	1e7b      	subs	r3, r7, #1
 80045bc:	9304      	str	r3, [sp, #16]
 80045be:	4620      	mov	r0, r4
 80045c0:	4b7d      	ldr	r3, [pc, #500]	@ (80047b8 <_dtoa_r+0x5c8>)
 80045c2:	2200      	movs	r2, #0
 80045c4:	4629      	mov	r1, r5
 80045c6:	f7fc f82f 	bl	8000628 <__aeabi_dmul>
 80045ca:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80045ce:	9c00      	ldr	r4, [sp, #0]
 80045d0:	3601      	adds	r6, #1
 80045d2:	4630      	mov	r0, r6
 80045d4:	f7fb ffbe 	bl	8000554 <__aeabi_i2d>
 80045d8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80045dc:	f7fc f824 	bl	8000628 <__aeabi_dmul>
 80045e0:	4b76      	ldr	r3, [pc, #472]	@ (80047bc <_dtoa_r+0x5cc>)
 80045e2:	2200      	movs	r2, #0
 80045e4:	f7fb fe6a 	bl	80002bc <__adddf3>
 80045e8:	4605      	mov	r5, r0
 80045ea:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 80045ee:	2c00      	cmp	r4, #0
 80045f0:	f040 808d 	bne.w	800470e <_dtoa_r+0x51e>
 80045f4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80045f8:	4b71      	ldr	r3, [pc, #452]	@ (80047c0 <_dtoa_r+0x5d0>)
 80045fa:	2200      	movs	r2, #0
 80045fc:	f7fb fe5c 	bl	80002b8 <__aeabi_dsub>
 8004600:	4602      	mov	r2, r0
 8004602:	460b      	mov	r3, r1
 8004604:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8004608:	462a      	mov	r2, r5
 800460a:	4633      	mov	r3, r6
 800460c:	f7fc fa9c 	bl	8000b48 <__aeabi_dcmpgt>
 8004610:	2800      	cmp	r0, #0
 8004612:	f040 828b 	bne.w	8004b2c <_dtoa_r+0x93c>
 8004616:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800461a:	462a      	mov	r2, r5
 800461c:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 8004620:	f7fc fa74 	bl	8000b0c <__aeabi_dcmplt>
 8004624:	2800      	cmp	r0, #0
 8004626:	f040 8128 	bne.w	800487a <_dtoa_r+0x68a>
 800462a:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 800462e:	e9cd 3402 	strd	r3, r4, [sp, #8]
 8004632:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8004634:	2b00      	cmp	r3, #0
 8004636:	f2c0 815a 	blt.w	80048ee <_dtoa_r+0x6fe>
 800463a:	2f0e      	cmp	r7, #14
 800463c:	f300 8157 	bgt.w	80048ee <_dtoa_r+0x6fe>
 8004640:	4b5a      	ldr	r3, [pc, #360]	@ (80047ac <_dtoa_r+0x5bc>)
 8004642:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8004646:	ed93 7b00 	vldr	d7, [r3]
 800464a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800464c:	2b00      	cmp	r3, #0
 800464e:	ed8d 7b00 	vstr	d7, [sp]
 8004652:	da03      	bge.n	800465c <_dtoa_r+0x46c>
 8004654:	9b07      	ldr	r3, [sp, #28]
 8004656:	2b00      	cmp	r3, #0
 8004658:	f340 8101 	ble.w	800485e <_dtoa_r+0x66e>
 800465c:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8004660:	4656      	mov	r6, sl
 8004662:	e9dd 2300 	ldrd	r2, r3, [sp]
 8004666:	4620      	mov	r0, r4
 8004668:	4629      	mov	r1, r5
 800466a:	f7fc f907 	bl	800087c <__aeabi_ddiv>
 800466e:	f7fc fa8b 	bl	8000b88 <__aeabi_d2iz>
 8004672:	4680      	mov	r8, r0
 8004674:	f7fb ff6e 	bl	8000554 <__aeabi_i2d>
 8004678:	e9dd 2300 	ldrd	r2, r3, [sp]
 800467c:	f7fb ffd4 	bl	8000628 <__aeabi_dmul>
 8004680:	4602      	mov	r2, r0
 8004682:	460b      	mov	r3, r1
 8004684:	4620      	mov	r0, r4
 8004686:	4629      	mov	r1, r5
 8004688:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 800468c:	f7fb fe14 	bl	80002b8 <__aeabi_dsub>
 8004690:	f806 4b01 	strb.w	r4, [r6], #1
 8004694:	9d07      	ldr	r5, [sp, #28]
 8004696:	eba6 040a 	sub.w	r4, r6, sl
 800469a:	42a5      	cmp	r5, r4
 800469c:	4602      	mov	r2, r0
 800469e:	460b      	mov	r3, r1
 80046a0:	f040 8117 	bne.w	80048d2 <_dtoa_r+0x6e2>
 80046a4:	f7fb fe0a 	bl	80002bc <__adddf3>
 80046a8:	e9dd 2300 	ldrd	r2, r3, [sp]
 80046ac:	4604      	mov	r4, r0
 80046ae:	460d      	mov	r5, r1
 80046b0:	f7fc fa4a 	bl	8000b48 <__aeabi_dcmpgt>
 80046b4:	2800      	cmp	r0, #0
 80046b6:	f040 80f9 	bne.w	80048ac <_dtoa_r+0x6bc>
 80046ba:	e9dd 2300 	ldrd	r2, r3, [sp]
 80046be:	4620      	mov	r0, r4
 80046c0:	4629      	mov	r1, r5
 80046c2:	f7fc fa19 	bl	8000af8 <__aeabi_dcmpeq>
 80046c6:	b118      	cbz	r0, 80046d0 <_dtoa_r+0x4e0>
 80046c8:	f018 0f01 	tst.w	r8, #1
 80046cc:	f040 80ee 	bne.w	80048ac <_dtoa_r+0x6bc>
 80046d0:	4649      	mov	r1, r9
 80046d2:	4658      	mov	r0, fp
 80046d4:	f000 fcf2 	bl	80050bc <_Bfree>
 80046d8:	2300      	movs	r3, #0
 80046da:	7033      	strb	r3, [r6, #0]
 80046dc:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80046de:	3701      	adds	r7, #1
 80046e0:	601f      	str	r7, [r3, #0]
 80046e2:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 80046e4:	2b00      	cmp	r3, #0
 80046e6:	f000 831d 	beq.w	8004d24 <_dtoa_r+0xb34>
 80046ea:	601e      	str	r6, [r3, #0]
 80046ec:	e31a      	b.n	8004d24 <_dtoa_r+0xb34>
 80046ee:	07e2      	lsls	r2, r4, #31
 80046f0:	d505      	bpl.n	80046fe <_dtoa_r+0x50e>
 80046f2:	e9d5 2300 	ldrd	r2, r3, [r5]
 80046f6:	f7fb ff97 	bl	8000628 <__aeabi_dmul>
 80046fa:	3601      	adds	r6, #1
 80046fc:	2301      	movs	r3, #1
 80046fe:	1064      	asrs	r4, r4, #1
 8004700:	3508      	adds	r5, #8
 8004702:	e73f      	b.n	8004584 <_dtoa_r+0x394>
 8004704:	2602      	movs	r6, #2
 8004706:	e742      	b.n	800458e <_dtoa_r+0x39e>
 8004708:	9c07      	ldr	r4, [sp, #28]
 800470a:	9704      	str	r7, [sp, #16]
 800470c:	e761      	b.n	80045d2 <_dtoa_r+0x3e2>
 800470e:	4b27      	ldr	r3, [pc, #156]	@ (80047ac <_dtoa_r+0x5bc>)
 8004710:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8004712:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8004716:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 800471a:	4454      	add	r4, sl
 800471c:	2900      	cmp	r1, #0
 800471e:	d053      	beq.n	80047c8 <_dtoa_r+0x5d8>
 8004720:	4928      	ldr	r1, [pc, #160]	@ (80047c4 <_dtoa_r+0x5d4>)
 8004722:	2000      	movs	r0, #0
 8004724:	f7fc f8aa 	bl	800087c <__aeabi_ddiv>
 8004728:	4633      	mov	r3, r6
 800472a:	462a      	mov	r2, r5
 800472c:	f7fb fdc4 	bl	80002b8 <__aeabi_dsub>
 8004730:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8004734:	4656      	mov	r6, sl
 8004736:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800473a:	f7fc fa25 	bl	8000b88 <__aeabi_d2iz>
 800473e:	4605      	mov	r5, r0
 8004740:	f7fb ff08 	bl	8000554 <__aeabi_i2d>
 8004744:	4602      	mov	r2, r0
 8004746:	460b      	mov	r3, r1
 8004748:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800474c:	f7fb fdb4 	bl	80002b8 <__aeabi_dsub>
 8004750:	3530      	adds	r5, #48	@ 0x30
 8004752:	4602      	mov	r2, r0
 8004754:	460b      	mov	r3, r1
 8004756:	e9cd 2302 	strd	r2, r3, [sp, #8]
 800475a:	f806 5b01 	strb.w	r5, [r6], #1
 800475e:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8004762:	f7fc f9d3 	bl	8000b0c <__aeabi_dcmplt>
 8004766:	2800      	cmp	r0, #0
 8004768:	d171      	bne.n	800484e <_dtoa_r+0x65e>
 800476a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800476e:	4911      	ldr	r1, [pc, #68]	@ (80047b4 <_dtoa_r+0x5c4>)
 8004770:	2000      	movs	r0, #0
 8004772:	f7fb fda1 	bl	80002b8 <__aeabi_dsub>
 8004776:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 800477a:	f7fc f9c7 	bl	8000b0c <__aeabi_dcmplt>
 800477e:	2800      	cmp	r0, #0
 8004780:	f040 8095 	bne.w	80048ae <_dtoa_r+0x6be>
 8004784:	42a6      	cmp	r6, r4
 8004786:	f43f af50 	beq.w	800462a <_dtoa_r+0x43a>
 800478a:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 800478e:	4b0a      	ldr	r3, [pc, #40]	@ (80047b8 <_dtoa_r+0x5c8>)
 8004790:	2200      	movs	r2, #0
 8004792:	f7fb ff49 	bl	8000628 <__aeabi_dmul>
 8004796:	4b08      	ldr	r3, [pc, #32]	@ (80047b8 <_dtoa_r+0x5c8>)
 8004798:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 800479c:	2200      	movs	r2, #0
 800479e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80047a2:	f7fb ff41 	bl	8000628 <__aeabi_dmul>
 80047a6:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80047aa:	e7c4      	b.n	8004736 <_dtoa_r+0x546>
 80047ac:	080062b0 	.word	0x080062b0
 80047b0:	08006288 	.word	0x08006288
 80047b4:	3ff00000 	.word	0x3ff00000
 80047b8:	40240000 	.word	0x40240000
 80047bc:	401c0000 	.word	0x401c0000
 80047c0:	40140000 	.word	0x40140000
 80047c4:	3fe00000 	.word	0x3fe00000
 80047c8:	4631      	mov	r1, r6
 80047ca:	4628      	mov	r0, r5
 80047cc:	f7fb ff2c 	bl	8000628 <__aeabi_dmul>
 80047d0:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 80047d4:	9415      	str	r4, [sp, #84]	@ 0x54
 80047d6:	4656      	mov	r6, sl
 80047d8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80047dc:	f7fc f9d4 	bl	8000b88 <__aeabi_d2iz>
 80047e0:	4605      	mov	r5, r0
 80047e2:	f7fb feb7 	bl	8000554 <__aeabi_i2d>
 80047e6:	4602      	mov	r2, r0
 80047e8:	460b      	mov	r3, r1
 80047ea:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80047ee:	f7fb fd63 	bl	80002b8 <__aeabi_dsub>
 80047f2:	3530      	adds	r5, #48	@ 0x30
 80047f4:	f806 5b01 	strb.w	r5, [r6], #1
 80047f8:	4602      	mov	r2, r0
 80047fa:	460b      	mov	r3, r1
 80047fc:	42a6      	cmp	r6, r4
 80047fe:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8004802:	f04f 0200 	mov.w	r2, #0
 8004806:	d124      	bne.n	8004852 <_dtoa_r+0x662>
 8004808:	4bac      	ldr	r3, [pc, #688]	@ (8004abc <_dtoa_r+0x8cc>)
 800480a:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 800480e:	f7fb fd55 	bl	80002bc <__adddf3>
 8004812:	4602      	mov	r2, r0
 8004814:	460b      	mov	r3, r1
 8004816:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800481a:	f7fc f995 	bl	8000b48 <__aeabi_dcmpgt>
 800481e:	2800      	cmp	r0, #0
 8004820:	d145      	bne.n	80048ae <_dtoa_r+0x6be>
 8004822:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8004826:	49a5      	ldr	r1, [pc, #660]	@ (8004abc <_dtoa_r+0x8cc>)
 8004828:	2000      	movs	r0, #0
 800482a:	f7fb fd45 	bl	80002b8 <__aeabi_dsub>
 800482e:	4602      	mov	r2, r0
 8004830:	460b      	mov	r3, r1
 8004832:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8004836:	f7fc f969 	bl	8000b0c <__aeabi_dcmplt>
 800483a:	2800      	cmp	r0, #0
 800483c:	f43f aef5 	beq.w	800462a <_dtoa_r+0x43a>
 8004840:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 8004842:	1e73      	subs	r3, r6, #1
 8004844:	9315      	str	r3, [sp, #84]	@ 0x54
 8004846:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 800484a:	2b30      	cmp	r3, #48	@ 0x30
 800484c:	d0f8      	beq.n	8004840 <_dtoa_r+0x650>
 800484e:	9f04      	ldr	r7, [sp, #16]
 8004850:	e73e      	b.n	80046d0 <_dtoa_r+0x4e0>
 8004852:	4b9b      	ldr	r3, [pc, #620]	@ (8004ac0 <_dtoa_r+0x8d0>)
 8004854:	f7fb fee8 	bl	8000628 <__aeabi_dmul>
 8004858:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800485c:	e7bc      	b.n	80047d8 <_dtoa_r+0x5e8>
 800485e:	d10c      	bne.n	800487a <_dtoa_r+0x68a>
 8004860:	4b98      	ldr	r3, [pc, #608]	@ (8004ac4 <_dtoa_r+0x8d4>)
 8004862:	2200      	movs	r2, #0
 8004864:	e9dd 0100 	ldrd	r0, r1, [sp]
 8004868:	f7fb fede 	bl	8000628 <__aeabi_dmul>
 800486c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8004870:	f7fc f960 	bl	8000b34 <__aeabi_dcmpge>
 8004874:	2800      	cmp	r0, #0
 8004876:	f000 8157 	beq.w	8004b28 <_dtoa_r+0x938>
 800487a:	2400      	movs	r4, #0
 800487c:	4625      	mov	r5, r4
 800487e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8004880:	43db      	mvns	r3, r3
 8004882:	9304      	str	r3, [sp, #16]
 8004884:	4656      	mov	r6, sl
 8004886:	2700      	movs	r7, #0
 8004888:	4621      	mov	r1, r4
 800488a:	4658      	mov	r0, fp
 800488c:	f000 fc16 	bl	80050bc <_Bfree>
 8004890:	2d00      	cmp	r5, #0
 8004892:	d0dc      	beq.n	800484e <_dtoa_r+0x65e>
 8004894:	b12f      	cbz	r7, 80048a2 <_dtoa_r+0x6b2>
 8004896:	42af      	cmp	r7, r5
 8004898:	d003      	beq.n	80048a2 <_dtoa_r+0x6b2>
 800489a:	4639      	mov	r1, r7
 800489c:	4658      	mov	r0, fp
 800489e:	f000 fc0d 	bl	80050bc <_Bfree>
 80048a2:	4629      	mov	r1, r5
 80048a4:	4658      	mov	r0, fp
 80048a6:	f000 fc09 	bl	80050bc <_Bfree>
 80048aa:	e7d0      	b.n	800484e <_dtoa_r+0x65e>
 80048ac:	9704      	str	r7, [sp, #16]
 80048ae:	4633      	mov	r3, r6
 80048b0:	461e      	mov	r6, r3
 80048b2:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80048b6:	2a39      	cmp	r2, #57	@ 0x39
 80048b8:	d107      	bne.n	80048ca <_dtoa_r+0x6da>
 80048ba:	459a      	cmp	sl, r3
 80048bc:	d1f8      	bne.n	80048b0 <_dtoa_r+0x6c0>
 80048be:	9a04      	ldr	r2, [sp, #16]
 80048c0:	3201      	adds	r2, #1
 80048c2:	9204      	str	r2, [sp, #16]
 80048c4:	2230      	movs	r2, #48	@ 0x30
 80048c6:	f88a 2000 	strb.w	r2, [sl]
 80048ca:	781a      	ldrb	r2, [r3, #0]
 80048cc:	3201      	adds	r2, #1
 80048ce:	701a      	strb	r2, [r3, #0]
 80048d0:	e7bd      	b.n	800484e <_dtoa_r+0x65e>
 80048d2:	4b7b      	ldr	r3, [pc, #492]	@ (8004ac0 <_dtoa_r+0x8d0>)
 80048d4:	2200      	movs	r2, #0
 80048d6:	f7fb fea7 	bl	8000628 <__aeabi_dmul>
 80048da:	2200      	movs	r2, #0
 80048dc:	2300      	movs	r3, #0
 80048de:	4604      	mov	r4, r0
 80048e0:	460d      	mov	r5, r1
 80048e2:	f7fc f909 	bl	8000af8 <__aeabi_dcmpeq>
 80048e6:	2800      	cmp	r0, #0
 80048e8:	f43f aebb 	beq.w	8004662 <_dtoa_r+0x472>
 80048ec:	e6f0      	b.n	80046d0 <_dtoa_r+0x4e0>
 80048ee:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80048f0:	2a00      	cmp	r2, #0
 80048f2:	f000 80db 	beq.w	8004aac <_dtoa_r+0x8bc>
 80048f6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80048f8:	2a01      	cmp	r2, #1
 80048fa:	f300 80bf 	bgt.w	8004a7c <_dtoa_r+0x88c>
 80048fe:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8004900:	2a00      	cmp	r2, #0
 8004902:	f000 80b7 	beq.w	8004a74 <_dtoa_r+0x884>
 8004906:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 800490a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 800490c:	4646      	mov	r6, r8
 800490e:	9a08      	ldr	r2, [sp, #32]
 8004910:	2101      	movs	r1, #1
 8004912:	441a      	add	r2, r3
 8004914:	4658      	mov	r0, fp
 8004916:	4498      	add	r8, r3
 8004918:	9208      	str	r2, [sp, #32]
 800491a:	f000 fc83 	bl	8005224 <__i2b>
 800491e:	4605      	mov	r5, r0
 8004920:	b15e      	cbz	r6, 800493a <_dtoa_r+0x74a>
 8004922:	9b08      	ldr	r3, [sp, #32]
 8004924:	2b00      	cmp	r3, #0
 8004926:	dd08      	ble.n	800493a <_dtoa_r+0x74a>
 8004928:	42b3      	cmp	r3, r6
 800492a:	9a08      	ldr	r2, [sp, #32]
 800492c:	bfa8      	it	ge
 800492e:	4633      	movge	r3, r6
 8004930:	eba8 0803 	sub.w	r8, r8, r3
 8004934:	1af6      	subs	r6, r6, r3
 8004936:	1ad3      	subs	r3, r2, r3
 8004938:	9308      	str	r3, [sp, #32]
 800493a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800493c:	b1f3      	cbz	r3, 800497c <_dtoa_r+0x78c>
 800493e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8004940:	2b00      	cmp	r3, #0
 8004942:	f000 80b7 	beq.w	8004ab4 <_dtoa_r+0x8c4>
 8004946:	b18c      	cbz	r4, 800496c <_dtoa_r+0x77c>
 8004948:	4629      	mov	r1, r5
 800494a:	4622      	mov	r2, r4
 800494c:	4658      	mov	r0, fp
 800494e:	f000 fd29 	bl	80053a4 <__pow5mult>
 8004952:	464a      	mov	r2, r9
 8004954:	4601      	mov	r1, r0
 8004956:	4605      	mov	r5, r0
 8004958:	4658      	mov	r0, fp
 800495a:	f000 fc79 	bl	8005250 <__multiply>
 800495e:	4649      	mov	r1, r9
 8004960:	9004      	str	r0, [sp, #16]
 8004962:	4658      	mov	r0, fp
 8004964:	f000 fbaa 	bl	80050bc <_Bfree>
 8004968:	9b04      	ldr	r3, [sp, #16]
 800496a:	4699      	mov	r9, r3
 800496c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800496e:	1b1a      	subs	r2, r3, r4
 8004970:	d004      	beq.n	800497c <_dtoa_r+0x78c>
 8004972:	4649      	mov	r1, r9
 8004974:	4658      	mov	r0, fp
 8004976:	f000 fd15 	bl	80053a4 <__pow5mult>
 800497a:	4681      	mov	r9, r0
 800497c:	2101      	movs	r1, #1
 800497e:	4658      	mov	r0, fp
 8004980:	f000 fc50 	bl	8005224 <__i2b>
 8004984:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8004986:	4604      	mov	r4, r0
 8004988:	2b00      	cmp	r3, #0
 800498a:	f000 81cf 	beq.w	8004d2c <_dtoa_r+0xb3c>
 800498e:	461a      	mov	r2, r3
 8004990:	4601      	mov	r1, r0
 8004992:	4658      	mov	r0, fp
 8004994:	f000 fd06 	bl	80053a4 <__pow5mult>
 8004998:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800499a:	2b01      	cmp	r3, #1
 800499c:	4604      	mov	r4, r0
 800499e:	f300 8095 	bgt.w	8004acc <_dtoa_r+0x8dc>
 80049a2:	9b02      	ldr	r3, [sp, #8]
 80049a4:	2b00      	cmp	r3, #0
 80049a6:	f040 8087 	bne.w	8004ab8 <_dtoa_r+0x8c8>
 80049aa:	9b03      	ldr	r3, [sp, #12]
 80049ac:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80049b0:	2b00      	cmp	r3, #0
 80049b2:	f040 8089 	bne.w	8004ac8 <_dtoa_r+0x8d8>
 80049b6:	9b03      	ldr	r3, [sp, #12]
 80049b8:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80049bc:	0d1b      	lsrs	r3, r3, #20
 80049be:	051b      	lsls	r3, r3, #20
 80049c0:	b12b      	cbz	r3, 80049ce <_dtoa_r+0x7de>
 80049c2:	9b08      	ldr	r3, [sp, #32]
 80049c4:	3301      	adds	r3, #1
 80049c6:	9308      	str	r3, [sp, #32]
 80049c8:	f108 0801 	add.w	r8, r8, #1
 80049cc:	2301      	movs	r3, #1
 80049ce:	930a      	str	r3, [sp, #40]	@ 0x28
 80049d0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80049d2:	2b00      	cmp	r3, #0
 80049d4:	f000 81b0 	beq.w	8004d38 <_dtoa_r+0xb48>
 80049d8:	6923      	ldr	r3, [r4, #16]
 80049da:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 80049de:	6918      	ldr	r0, [r3, #16]
 80049e0:	f000 fbd4 	bl	800518c <__hi0bits>
 80049e4:	f1c0 0020 	rsb	r0, r0, #32
 80049e8:	9b08      	ldr	r3, [sp, #32]
 80049ea:	4418      	add	r0, r3
 80049ec:	f010 001f 	ands.w	r0, r0, #31
 80049f0:	d077      	beq.n	8004ae2 <_dtoa_r+0x8f2>
 80049f2:	f1c0 0320 	rsb	r3, r0, #32
 80049f6:	2b04      	cmp	r3, #4
 80049f8:	dd6b      	ble.n	8004ad2 <_dtoa_r+0x8e2>
 80049fa:	9b08      	ldr	r3, [sp, #32]
 80049fc:	f1c0 001c 	rsb	r0, r0, #28
 8004a00:	4403      	add	r3, r0
 8004a02:	4480      	add	r8, r0
 8004a04:	4406      	add	r6, r0
 8004a06:	9308      	str	r3, [sp, #32]
 8004a08:	f1b8 0f00 	cmp.w	r8, #0
 8004a0c:	dd05      	ble.n	8004a1a <_dtoa_r+0x82a>
 8004a0e:	4649      	mov	r1, r9
 8004a10:	4642      	mov	r2, r8
 8004a12:	4658      	mov	r0, fp
 8004a14:	f000 fd20 	bl	8005458 <__lshift>
 8004a18:	4681      	mov	r9, r0
 8004a1a:	9b08      	ldr	r3, [sp, #32]
 8004a1c:	2b00      	cmp	r3, #0
 8004a1e:	dd05      	ble.n	8004a2c <_dtoa_r+0x83c>
 8004a20:	4621      	mov	r1, r4
 8004a22:	461a      	mov	r2, r3
 8004a24:	4658      	mov	r0, fp
 8004a26:	f000 fd17 	bl	8005458 <__lshift>
 8004a2a:	4604      	mov	r4, r0
 8004a2c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8004a2e:	2b00      	cmp	r3, #0
 8004a30:	d059      	beq.n	8004ae6 <_dtoa_r+0x8f6>
 8004a32:	4621      	mov	r1, r4
 8004a34:	4648      	mov	r0, r9
 8004a36:	f000 fd7b 	bl	8005530 <__mcmp>
 8004a3a:	2800      	cmp	r0, #0
 8004a3c:	da53      	bge.n	8004ae6 <_dtoa_r+0x8f6>
 8004a3e:	1e7b      	subs	r3, r7, #1
 8004a40:	9304      	str	r3, [sp, #16]
 8004a42:	4649      	mov	r1, r9
 8004a44:	2300      	movs	r3, #0
 8004a46:	220a      	movs	r2, #10
 8004a48:	4658      	mov	r0, fp
 8004a4a:	f000 fb59 	bl	8005100 <__multadd>
 8004a4e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8004a50:	4681      	mov	r9, r0
 8004a52:	2b00      	cmp	r3, #0
 8004a54:	f000 8172 	beq.w	8004d3c <_dtoa_r+0xb4c>
 8004a58:	2300      	movs	r3, #0
 8004a5a:	4629      	mov	r1, r5
 8004a5c:	220a      	movs	r2, #10
 8004a5e:	4658      	mov	r0, fp
 8004a60:	f000 fb4e 	bl	8005100 <__multadd>
 8004a64:	9b00      	ldr	r3, [sp, #0]
 8004a66:	2b00      	cmp	r3, #0
 8004a68:	4605      	mov	r5, r0
 8004a6a:	dc67      	bgt.n	8004b3c <_dtoa_r+0x94c>
 8004a6c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004a6e:	2b02      	cmp	r3, #2
 8004a70:	dc41      	bgt.n	8004af6 <_dtoa_r+0x906>
 8004a72:	e063      	b.n	8004b3c <_dtoa_r+0x94c>
 8004a74:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8004a76:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 8004a7a:	e746      	b.n	800490a <_dtoa_r+0x71a>
 8004a7c:	9b07      	ldr	r3, [sp, #28]
 8004a7e:	1e5c      	subs	r4, r3, #1
 8004a80:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8004a82:	42a3      	cmp	r3, r4
 8004a84:	bfbf      	itttt	lt
 8004a86:	9b0a      	ldrlt	r3, [sp, #40]	@ 0x28
 8004a88:	9a0f      	ldrlt	r2, [sp, #60]	@ 0x3c
 8004a8a:	940a      	strlt	r4, [sp, #40]	@ 0x28
 8004a8c:	1ae3      	sublt	r3, r4, r3
 8004a8e:	bfb4      	ite	lt
 8004a90:	18d2      	addlt	r2, r2, r3
 8004a92:	1b1c      	subge	r4, r3, r4
 8004a94:	9b07      	ldr	r3, [sp, #28]
 8004a96:	bfbc      	itt	lt
 8004a98:	920f      	strlt	r2, [sp, #60]	@ 0x3c
 8004a9a:	2400      	movlt	r4, #0
 8004a9c:	2b00      	cmp	r3, #0
 8004a9e:	bfb5      	itete	lt
 8004aa0:	eba8 0603 	sublt.w	r6, r8, r3
 8004aa4:	9b07      	ldrge	r3, [sp, #28]
 8004aa6:	2300      	movlt	r3, #0
 8004aa8:	4646      	movge	r6, r8
 8004aaa:	e730      	b.n	800490e <_dtoa_r+0x71e>
 8004aac:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8004aae:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8004ab0:	4646      	mov	r6, r8
 8004ab2:	e735      	b.n	8004920 <_dtoa_r+0x730>
 8004ab4:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8004ab6:	e75c      	b.n	8004972 <_dtoa_r+0x782>
 8004ab8:	2300      	movs	r3, #0
 8004aba:	e788      	b.n	80049ce <_dtoa_r+0x7de>
 8004abc:	3fe00000 	.word	0x3fe00000
 8004ac0:	40240000 	.word	0x40240000
 8004ac4:	40140000 	.word	0x40140000
 8004ac8:	9b02      	ldr	r3, [sp, #8]
 8004aca:	e780      	b.n	80049ce <_dtoa_r+0x7de>
 8004acc:	2300      	movs	r3, #0
 8004ace:	930a      	str	r3, [sp, #40]	@ 0x28
 8004ad0:	e782      	b.n	80049d8 <_dtoa_r+0x7e8>
 8004ad2:	d099      	beq.n	8004a08 <_dtoa_r+0x818>
 8004ad4:	9a08      	ldr	r2, [sp, #32]
 8004ad6:	331c      	adds	r3, #28
 8004ad8:	441a      	add	r2, r3
 8004ada:	4498      	add	r8, r3
 8004adc:	441e      	add	r6, r3
 8004ade:	9208      	str	r2, [sp, #32]
 8004ae0:	e792      	b.n	8004a08 <_dtoa_r+0x818>
 8004ae2:	4603      	mov	r3, r0
 8004ae4:	e7f6      	b.n	8004ad4 <_dtoa_r+0x8e4>
 8004ae6:	9b07      	ldr	r3, [sp, #28]
 8004ae8:	9704      	str	r7, [sp, #16]
 8004aea:	2b00      	cmp	r3, #0
 8004aec:	dc20      	bgt.n	8004b30 <_dtoa_r+0x940>
 8004aee:	9300      	str	r3, [sp, #0]
 8004af0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004af2:	2b02      	cmp	r3, #2
 8004af4:	dd1e      	ble.n	8004b34 <_dtoa_r+0x944>
 8004af6:	9b00      	ldr	r3, [sp, #0]
 8004af8:	2b00      	cmp	r3, #0
 8004afa:	f47f aec0 	bne.w	800487e <_dtoa_r+0x68e>
 8004afe:	4621      	mov	r1, r4
 8004b00:	2205      	movs	r2, #5
 8004b02:	4658      	mov	r0, fp
 8004b04:	f000 fafc 	bl	8005100 <__multadd>
 8004b08:	4601      	mov	r1, r0
 8004b0a:	4604      	mov	r4, r0
 8004b0c:	4648      	mov	r0, r9
 8004b0e:	f000 fd0f 	bl	8005530 <__mcmp>
 8004b12:	2800      	cmp	r0, #0
 8004b14:	f77f aeb3 	ble.w	800487e <_dtoa_r+0x68e>
 8004b18:	4656      	mov	r6, sl
 8004b1a:	2331      	movs	r3, #49	@ 0x31
 8004b1c:	f806 3b01 	strb.w	r3, [r6], #1
 8004b20:	9b04      	ldr	r3, [sp, #16]
 8004b22:	3301      	adds	r3, #1
 8004b24:	9304      	str	r3, [sp, #16]
 8004b26:	e6ae      	b.n	8004886 <_dtoa_r+0x696>
 8004b28:	9c07      	ldr	r4, [sp, #28]
 8004b2a:	9704      	str	r7, [sp, #16]
 8004b2c:	4625      	mov	r5, r4
 8004b2e:	e7f3      	b.n	8004b18 <_dtoa_r+0x928>
 8004b30:	9b07      	ldr	r3, [sp, #28]
 8004b32:	9300      	str	r3, [sp, #0]
 8004b34:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8004b36:	2b00      	cmp	r3, #0
 8004b38:	f000 8104 	beq.w	8004d44 <_dtoa_r+0xb54>
 8004b3c:	2e00      	cmp	r6, #0
 8004b3e:	dd05      	ble.n	8004b4c <_dtoa_r+0x95c>
 8004b40:	4629      	mov	r1, r5
 8004b42:	4632      	mov	r2, r6
 8004b44:	4658      	mov	r0, fp
 8004b46:	f000 fc87 	bl	8005458 <__lshift>
 8004b4a:	4605      	mov	r5, r0
 8004b4c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8004b4e:	2b00      	cmp	r3, #0
 8004b50:	d05a      	beq.n	8004c08 <_dtoa_r+0xa18>
 8004b52:	6869      	ldr	r1, [r5, #4]
 8004b54:	4658      	mov	r0, fp
 8004b56:	f000 fa71 	bl	800503c <_Balloc>
 8004b5a:	4606      	mov	r6, r0
 8004b5c:	b928      	cbnz	r0, 8004b6a <_dtoa_r+0x97a>
 8004b5e:	4b84      	ldr	r3, [pc, #528]	@ (8004d70 <_dtoa_r+0xb80>)
 8004b60:	4602      	mov	r2, r0
 8004b62:	f240 21ef 	movw	r1, #751	@ 0x2ef
 8004b66:	f7ff bb5a 	b.w	800421e <_dtoa_r+0x2e>
 8004b6a:	692a      	ldr	r2, [r5, #16]
 8004b6c:	3202      	adds	r2, #2
 8004b6e:	0092      	lsls	r2, r2, #2
 8004b70:	f105 010c 	add.w	r1, r5, #12
 8004b74:	300c      	adds	r0, #12
 8004b76:	f7ff faa4 	bl	80040c2 <memcpy>
 8004b7a:	2201      	movs	r2, #1
 8004b7c:	4631      	mov	r1, r6
 8004b7e:	4658      	mov	r0, fp
 8004b80:	f000 fc6a 	bl	8005458 <__lshift>
 8004b84:	f10a 0301 	add.w	r3, sl, #1
 8004b88:	9307      	str	r3, [sp, #28]
 8004b8a:	9b00      	ldr	r3, [sp, #0]
 8004b8c:	4453      	add	r3, sl
 8004b8e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8004b90:	9b02      	ldr	r3, [sp, #8]
 8004b92:	f003 0301 	and.w	r3, r3, #1
 8004b96:	462f      	mov	r7, r5
 8004b98:	930a      	str	r3, [sp, #40]	@ 0x28
 8004b9a:	4605      	mov	r5, r0
 8004b9c:	9b07      	ldr	r3, [sp, #28]
 8004b9e:	4621      	mov	r1, r4
 8004ba0:	3b01      	subs	r3, #1
 8004ba2:	4648      	mov	r0, r9
 8004ba4:	9300      	str	r3, [sp, #0]
 8004ba6:	f7ff fa9a 	bl	80040de <quorem>
 8004baa:	4639      	mov	r1, r7
 8004bac:	9002      	str	r0, [sp, #8]
 8004bae:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 8004bb2:	4648      	mov	r0, r9
 8004bb4:	f000 fcbc 	bl	8005530 <__mcmp>
 8004bb8:	462a      	mov	r2, r5
 8004bba:	9008      	str	r0, [sp, #32]
 8004bbc:	4621      	mov	r1, r4
 8004bbe:	4658      	mov	r0, fp
 8004bc0:	f000 fcd2 	bl	8005568 <__mdiff>
 8004bc4:	68c2      	ldr	r2, [r0, #12]
 8004bc6:	4606      	mov	r6, r0
 8004bc8:	bb02      	cbnz	r2, 8004c0c <_dtoa_r+0xa1c>
 8004bca:	4601      	mov	r1, r0
 8004bcc:	4648      	mov	r0, r9
 8004bce:	f000 fcaf 	bl	8005530 <__mcmp>
 8004bd2:	4602      	mov	r2, r0
 8004bd4:	4631      	mov	r1, r6
 8004bd6:	4658      	mov	r0, fp
 8004bd8:	920e      	str	r2, [sp, #56]	@ 0x38
 8004bda:	f000 fa6f 	bl	80050bc <_Bfree>
 8004bde:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004be0:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8004be2:	9e07      	ldr	r6, [sp, #28]
 8004be4:	ea43 0102 	orr.w	r1, r3, r2
 8004be8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8004bea:	4319      	orrs	r1, r3
 8004bec:	d110      	bne.n	8004c10 <_dtoa_r+0xa20>
 8004bee:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8004bf2:	d029      	beq.n	8004c48 <_dtoa_r+0xa58>
 8004bf4:	9b08      	ldr	r3, [sp, #32]
 8004bf6:	2b00      	cmp	r3, #0
 8004bf8:	dd02      	ble.n	8004c00 <_dtoa_r+0xa10>
 8004bfa:	9b02      	ldr	r3, [sp, #8]
 8004bfc:	f103 0831 	add.w	r8, r3, #49	@ 0x31
 8004c00:	9b00      	ldr	r3, [sp, #0]
 8004c02:	f883 8000 	strb.w	r8, [r3]
 8004c06:	e63f      	b.n	8004888 <_dtoa_r+0x698>
 8004c08:	4628      	mov	r0, r5
 8004c0a:	e7bb      	b.n	8004b84 <_dtoa_r+0x994>
 8004c0c:	2201      	movs	r2, #1
 8004c0e:	e7e1      	b.n	8004bd4 <_dtoa_r+0x9e4>
 8004c10:	9b08      	ldr	r3, [sp, #32]
 8004c12:	2b00      	cmp	r3, #0
 8004c14:	db04      	blt.n	8004c20 <_dtoa_r+0xa30>
 8004c16:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8004c18:	430b      	orrs	r3, r1
 8004c1a:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8004c1c:	430b      	orrs	r3, r1
 8004c1e:	d120      	bne.n	8004c62 <_dtoa_r+0xa72>
 8004c20:	2a00      	cmp	r2, #0
 8004c22:	dded      	ble.n	8004c00 <_dtoa_r+0xa10>
 8004c24:	4649      	mov	r1, r9
 8004c26:	2201      	movs	r2, #1
 8004c28:	4658      	mov	r0, fp
 8004c2a:	f000 fc15 	bl	8005458 <__lshift>
 8004c2e:	4621      	mov	r1, r4
 8004c30:	4681      	mov	r9, r0
 8004c32:	f000 fc7d 	bl	8005530 <__mcmp>
 8004c36:	2800      	cmp	r0, #0
 8004c38:	dc03      	bgt.n	8004c42 <_dtoa_r+0xa52>
 8004c3a:	d1e1      	bne.n	8004c00 <_dtoa_r+0xa10>
 8004c3c:	f018 0f01 	tst.w	r8, #1
 8004c40:	d0de      	beq.n	8004c00 <_dtoa_r+0xa10>
 8004c42:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8004c46:	d1d8      	bne.n	8004bfa <_dtoa_r+0xa0a>
 8004c48:	9a00      	ldr	r2, [sp, #0]
 8004c4a:	2339      	movs	r3, #57	@ 0x39
 8004c4c:	7013      	strb	r3, [r2, #0]
 8004c4e:	4633      	mov	r3, r6
 8004c50:	461e      	mov	r6, r3
 8004c52:	3b01      	subs	r3, #1
 8004c54:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 8004c58:	2a39      	cmp	r2, #57	@ 0x39
 8004c5a:	d052      	beq.n	8004d02 <_dtoa_r+0xb12>
 8004c5c:	3201      	adds	r2, #1
 8004c5e:	701a      	strb	r2, [r3, #0]
 8004c60:	e612      	b.n	8004888 <_dtoa_r+0x698>
 8004c62:	2a00      	cmp	r2, #0
 8004c64:	dd07      	ble.n	8004c76 <_dtoa_r+0xa86>
 8004c66:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8004c6a:	d0ed      	beq.n	8004c48 <_dtoa_r+0xa58>
 8004c6c:	9a00      	ldr	r2, [sp, #0]
 8004c6e:	f108 0301 	add.w	r3, r8, #1
 8004c72:	7013      	strb	r3, [r2, #0]
 8004c74:	e608      	b.n	8004888 <_dtoa_r+0x698>
 8004c76:	9b07      	ldr	r3, [sp, #28]
 8004c78:	9a07      	ldr	r2, [sp, #28]
 8004c7a:	f803 8c01 	strb.w	r8, [r3, #-1]
 8004c7e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8004c80:	4293      	cmp	r3, r2
 8004c82:	d028      	beq.n	8004cd6 <_dtoa_r+0xae6>
 8004c84:	4649      	mov	r1, r9
 8004c86:	2300      	movs	r3, #0
 8004c88:	220a      	movs	r2, #10
 8004c8a:	4658      	mov	r0, fp
 8004c8c:	f000 fa38 	bl	8005100 <__multadd>
 8004c90:	42af      	cmp	r7, r5
 8004c92:	4681      	mov	r9, r0
 8004c94:	f04f 0300 	mov.w	r3, #0
 8004c98:	f04f 020a 	mov.w	r2, #10
 8004c9c:	4639      	mov	r1, r7
 8004c9e:	4658      	mov	r0, fp
 8004ca0:	d107      	bne.n	8004cb2 <_dtoa_r+0xac2>
 8004ca2:	f000 fa2d 	bl	8005100 <__multadd>
 8004ca6:	4607      	mov	r7, r0
 8004ca8:	4605      	mov	r5, r0
 8004caa:	9b07      	ldr	r3, [sp, #28]
 8004cac:	3301      	adds	r3, #1
 8004cae:	9307      	str	r3, [sp, #28]
 8004cb0:	e774      	b.n	8004b9c <_dtoa_r+0x9ac>
 8004cb2:	f000 fa25 	bl	8005100 <__multadd>
 8004cb6:	4629      	mov	r1, r5
 8004cb8:	4607      	mov	r7, r0
 8004cba:	2300      	movs	r3, #0
 8004cbc:	220a      	movs	r2, #10
 8004cbe:	4658      	mov	r0, fp
 8004cc0:	f000 fa1e 	bl	8005100 <__multadd>
 8004cc4:	4605      	mov	r5, r0
 8004cc6:	e7f0      	b.n	8004caa <_dtoa_r+0xaba>
 8004cc8:	9b00      	ldr	r3, [sp, #0]
 8004cca:	2b00      	cmp	r3, #0
 8004ccc:	bfcc      	ite	gt
 8004cce:	461e      	movgt	r6, r3
 8004cd0:	2601      	movle	r6, #1
 8004cd2:	4456      	add	r6, sl
 8004cd4:	2700      	movs	r7, #0
 8004cd6:	4649      	mov	r1, r9
 8004cd8:	2201      	movs	r2, #1
 8004cda:	4658      	mov	r0, fp
 8004cdc:	f000 fbbc 	bl	8005458 <__lshift>
 8004ce0:	4621      	mov	r1, r4
 8004ce2:	4681      	mov	r9, r0
 8004ce4:	f000 fc24 	bl	8005530 <__mcmp>
 8004ce8:	2800      	cmp	r0, #0
 8004cea:	dcb0      	bgt.n	8004c4e <_dtoa_r+0xa5e>
 8004cec:	d102      	bne.n	8004cf4 <_dtoa_r+0xb04>
 8004cee:	f018 0f01 	tst.w	r8, #1
 8004cf2:	d1ac      	bne.n	8004c4e <_dtoa_r+0xa5e>
 8004cf4:	4633      	mov	r3, r6
 8004cf6:	461e      	mov	r6, r3
 8004cf8:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8004cfc:	2a30      	cmp	r2, #48	@ 0x30
 8004cfe:	d0fa      	beq.n	8004cf6 <_dtoa_r+0xb06>
 8004d00:	e5c2      	b.n	8004888 <_dtoa_r+0x698>
 8004d02:	459a      	cmp	sl, r3
 8004d04:	d1a4      	bne.n	8004c50 <_dtoa_r+0xa60>
 8004d06:	9b04      	ldr	r3, [sp, #16]
 8004d08:	3301      	adds	r3, #1
 8004d0a:	9304      	str	r3, [sp, #16]
 8004d0c:	2331      	movs	r3, #49	@ 0x31
 8004d0e:	f88a 3000 	strb.w	r3, [sl]
 8004d12:	e5b9      	b.n	8004888 <_dtoa_r+0x698>
 8004d14:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8004d16:	f8df a05c 	ldr.w	sl, [pc, #92]	@ 8004d74 <_dtoa_r+0xb84>
 8004d1a:	b11b      	cbz	r3, 8004d24 <_dtoa_r+0xb34>
 8004d1c:	f10a 0308 	add.w	r3, sl, #8
 8004d20:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8004d22:	6013      	str	r3, [r2, #0]
 8004d24:	4650      	mov	r0, sl
 8004d26:	b019      	add	sp, #100	@ 0x64
 8004d28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004d2c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004d2e:	2b01      	cmp	r3, #1
 8004d30:	f77f ae37 	ble.w	80049a2 <_dtoa_r+0x7b2>
 8004d34:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8004d36:	930a      	str	r3, [sp, #40]	@ 0x28
 8004d38:	2001      	movs	r0, #1
 8004d3a:	e655      	b.n	80049e8 <_dtoa_r+0x7f8>
 8004d3c:	9b00      	ldr	r3, [sp, #0]
 8004d3e:	2b00      	cmp	r3, #0
 8004d40:	f77f aed6 	ble.w	8004af0 <_dtoa_r+0x900>
 8004d44:	4656      	mov	r6, sl
 8004d46:	4621      	mov	r1, r4
 8004d48:	4648      	mov	r0, r9
 8004d4a:	f7ff f9c8 	bl	80040de <quorem>
 8004d4e:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 8004d52:	f806 8b01 	strb.w	r8, [r6], #1
 8004d56:	9b00      	ldr	r3, [sp, #0]
 8004d58:	eba6 020a 	sub.w	r2, r6, sl
 8004d5c:	4293      	cmp	r3, r2
 8004d5e:	ddb3      	ble.n	8004cc8 <_dtoa_r+0xad8>
 8004d60:	4649      	mov	r1, r9
 8004d62:	2300      	movs	r3, #0
 8004d64:	220a      	movs	r2, #10
 8004d66:	4658      	mov	r0, fp
 8004d68:	f000 f9ca 	bl	8005100 <__multadd>
 8004d6c:	4681      	mov	r9, r0
 8004d6e:	e7ea      	b.n	8004d46 <_dtoa_r+0xb56>
 8004d70:	08006210 	.word	0x08006210
 8004d74:	08006194 	.word	0x08006194

08004d78 <malloc>:
 8004d78:	4b02      	ldr	r3, [pc, #8]	@ (8004d84 <malloc+0xc>)
 8004d7a:	4601      	mov	r1, r0
 8004d7c:	6818      	ldr	r0, [r3, #0]
 8004d7e:	f000 b825 	b.w	8004dcc <_malloc_r>
 8004d82:	bf00      	nop
 8004d84:	20000018 	.word	0x20000018

08004d88 <sbrk_aligned>:
 8004d88:	b570      	push	{r4, r5, r6, lr}
 8004d8a:	4e0f      	ldr	r6, [pc, #60]	@ (8004dc8 <sbrk_aligned+0x40>)
 8004d8c:	460c      	mov	r4, r1
 8004d8e:	6831      	ldr	r1, [r6, #0]
 8004d90:	4605      	mov	r5, r0
 8004d92:	b911      	cbnz	r1, 8004d9a <sbrk_aligned+0x12>
 8004d94:	f000 fd4c 	bl	8005830 <_sbrk_r>
 8004d98:	6030      	str	r0, [r6, #0]
 8004d9a:	4621      	mov	r1, r4
 8004d9c:	4628      	mov	r0, r5
 8004d9e:	f000 fd47 	bl	8005830 <_sbrk_r>
 8004da2:	1c43      	adds	r3, r0, #1
 8004da4:	d103      	bne.n	8004dae <sbrk_aligned+0x26>
 8004da6:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
 8004daa:	4620      	mov	r0, r4
 8004dac:	bd70      	pop	{r4, r5, r6, pc}
 8004dae:	1cc4      	adds	r4, r0, #3
 8004db0:	f024 0403 	bic.w	r4, r4, #3
 8004db4:	42a0      	cmp	r0, r4
 8004db6:	d0f8      	beq.n	8004daa <sbrk_aligned+0x22>
 8004db8:	1a21      	subs	r1, r4, r0
 8004dba:	4628      	mov	r0, r5
 8004dbc:	f000 fd38 	bl	8005830 <_sbrk_r>
 8004dc0:	3001      	adds	r0, #1
 8004dc2:	d1f2      	bne.n	8004daa <sbrk_aligned+0x22>
 8004dc4:	e7ef      	b.n	8004da6 <sbrk_aligned+0x1e>
 8004dc6:	bf00      	nop
 8004dc8:	20000338 	.word	0x20000338

08004dcc <_malloc_r>:
 8004dcc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004dd0:	1ccd      	adds	r5, r1, #3
 8004dd2:	f025 0503 	bic.w	r5, r5, #3
 8004dd6:	3508      	adds	r5, #8
 8004dd8:	2d0c      	cmp	r5, #12
 8004dda:	bf38      	it	cc
 8004ddc:	250c      	movcc	r5, #12
 8004dde:	2d00      	cmp	r5, #0
 8004de0:	4606      	mov	r6, r0
 8004de2:	db01      	blt.n	8004de8 <_malloc_r+0x1c>
 8004de4:	42a9      	cmp	r1, r5
 8004de6:	d904      	bls.n	8004df2 <_malloc_r+0x26>
 8004de8:	230c      	movs	r3, #12
 8004dea:	6033      	str	r3, [r6, #0]
 8004dec:	2000      	movs	r0, #0
 8004dee:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004df2:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8004ec8 <_malloc_r+0xfc>
 8004df6:	f000 f915 	bl	8005024 <__malloc_lock>
 8004dfa:	f8d8 3000 	ldr.w	r3, [r8]
 8004dfe:	461c      	mov	r4, r3
 8004e00:	bb44      	cbnz	r4, 8004e54 <_malloc_r+0x88>
 8004e02:	4629      	mov	r1, r5
 8004e04:	4630      	mov	r0, r6
 8004e06:	f7ff ffbf 	bl	8004d88 <sbrk_aligned>
 8004e0a:	1c43      	adds	r3, r0, #1
 8004e0c:	4604      	mov	r4, r0
 8004e0e:	d158      	bne.n	8004ec2 <_malloc_r+0xf6>
 8004e10:	f8d8 4000 	ldr.w	r4, [r8]
 8004e14:	4627      	mov	r7, r4
 8004e16:	2f00      	cmp	r7, #0
 8004e18:	d143      	bne.n	8004ea2 <_malloc_r+0xd6>
 8004e1a:	2c00      	cmp	r4, #0
 8004e1c:	d04b      	beq.n	8004eb6 <_malloc_r+0xea>
 8004e1e:	6823      	ldr	r3, [r4, #0]
 8004e20:	4639      	mov	r1, r7
 8004e22:	4630      	mov	r0, r6
 8004e24:	eb04 0903 	add.w	r9, r4, r3
 8004e28:	f000 fd02 	bl	8005830 <_sbrk_r>
 8004e2c:	4581      	cmp	r9, r0
 8004e2e:	d142      	bne.n	8004eb6 <_malloc_r+0xea>
 8004e30:	6821      	ldr	r1, [r4, #0]
 8004e32:	1a6d      	subs	r5, r5, r1
 8004e34:	4629      	mov	r1, r5
 8004e36:	4630      	mov	r0, r6
 8004e38:	f7ff ffa6 	bl	8004d88 <sbrk_aligned>
 8004e3c:	3001      	adds	r0, #1
 8004e3e:	d03a      	beq.n	8004eb6 <_malloc_r+0xea>
 8004e40:	6823      	ldr	r3, [r4, #0]
 8004e42:	442b      	add	r3, r5
 8004e44:	6023      	str	r3, [r4, #0]
 8004e46:	f8d8 3000 	ldr.w	r3, [r8]
 8004e4a:	685a      	ldr	r2, [r3, #4]
 8004e4c:	bb62      	cbnz	r2, 8004ea8 <_malloc_r+0xdc>
 8004e4e:	f8c8 7000 	str.w	r7, [r8]
 8004e52:	e00f      	b.n	8004e74 <_malloc_r+0xa8>
 8004e54:	6822      	ldr	r2, [r4, #0]
 8004e56:	1b52      	subs	r2, r2, r5
 8004e58:	d420      	bmi.n	8004e9c <_malloc_r+0xd0>
 8004e5a:	2a0b      	cmp	r2, #11
 8004e5c:	d917      	bls.n	8004e8e <_malloc_r+0xc2>
 8004e5e:	1961      	adds	r1, r4, r5
 8004e60:	42a3      	cmp	r3, r4
 8004e62:	6025      	str	r5, [r4, #0]
 8004e64:	bf18      	it	ne
 8004e66:	6059      	strne	r1, [r3, #4]
 8004e68:	6863      	ldr	r3, [r4, #4]
 8004e6a:	bf08      	it	eq
 8004e6c:	f8c8 1000 	streq.w	r1, [r8]
 8004e70:	5162      	str	r2, [r4, r5]
 8004e72:	604b      	str	r3, [r1, #4]
 8004e74:	4630      	mov	r0, r6
 8004e76:	f000 f8db 	bl	8005030 <__malloc_unlock>
 8004e7a:	f104 000b 	add.w	r0, r4, #11
 8004e7e:	1d23      	adds	r3, r4, #4
 8004e80:	f020 0007 	bic.w	r0, r0, #7
 8004e84:	1ac2      	subs	r2, r0, r3
 8004e86:	bf1c      	itt	ne
 8004e88:	1a1b      	subne	r3, r3, r0
 8004e8a:	50a3      	strne	r3, [r4, r2]
 8004e8c:	e7af      	b.n	8004dee <_malloc_r+0x22>
 8004e8e:	6862      	ldr	r2, [r4, #4]
 8004e90:	42a3      	cmp	r3, r4
 8004e92:	bf0c      	ite	eq
 8004e94:	f8c8 2000 	streq.w	r2, [r8]
 8004e98:	605a      	strne	r2, [r3, #4]
 8004e9a:	e7eb      	b.n	8004e74 <_malloc_r+0xa8>
 8004e9c:	4623      	mov	r3, r4
 8004e9e:	6864      	ldr	r4, [r4, #4]
 8004ea0:	e7ae      	b.n	8004e00 <_malloc_r+0x34>
 8004ea2:	463c      	mov	r4, r7
 8004ea4:	687f      	ldr	r7, [r7, #4]
 8004ea6:	e7b6      	b.n	8004e16 <_malloc_r+0x4a>
 8004ea8:	461a      	mov	r2, r3
 8004eaa:	685b      	ldr	r3, [r3, #4]
 8004eac:	42a3      	cmp	r3, r4
 8004eae:	d1fb      	bne.n	8004ea8 <_malloc_r+0xdc>
 8004eb0:	2300      	movs	r3, #0
 8004eb2:	6053      	str	r3, [r2, #4]
 8004eb4:	e7de      	b.n	8004e74 <_malloc_r+0xa8>
 8004eb6:	230c      	movs	r3, #12
 8004eb8:	6033      	str	r3, [r6, #0]
 8004eba:	4630      	mov	r0, r6
 8004ebc:	f000 f8b8 	bl	8005030 <__malloc_unlock>
 8004ec0:	e794      	b.n	8004dec <_malloc_r+0x20>
 8004ec2:	6005      	str	r5, [r0, #0]
 8004ec4:	e7d6      	b.n	8004e74 <_malloc_r+0xa8>
 8004ec6:	bf00      	nop
 8004ec8:	2000033c 	.word	0x2000033c

08004ecc <__sflush_r>:
 8004ecc:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8004ed0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004ed4:	0716      	lsls	r6, r2, #28
 8004ed6:	4605      	mov	r5, r0
 8004ed8:	460c      	mov	r4, r1
 8004eda:	d454      	bmi.n	8004f86 <__sflush_r+0xba>
 8004edc:	684b      	ldr	r3, [r1, #4]
 8004ede:	2b00      	cmp	r3, #0
 8004ee0:	dc02      	bgt.n	8004ee8 <__sflush_r+0x1c>
 8004ee2:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8004ee4:	2b00      	cmp	r3, #0
 8004ee6:	dd48      	ble.n	8004f7a <__sflush_r+0xae>
 8004ee8:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8004eea:	2e00      	cmp	r6, #0
 8004eec:	d045      	beq.n	8004f7a <__sflush_r+0xae>
 8004eee:	2300      	movs	r3, #0
 8004ef0:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8004ef4:	682f      	ldr	r7, [r5, #0]
 8004ef6:	6a21      	ldr	r1, [r4, #32]
 8004ef8:	602b      	str	r3, [r5, #0]
 8004efa:	d030      	beq.n	8004f5e <__sflush_r+0x92>
 8004efc:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8004efe:	89a3      	ldrh	r3, [r4, #12]
 8004f00:	0759      	lsls	r1, r3, #29
 8004f02:	d505      	bpl.n	8004f10 <__sflush_r+0x44>
 8004f04:	6863      	ldr	r3, [r4, #4]
 8004f06:	1ad2      	subs	r2, r2, r3
 8004f08:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8004f0a:	b10b      	cbz	r3, 8004f10 <__sflush_r+0x44>
 8004f0c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8004f0e:	1ad2      	subs	r2, r2, r3
 8004f10:	2300      	movs	r3, #0
 8004f12:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8004f14:	6a21      	ldr	r1, [r4, #32]
 8004f16:	4628      	mov	r0, r5
 8004f18:	47b0      	blx	r6
 8004f1a:	1c43      	adds	r3, r0, #1
 8004f1c:	89a3      	ldrh	r3, [r4, #12]
 8004f1e:	d106      	bne.n	8004f2e <__sflush_r+0x62>
 8004f20:	6829      	ldr	r1, [r5, #0]
 8004f22:	291d      	cmp	r1, #29
 8004f24:	d82b      	bhi.n	8004f7e <__sflush_r+0xb2>
 8004f26:	4a2a      	ldr	r2, [pc, #168]	@ (8004fd0 <__sflush_r+0x104>)
 8004f28:	410a      	asrs	r2, r1
 8004f2a:	07d6      	lsls	r6, r2, #31
 8004f2c:	d427      	bmi.n	8004f7e <__sflush_r+0xb2>
 8004f2e:	2200      	movs	r2, #0
 8004f30:	6062      	str	r2, [r4, #4]
 8004f32:	04d9      	lsls	r1, r3, #19
 8004f34:	6922      	ldr	r2, [r4, #16]
 8004f36:	6022      	str	r2, [r4, #0]
 8004f38:	d504      	bpl.n	8004f44 <__sflush_r+0x78>
 8004f3a:	1c42      	adds	r2, r0, #1
 8004f3c:	d101      	bne.n	8004f42 <__sflush_r+0x76>
 8004f3e:	682b      	ldr	r3, [r5, #0]
 8004f40:	b903      	cbnz	r3, 8004f44 <__sflush_r+0x78>
 8004f42:	6560      	str	r0, [r4, #84]	@ 0x54
 8004f44:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8004f46:	602f      	str	r7, [r5, #0]
 8004f48:	b1b9      	cbz	r1, 8004f7a <__sflush_r+0xae>
 8004f4a:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8004f4e:	4299      	cmp	r1, r3
 8004f50:	d002      	beq.n	8004f58 <__sflush_r+0x8c>
 8004f52:	4628      	mov	r0, r5
 8004f54:	f000 fcc0 	bl	80058d8 <_free_r>
 8004f58:	2300      	movs	r3, #0
 8004f5a:	6363      	str	r3, [r4, #52]	@ 0x34
 8004f5c:	e00d      	b.n	8004f7a <__sflush_r+0xae>
 8004f5e:	2301      	movs	r3, #1
 8004f60:	4628      	mov	r0, r5
 8004f62:	47b0      	blx	r6
 8004f64:	4602      	mov	r2, r0
 8004f66:	1c50      	adds	r0, r2, #1
 8004f68:	d1c9      	bne.n	8004efe <__sflush_r+0x32>
 8004f6a:	682b      	ldr	r3, [r5, #0]
 8004f6c:	2b00      	cmp	r3, #0
 8004f6e:	d0c6      	beq.n	8004efe <__sflush_r+0x32>
 8004f70:	2b1d      	cmp	r3, #29
 8004f72:	d001      	beq.n	8004f78 <__sflush_r+0xac>
 8004f74:	2b16      	cmp	r3, #22
 8004f76:	d11e      	bne.n	8004fb6 <__sflush_r+0xea>
 8004f78:	602f      	str	r7, [r5, #0]
 8004f7a:	2000      	movs	r0, #0
 8004f7c:	e022      	b.n	8004fc4 <__sflush_r+0xf8>
 8004f7e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8004f82:	b21b      	sxth	r3, r3
 8004f84:	e01b      	b.n	8004fbe <__sflush_r+0xf2>
 8004f86:	690f      	ldr	r7, [r1, #16]
 8004f88:	2f00      	cmp	r7, #0
 8004f8a:	d0f6      	beq.n	8004f7a <__sflush_r+0xae>
 8004f8c:	0793      	lsls	r3, r2, #30
 8004f8e:	680e      	ldr	r6, [r1, #0]
 8004f90:	bf08      	it	eq
 8004f92:	694b      	ldreq	r3, [r1, #20]
 8004f94:	600f      	str	r7, [r1, #0]
 8004f96:	bf18      	it	ne
 8004f98:	2300      	movne	r3, #0
 8004f9a:	eba6 0807 	sub.w	r8, r6, r7
 8004f9e:	608b      	str	r3, [r1, #8]
 8004fa0:	f1b8 0f00 	cmp.w	r8, #0
 8004fa4:	dde9      	ble.n	8004f7a <__sflush_r+0xae>
 8004fa6:	6a21      	ldr	r1, [r4, #32]
 8004fa8:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8004faa:	4643      	mov	r3, r8
 8004fac:	463a      	mov	r2, r7
 8004fae:	4628      	mov	r0, r5
 8004fb0:	47b0      	blx	r6
 8004fb2:	2800      	cmp	r0, #0
 8004fb4:	dc08      	bgt.n	8004fc8 <__sflush_r+0xfc>
 8004fb6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004fba:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8004fbe:	81a3      	strh	r3, [r4, #12]
 8004fc0:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8004fc4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004fc8:	4407      	add	r7, r0
 8004fca:	eba8 0800 	sub.w	r8, r8, r0
 8004fce:	e7e7      	b.n	8004fa0 <__sflush_r+0xd4>
 8004fd0:	dfbffffe 	.word	0xdfbffffe

08004fd4 <_fflush_r>:
 8004fd4:	b538      	push	{r3, r4, r5, lr}
 8004fd6:	690b      	ldr	r3, [r1, #16]
 8004fd8:	4605      	mov	r5, r0
 8004fda:	460c      	mov	r4, r1
 8004fdc:	b913      	cbnz	r3, 8004fe4 <_fflush_r+0x10>
 8004fde:	2500      	movs	r5, #0
 8004fe0:	4628      	mov	r0, r5
 8004fe2:	bd38      	pop	{r3, r4, r5, pc}
 8004fe4:	b118      	cbz	r0, 8004fee <_fflush_r+0x1a>
 8004fe6:	6a03      	ldr	r3, [r0, #32]
 8004fe8:	b90b      	cbnz	r3, 8004fee <_fflush_r+0x1a>
 8004fea:	f7fe fffb 	bl	8003fe4 <__sinit>
 8004fee:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004ff2:	2b00      	cmp	r3, #0
 8004ff4:	d0f3      	beq.n	8004fde <_fflush_r+0xa>
 8004ff6:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8004ff8:	07d0      	lsls	r0, r2, #31
 8004ffa:	d404      	bmi.n	8005006 <_fflush_r+0x32>
 8004ffc:	0599      	lsls	r1, r3, #22
 8004ffe:	d402      	bmi.n	8005006 <_fflush_r+0x32>
 8005000:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8005002:	f7ff f85c 	bl	80040be <__retarget_lock_acquire_recursive>
 8005006:	4628      	mov	r0, r5
 8005008:	4621      	mov	r1, r4
 800500a:	f7ff ff5f 	bl	8004ecc <__sflush_r>
 800500e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8005010:	07da      	lsls	r2, r3, #31
 8005012:	4605      	mov	r5, r0
 8005014:	d4e4      	bmi.n	8004fe0 <_fflush_r+0xc>
 8005016:	89a3      	ldrh	r3, [r4, #12]
 8005018:	059b      	lsls	r3, r3, #22
 800501a:	d4e1      	bmi.n	8004fe0 <_fflush_r+0xc>
 800501c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800501e:	f7ff f84f 	bl	80040c0 <__retarget_lock_release_recursive>
 8005022:	e7dd      	b.n	8004fe0 <_fflush_r+0xc>

08005024 <__malloc_lock>:
 8005024:	4801      	ldr	r0, [pc, #4]	@ (800502c <__malloc_lock+0x8>)
 8005026:	f7ff b84a 	b.w	80040be <__retarget_lock_acquire_recursive>
 800502a:	bf00      	nop
 800502c:	20000334 	.word	0x20000334

08005030 <__malloc_unlock>:
 8005030:	4801      	ldr	r0, [pc, #4]	@ (8005038 <__malloc_unlock+0x8>)
 8005032:	f7ff b845 	b.w	80040c0 <__retarget_lock_release_recursive>
 8005036:	bf00      	nop
 8005038:	20000334 	.word	0x20000334

0800503c <_Balloc>:
 800503c:	b570      	push	{r4, r5, r6, lr}
 800503e:	69c6      	ldr	r6, [r0, #28]
 8005040:	4604      	mov	r4, r0
 8005042:	460d      	mov	r5, r1
 8005044:	b976      	cbnz	r6, 8005064 <_Balloc+0x28>
 8005046:	2010      	movs	r0, #16
 8005048:	f7ff fe96 	bl	8004d78 <malloc>
 800504c:	4602      	mov	r2, r0
 800504e:	61e0      	str	r0, [r4, #28]
 8005050:	b920      	cbnz	r0, 800505c <_Balloc+0x20>
 8005052:	4b18      	ldr	r3, [pc, #96]	@ (80050b4 <_Balloc+0x78>)
 8005054:	4818      	ldr	r0, [pc, #96]	@ (80050b8 <_Balloc+0x7c>)
 8005056:	216b      	movs	r1, #107	@ 0x6b
 8005058:	f000 fc0c 	bl	8005874 <__assert_func>
 800505c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8005060:	6006      	str	r6, [r0, #0]
 8005062:	60c6      	str	r6, [r0, #12]
 8005064:	69e6      	ldr	r6, [r4, #28]
 8005066:	68f3      	ldr	r3, [r6, #12]
 8005068:	b183      	cbz	r3, 800508c <_Balloc+0x50>
 800506a:	69e3      	ldr	r3, [r4, #28]
 800506c:	68db      	ldr	r3, [r3, #12]
 800506e:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8005072:	b9b8      	cbnz	r0, 80050a4 <_Balloc+0x68>
 8005074:	2101      	movs	r1, #1
 8005076:	fa01 f605 	lsl.w	r6, r1, r5
 800507a:	1d72      	adds	r2, r6, #5
 800507c:	0092      	lsls	r2, r2, #2
 800507e:	4620      	mov	r0, r4
 8005080:	f000 fc16 	bl	80058b0 <_calloc_r>
 8005084:	b160      	cbz	r0, 80050a0 <_Balloc+0x64>
 8005086:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800508a:	e00e      	b.n	80050aa <_Balloc+0x6e>
 800508c:	2221      	movs	r2, #33	@ 0x21
 800508e:	2104      	movs	r1, #4
 8005090:	4620      	mov	r0, r4
 8005092:	f000 fc0d 	bl	80058b0 <_calloc_r>
 8005096:	69e3      	ldr	r3, [r4, #28]
 8005098:	60f0      	str	r0, [r6, #12]
 800509a:	68db      	ldr	r3, [r3, #12]
 800509c:	2b00      	cmp	r3, #0
 800509e:	d1e4      	bne.n	800506a <_Balloc+0x2e>
 80050a0:	2000      	movs	r0, #0
 80050a2:	bd70      	pop	{r4, r5, r6, pc}
 80050a4:	6802      	ldr	r2, [r0, #0]
 80050a6:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 80050aa:	2300      	movs	r3, #0
 80050ac:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80050b0:	e7f7      	b.n	80050a2 <_Balloc+0x66>
 80050b2:	bf00      	nop
 80050b4:	080061a1 	.word	0x080061a1
 80050b8:	08006221 	.word	0x08006221

080050bc <_Bfree>:
 80050bc:	b570      	push	{r4, r5, r6, lr}
 80050be:	69c6      	ldr	r6, [r0, #28]
 80050c0:	4605      	mov	r5, r0
 80050c2:	460c      	mov	r4, r1
 80050c4:	b976      	cbnz	r6, 80050e4 <_Bfree+0x28>
 80050c6:	2010      	movs	r0, #16
 80050c8:	f7ff fe56 	bl	8004d78 <malloc>
 80050cc:	4602      	mov	r2, r0
 80050ce:	61e8      	str	r0, [r5, #28]
 80050d0:	b920      	cbnz	r0, 80050dc <_Bfree+0x20>
 80050d2:	4b09      	ldr	r3, [pc, #36]	@ (80050f8 <_Bfree+0x3c>)
 80050d4:	4809      	ldr	r0, [pc, #36]	@ (80050fc <_Bfree+0x40>)
 80050d6:	218f      	movs	r1, #143	@ 0x8f
 80050d8:	f000 fbcc 	bl	8005874 <__assert_func>
 80050dc:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80050e0:	6006      	str	r6, [r0, #0]
 80050e2:	60c6      	str	r6, [r0, #12]
 80050e4:	b13c      	cbz	r4, 80050f6 <_Bfree+0x3a>
 80050e6:	69eb      	ldr	r3, [r5, #28]
 80050e8:	6862      	ldr	r2, [r4, #4]
 80050ea:	68db      	ldr	r3, [r3, #12]
 80050ec:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80050f0:	6021      	str	r1, [r4, #0]
 80050f2:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 80050f6:	bd70      	pop	{r4, r5, r6, pc}
 80050f8:	080061a1 	.word	0x080061a1
 80050fc:	08006221 	.word	0x08006221

08005100 <__multadd>:
 8005100:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005104:	690d      	ldr	r5, [r1, #16]
 8005106:	4607      	mov	r7, r0
 8005108:	460c      	mov	r4, r1
 800510a:	461e      	mov	r6, r3
 800510c:	f101 0c14 	add.w	ip, r1, #20
 8005110:	2000      	movs	r0, #0
 8005112:	f8dc 3000 	ldr.w	r3, [ip]
 8005116:	b299      	uxth	r1, r3
 8005118:	fb02 6101 	mla	r1, r2, r1, r6
 800511c:	0c1e      	lsrs	r6, r3, #16
 800511e:	0c0b      	lsrs	r3, r1, #16
 8005120:	fb02 3306 	mla	r3, r2, r6, r3
 8005124:	b289      	uxth	r1, r1
 8005126:	3001      	adds	r0, #1
 8005128:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 800512c:	4285      	cmp	r5, r0
 800512e:	f84c 1b04 	str.w	r1, [ip], #4
 8005132:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8005136:	dcec      	bgt.n	8005112 <__multadd+0x12>
 8005138:	b30e      	cbz	r6, 800517e <__multadd+0x7e>
 800513a:	68a3      	ldr	r3, [r4, #8]
 800513c:	42ab      	cmp	r3, r5
 800513e:	dc19      	bgt.n	8005174 <__multadd+0x74>
 8005140:	6861      	ldr	r1, [r4, #4]
 8005142:	4638      	mov	r0, r7
 8005144:	3101      	adds	r1, #1
 8005146:	f7ff ff79 	bl	800503c <_Balloc>
 800514a:	4680      	mov	r8, r0
 800514c:	b928      	cbnz	r0, 800515a <__multadd+0x5a>
 800514e:	4602      	mov	r2, r0
 8005150:	4b0c      	ldr	r3, [pc, #48]	@ (8005184 <__multadd+0x84>)
 8005152:	480d      	ldr	r0, [pc, #52]	@ (8005188 <__multadd+0x88>)
 8005154:	21ba      	movs	r1, #186	@ 0xba
 8005156:	f000 fb8d 	bl	8005874 <__assert_func>
 800515a:	6922      	ldr	r2, [r4, #16]
 800515c:	3202      	adds	r2, #2
 800515e:	f104 010c 	add.w	r1, r4, #12
 8005162:	0092      	lsls	r2, r2, #2
 8005164:	300c      	adds	r0, #12
 8005166:	f7fe ffac 	bl	80040c2 <memcpy>
 800516a:	4621      	mov	r1, r4
 800516c:	4638      	mov	r0, r7
 800516e:	f7ff ffa5 	bl	80050bc <_Bfree>
 8005172:	4644      	mov	r4, r8
 8005174:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8005178:	3501      	adds	r5, #1
 800517a:	615e      	str	r6, [r3, #20]
 800517c:	6125      	str	r5, [r4, #16]
 800517e:	4620      	mov	r0, r4
 8005180:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005184:	08006210 	.word	0x08006210
 8005188:	08006221 	.word	0x08006221

0800518c <__hi0bits>:
 800518c:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 8005190:	4603      	mov	r3, r0
 8005192:	bf36      	itet	cc
 8005194:	0403      	lslcc	r3, r0, #16
 8005196:	2000      	movcs	r0, #0
 8005198:	2010      	movcc	r0, #16
 800519a:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 800519e:	bf3c      	itt	cc
 80051a0:	021b      	lslcc	r3, r3, #8
 80051a2:	3008      	addcc	r0, #8
 80051a4:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 80051a8:	bf3c      	itt	cc
 80051aa:	011b      	lslcc	r3, r3, #4
 80051ac:	3004      	addcc	r0, #4
 80051ae:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80051b2:	bf3c      	itt	cc
 80051b4:	009b      	lslcc	r3, r3, #2
 80051b6:	3002      	addcc	r0, #2
 80051b8:	2b00      	cmp	r3, #0
 80051ba:	db05      	blt.n	80051c8 <__hi0bits+0x3c>
 80051bc:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 80051c0:	f100 0001 	add.w	r0, r0, #1
 80051c4:	bf08      	it	eq
 80051c6:	2020      	moveq	r0, #32
 80051c8:	4770      	bx	lr

080051ca <__lo0bits>:
 80051ca:	6803      	ldr	r3, [r0, #0]
 80051cc:	4602      	mov	r2, r0
 80051ce:	f013 0007 	ands.w	r0, r3, #7
 80051d2:	d00b      	beq.n	80051ec <__lo0bits+0x22>
 80051d4:	07d9      	lsls	r1, r3, #31
 80051d6:	d421      	bmi.n	800521c <__lo0bits+0x52>
 80051d8:	0798      	lsls	r0, r3, #30
 80051da:	bf49      	itett	mi
 80051dc:	085b      	lsrmi	r3, r3, #1
 80051de:	089b      	lsrpl	r3, r3, #2
 80051e0:	2001      	movmi	r0, #1
 80051e2:	6013      	strmi	r3, [r2, #0]
 80051e4:	bf5c      	itt	pl
 80051e6:	6013      	strpl	r3, [r2, #0]
 80051e8:	2002      	movpl	r0, #2
 80051ea:	4770      	bx	lr
 80051ec:	b299      	uxth	r1, r3
 80051ee:	b909      	cbnz	r1, 80051f4 <__lo0bits+0x2a>
 80051f0:	0c1b      	lsrs	r3, r3, #16
 80051f2:	2010      	movs	r0, #16
 80051f4:	b2d9      	uxtb	r1, r3
 80051f6:	b909      	cbnz	r1, 80051fc <__lo0bits+0x32>
 80051f8:	3008      	adds	r0, #8
 80051fa:	0a1b      	lsrs	r3, r3, #8
 80051fc:	0719      	lsls	r1, r3, #28
 80051fe:	bf04      	itt	eq
 8005200:	091b      	lsreq	r3, r3, #4
 8005202:	3004      	addeq	r0, #4
 8005204:	0799      	lsls	r1, r3, #30
 8005206:	bf04      	itt	eq
 8005208:	089b      	lsreq	r3, r3, #2
 800520a:	3002      	addeq	r0, #2
 800520c:	07d9      	lsls	r1, r3, #31
 800520e:	d403      	bmi.n	8005218 <__lo0bits+0x4e>
 8005210:	085b      	lsrs	r3, r3, #1
 8005212:	f100 0001 	add.w	r0, r0, #1
 8005216:	d003      	beq.n	8005220 <__lo0bits+0x56>
 8005218:	6013      	str	r3, [r2, #0]
 800521a:	4770      	bx	lr
 800521c:	2000      	movs	r0, #0
 800521e:	4770      	bx	lr
 8005220:	2020      	movs	r0, #32
 8005222:	4770      	bx	lr

08005224 <__i2b>:
 8005224:	b510      	push	{r4, lr}
 8005226:	460c      	mov	r4, r1
 8005228:	2101      	movs	r1, #1
 800522a:	f7ff ff07 	bl	800503c <_Balloc>
 800522e:	4602      	mov	r2, r0
 8005230:	b928      	cbnz	r0, 800523e <__i2b+0x1a>
 8005232:	4b05      	ldr	r3, [pc, #20]	@ (8005248 <__i2b+0x24>)
 8005234:	4805      	ldr	r0, [pc, #20]	@ (800524c <__i2b+0x28>)
 8005236:	f240 1145 	movw	r1, #325	@ 0x145
 800523a:	f000 fb1b 	bl	8005874 <__assert_func>
 800523e:	2301      	movs	r3, #1
 8005240:	6144      	str	r4, [r0, #20]
 8005242:	6103      	str	r3, [r0, #16]
 8005244:	bd10      	pop	{r4, pc}
 8005246:	bf00      	nop
 8005248:	08006210 	.word	0x08006210
 800524c:	08006221 	.word	0x08006221

08005250 <__multiply>:
 8005250:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005254:	4614      	mov	r4, r2
 8005256:	690a      	ldr	r2, [r1, #16]
 8005258:	6923      	ldr	r3, [r4, #16]
 800525a:	429a      	cmp	r2, r3
 800525c:	bfa8      	it	ge
 800525e:	4623      	movge	r3, r4
 8005260:	460f      	mov	r7, r1
 8005262:	bfa4      	itt	ge
 8005264:	460c      	movge	r4, r1
 8005266:	461f      	movge	r7, r3
 8005268:	f8d4 a010 	ldr.w	sl, [r4, #16]
 800526c:	f8d7 9010 	ldr.w	r9, [r7, #16]
 8005270:	68a3      	ldr	r3, [r4, #8]
 8005272:	6861      	ldr	r1, [r4, #4]
 8005274:	eb0a 0609 	add.w	r6, sl, r9
 8005278:	42b3      	cmp	r3, r6
 800527a:	b085      	sub	sp, #20
 800527c:	bfb8      	it	lt
 800527e:	3101      	addlt	r1, #1
 8005280:	f7ff fedc 	bl	800503c <_Balloc>
 8005284:	b930      	cbnz	r0, 8005294 <__multiply+0x44>
 8005286:	4602      	mov	r2, r0
 8005288:	4b44      	ldr	r3, [pc, #272]	@ (800539c <__multiply+0x14c>)
 800528a:	4845      	ldr	r0, [pc, #276]	@ (80053a0 <__multiply+0x150>)
 800528c:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 8005290:	f000 faf0 	bl	8005874 <__assert_func>
 8005294:	f100 0514 	add.w	r5, r0, #20
 8005298:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 800529c:	462b      	mov	r3, r5
 800529e:	2200      	movs	r2, #0
 80052a0:	4543      	cmp	r3, r8
 80052a2:	d321      	bcc.n	80052e8 <__multiply+0x98>
 80052a4:	f107 0114 	add.w	r1, r7, #20
 80052a8:	f104 0214 	add.w	r2, r4, #20
 80052ac:	eb02 028a 	add.w	r2, r2, sl, lsl #2
 80052b0:	eb01 0389 	add.w	r3, r1, r9, lsl #2
 80052b4:	9302      	str	r3, [sp, #8]
 80052b6:	1b13      	subs	r3, r2, r4
 80052b8:	3b15      	subs	r3, #21
 80052ba:	f023 0303 	bic.w	r3, r3, #3
 80052be:	3304      	adds	r3, #4
 80052c0:	f104 0715 	add.w	r7, r4, #21
 80052c4:	42ba      	cmp	r2, r7
 80052c6:	bf38      	it	cc
 80052c8:	2304      	movcc	r3, #4
 80052ca:	9301      	str	r3, [sp, #4]
 80052cc:	9b02      	ldr	r3, [sp, #8]
 80052ce:	9103      	str	r1, [sp, #12]
 80052d0:	428b      	cmp	r3, r1
 80052d2:	d80c      	bhi.n	80052ee <__multiply+0x9e>
 80052d4:	2e00      	cmp	r6, #0
 80052d6:	dd03      	ble.n	80052e0 <__multiply+0x90>
 80052d8:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 80052dc:	2b00      	cmp	r3, #0
 80052de:	d05b      	beq.n	8005398 <__multiply+0x148>
 80052e0:	6106      	str	r6, [r0, #16]
 80052e2:	b005      	add	sp, #20
 80052e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80052e8:	f843 2b04 	str.w	r2, [r3], #4
 80052ec:	e7d8      	b.n	80052a0 <__multiply+0x50>
 80052ee:	f8b1 a000 	ldrh.w	sl, [r1]
 80052f2:	f1ba 0f00 	cmp.w	sl, #0
 80052f6:	d024      	beq.n	8005342 <__multiply+0xf2>
 80052f8:	f104 0e14 	add.w	lr, r4, #20
 80052fc:	46a9      	mov	r9, r5
 80052fe:	f04f 0c00 	mov.w	ip, #0
 8005302:	f85e 7b04 	ldr.w	r7, [lr], #4
 8005306:	f8d9 3000 	ldr.w	r3, [r9]
 800530a:	fa1f fb87 	uxth.w	fp, r7
 800530e:	b29b      	uxth	r3, r3
 8005310:	fb0a 330b 	mla	r3, sl, fp, r3
 8005314:	ea4f 4b17 	mov.w	fp, r7, lsr #16
 8005318:	f8d9 7000 	ldr.w	r7, [r9]
 800531c:	4463      	add	r3, ip
 800531e:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 8005322:	fb0a c70b 	mla	r7, sl, fp, ip
 8005326:	eb07 4713 	add.w	r7, r7, r3, lsr #16
 800532a:	b29b      	uxth	r3, r3
 800532c:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8005330:	4572      	cmp	r2, lr
 8005332:	f849 3b04 	str.w	r3, [r9], #4
 8005336:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 800533a:	d8e2      	bhi.n	8005302 <__multiply+0xb2>
 800533c:	9b01      	ldr	r3, [sp, #4]
 800533e:	f845 c003 	str.w	ip, [r5, r3]
 8005342:	9b03      	ldr	r3, [sp, #12]
 8005344:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 8005348:	3104      	adds	r1, #4
 800534a:	f1b9 0f00 	cmp.w	r9, #0
 800534e:	d021      	beq.n	8005394 <__multiply+0x144>
 8005350:	682b      	ldr	r3, [r5, #0]
 8005352:	f104 0c14 	add.w	ip, r4, #20
 8005356:	46ae      	mov	lr, r5
 8005358:	f04f 0a00 	mov.w	sl, #0
 800535c:	f8bc b000 	ldrh.w	fp, [ip]
 8005360:	f8be 7002 	ldrh.w	r7, [lr, #2]
 8005364:	fb09 770b 	mla	r7, r9, fp, r7
 8005368:	4457      	add	r7, sl
 800536a:	b29b      	uxth	r3, r3
 800536c:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8005370:	f84e 3b04 	str.w	r3, [lr], #4
 8005374:	f85c 3b04 	ldr.w	r3, [ip], #4
 8005378:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800537c:	f8be 3000 	ldrh.w	r3, [lr]
 8005380:	fb09 330a 	mla	r3, r9, sl, r3
 8005384:	eb03 4317 	add.w	r3, r3, r7, lsr #16
 8005388:	4562      	cmp	r2, ip
 800538a:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800538e:	d8e5      	bhi.n	800535c <__multiply+0x10c>
 8005390:	9f01      	ldr	r7, [sp, #4]
 8005392:	51eb      	str	r3, [r5, r7]
 8005394:	3504      	adds	r5, #4
 8005396:	e799      	b.n	80052cc <__multiply+0x7c>
 8005398:	3e01      	subs	r6, #1
 800539a:	e79b      	b.n	80052d4 <__multiply+0x84>
 800539c:	08006210 	.word	0x08006210
 80053a0:	08006221 	.word	0x08006221

080053a4 <__pow5mult>:
 80053a4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80053a8:	4615      	mov	r5, r2
 80053aa:	f012 0203 	ands.w	r2, r2, #3
 80053ae:	4607      	mov	r7, r0
 80053b0:	460e      	mov	r6, r1
 80053b2:	d007      	beq.n	80053c4 <__pow5mult+0x20>
 80053b4:	4c25      	ldr	r4, [pc, #148]	@ (800544c <__pow5mult+0xa8>)
 80053b6:	3a01      	subs	r2, #1
 80053b8:	2300      	movs	r3, #0
 80053ba:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 80053be:	f7ff fe9f 	bl	8005100 <__multadd>
 80053c2:	4606      	mov	r6, r0
 80053c4:	10ad      	asrs	r5, r5, #2
 80053c6:	d03d      	beq.n	8005444 <__pow5mult+0xa0>
 80053c8:	69fc      	ldr	r4, [r7, #28]
 80053ca:	b97c      	cbnz	r4, 80053ec <__pow5mult+0x48>
 80053cc:	2010      	movs	r0, #16
 80053ce:	f7ff fcd3 	bl	8004d78 <malloc>
 80053d2:	4602      	mov	r2, r0
 80053d4:	61f8      	str	r0, [r7, #28]
 80053d6:	b928      	cbnz	r0, 80053e4 <__pow5mult+0x40>
 80053d8:	4b1d      	ldr	r3, [pc, #116]	@ (8005450 <__pow5mult+0xac>)
 80053da:	481e      	ldr	r0, [pc, #120]	@ (8005454 <__pow5mult+0xb0>)
 80053dc:	f240 11b3 	movw	r1, #435	@ 0x1b3
 80053e0:	f000 fa48 	bl	8005874 <__assert_func>
 80053e4:	e9c0 4401 	strd	r4, r4, [r0, #4]
 80053e8:	6004      	str	r4, [r0, #0]
 80053ea:	60c4      	str	r4, [r0, #12]
 80053ec:	f8d7 801c 	ldr.w	r8, [r7, #28]
 80053f0:	f8d8 4008 	ldr.w	r4, [r8, #8]
 80053f4:	b94c      	cbnz	r4, 800540a <__pow5mult+0x66>
 80053f6:	f240 2171 	movw	r1, #625	@ 0x271
 80053fa:	4638      	mov	r0, r7
 80053fc:	f7ff ff12 	bl	8005224 <__i2b>
 8005400:	2300      	movs	r3, #0
 8005402:	f8c8 0008 	str.w	r0, [r8, #8]
 8005406:	4604      	mov	r4, r0
 8005408:	6003      	str	r3, [r0, #0]
 800540a:	f04f 0900 	mov.w	r9, #0
 800540e:	07eb      	lsls	r3, r5, #31
 8005410:	d50a      	bpl.n	8005428 <__pow5mult+0x84>
 8005412:	4631      	mov	r1, r6
 8005414:	4622      	mov	r2, r4
 8005416:	4638      	mov	r0, r7
 8005418:	f7ff ff1a 	bl	8005250 <__multiply>
 800541c:	4631      	mov	r1, r6
 800541e:	4680      	mov	r8, r0
 8005420:	4638      	mov	r0, r7
 8005422:	f7ff fe4b 	bl	80050bc <_Bfree>
 8005426:	4646      	mov	r6, r8
 8005428:	106d      	asrs	r5, r5, #1
 800542a:	d00b      	beq.n	8005444 <__pow5mult+0xa0>
 800542c:	6820      	ldr	r0, [r4, #0]
 800542e:	b938      	cbnz	r0, 8005440 <__pow5mult+0x9c>
 8005430:	4622      	mov	r2, r4
 8005432:	4621      	mov	r1, r4
 8005434:	4638      	mov	r0, r7
 8005436:	f7ff ff0b 	bl	8005250 <__multiply>
 800543a:	6020      	str	r0, [r4, #0]
 800543c:	f8c0 9000 	str.w	r9, [r0]
 8005440:	4604      	mov	r4, r0
 8005442:	e7e4      	b.n	800540e <__pow5mult+0x6a>
 8005444:	4630      	mov	r0, r6
 8005446:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800544a:	bf00      	nop
 800544c:	0800627c 	.word	0x0800627c
 8005450:	080061a1 	.word	0x080061a1
 8005454:	08006221 	.word	0x08006221

08005458 <__lshift>:
 8005458:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800545c:	460c      	mov	r4, r1
 800545e:	6849      	ldr	r1, [r1, #4]
 8005460:	6923      	ldr	r3, [r4, #16]
 8005462:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8005466:	68a3      	ldr	r3, [r4, #8]
 8005468:	4607      	mov	r7, r0
 800546a:	4691      	mov	r9, r2
 800546c:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8005470:	f108 0601 	add.w	r6, r8, #1
 8005474:	42b3      	cmp	r3, r6
 8005476:	db0b      	blt.n	8005490 <__lshift+0x38>
 8005478:	4638      	mov	r0, r7
 800547a:	f7ff fddf 	bl	800503c <_Balloc>
 800547e:	4605      	mov	r5, r0
 8005480:	b948      	cbnz	r0, 8005496 <__lshift+0x3e>
 8005482:	4602      	mov	r2, r0
 8005484:	4b28      	ldr	r3, [pc, #160]	@ (8005528 <__lshift+0xd0>)
 8005486:	4829      	ldr	r0, [pc, #164]	@ (800552c <__lshift+0xd4>)
 8005488:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 800548c:	f000 f9f2 	bl	8005874 <__assert_func>
 8005490:	3101      	adds	r1, #1
 8005492:	005b      	lsls	r3, r3, #1
 8005494:	e7ee      	b.n	8005474 <__lshift+0x1c>
 8005496:	2300      	movs	r3, #0
 8005498:	f100 0114 	add.w	r1, r0, #20
 800549c:	f100 0210 	add.w	r2, r0, #16
 80054a0:	4618      	mov	r0, r3
 80054a2:	4553      	cmp	r3, sl
 80054a4:	db33      	blt.n	800550e <__lshift+0xb6>
 80054a6:	6920      	ldr	r0, [r4, #16]
 80054a8:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 80054ac:	f104 0314 	add.w	r3, r4, #20
 80054b0:	f019 091f 	ands.w	r9, r9, #31
 80054b4:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 80054b8:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 80054bc:	d02b      	beq.n	8005516 <__lshift+0xbe>
 80054be:	f1c9 0e20 	rsb	lr, r9, #32
 80054c2:	468a      	mov	sl, r1
 80054c4:	2200      	movs	r2, #0
 80054c6:	6818      	ldr	r0, [r3, #0]
 80054c8:	fa00 f009 	lsl.w	r0, r0, r9
 80054cc:	4310      	orrs	r0, r2
 80054ce:	f84a 0b04 	str.w	r0, [sl], #4
 80054d2:	f853 2b04 	ldr.w	r2, [r3], #4
 80054d6:	459c      	cmp	ip, r3
 80054d8:	fa22 f20e 	lsr.w	r2, r2, lr
 80054dc:	d8f3      	bhi.n	80054c6 <__lshift+0x6e>
 80054de:	ebac 0304 	sub.w	r3, ip, r4
 80054e2:	3b15      	subs	r3, #21
 80054e4:	f023 0303 	bic.w	r3, r3, #3
 80054e8:	3304      	adds	r3, #4
 80054ea:	f104 0015 	add.w	r0, r4, #21
 80054ee:	4584      	cmp	ip, r0
 80054f0:	bf38      	it	cc
 80054f2:	2304      	movcc	r3, #4
 80054f4:	50ca      	str	r2, [r1, r3]
 80054f6:	b10a      	cbz	r2, 80054fc <__lshift+0xa4>
 80054f8:	f108 0602 	add.w	r6, r8, #2
 80054fc:	3e01      	subs	r6, #1
 80054fe:	4638      	mov	r0, r7
 8005500:	612e      	str	r6, [r5, #16]
 8005502:	4621      	mov	r1, r4
 8005504:	f7ff fdda 	bl	80050bc <_Bfree>
 8005508:	4628      	mov	r0, r5
 800550a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800550e:	f842 0f04 	str.w	r0, [r2, #4]!
 8005512:	3301      	adds	r3, #1
 8005514:	e7c5      	b.n	80054a2 <__lshift+0x4a>
 8005516:	3904      	subs	r1, #4
 8005518:	f853 2b04 	ldr.w	r2, [r3], #4
 800551c:	f841 2f04 	str.w	r2, [r1, #4]!
 8005520:	459c      	cmp	ip, r3
 8005522:	d8f9      	bhi.n	8005518 <__lshift+0xc0>
 8005524:	e7ea      	b.n	80054fc <__lshift+0xa4>
 8005526:	bf00      	nop
 8005528:	08006210 	.word	0x08006210
 800552c:	08006221 	.word	0x08006221

08005530 <__mcmp>:
 8005530:	690a      	ldr	r2, [r1, #16]
 8005532:	4603      	mov	r3, r0
 8005534:	6900      	ldr	r0, [r0, #16]
 8005536:	1a80      	subs	r0, r0, r2
 8005538:	b530      	push	{r4, r5, lr}
 800553a:	d10e      	bne.n	800555a <__mcmp+0x2a>
 800553c:	3314      	adds	r3, #20
 800553e:	3114      	adds	r1, #20
 8005540:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8005544:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8005548:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 800554c:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8005550:	4295      	cmp	r5, r2
 8005552:	d003      	beq.n	800555c <__mcmp+0x2c>
 8005554:	d205      	bcs.n	8005562 <__mcmp+0x32>
 8005556:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800555a:	bd30      	pop	{r4, r5, pc}
 800555c:	42a3      	cmp	r3, r4
 800555e:	d3f3      	bcc.n	8005548 <__mcmp+0x18>
 8005560:	e7fb      	b.n	800555a <__mcmp+0x2a>
 8005562:	2001      	movs	r0, #1
 8005564:	e7f9      	b.n	800555a <__mcmp+0x2a>
	...

08005568 <__mdiff>:
 8005568:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800556c:	4689      	mov	r9, r1
 800556e:	4606      	mov	r6, r0
 8005570:	4611      	mov	r1, r2
 8005572:	4648      	mov	r0, r9
 8005574:	4614      	mov	r4, r2
 8005576:	f7ff ffdb 	bl	8005530 <__mcmp>
 800557a:	1e05      	subs	r5, r0, #0
 800557c:	d112      	bne.n	80055a4 <__mdiff+0x3c>
 800557e:	4629      	mov	r1, r5
 8005580:	4630      	mov	r0, r6
 8005582:	f7ff fd5b 	bl	800503c <_Balloc>
 8005586:	4602      	mov	r2, r0
 8005588:	b928      	cbnz	r0, 8005596 <__mdiff+0x2e>
 800558a:	4b3f      	ldr	r3, [pc, #252]	@ (8005688 <__mdiff+0x120>)
 800558c:	f240 2137 	movw	r1, #567	@ 0x237
 8005590:	483e      	ldr	r0, [pc, #248]	@ (800568c <__mdiff+0x124>)
 8005592:	f000 f96f 	bl	8005874 <__assert_func>
 8005596:	2301      	movs	r3, #1
 8005598:	e9c0 3504 	strd	r3, r5, [r0, #16]
 800559c:	4610      	mov	r0, r2
 800559e:	b003      	add	sp, #12
 80055a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80055a4:	bfbc      	itt	lt
 80055a6:	464b      	movlt	r3, r9
 80055a8:	46a1      	movlt	r9, r4
 80055aa:	4630      	mov	r0, r6
 80055ac:	f8d9 1004 	ldr.w	r1, [r9, #4]
 80055b0:	bfba      	itte	lt
 80055b2:	461c      	movlt	r4, r3
 80055b4:	2501      	movlt	r5, #1
 80055b6:	2500      	movge	r5, #0
 80055b8:	f7ff fd40 	bl	800503c <_Balloc>
 80055bc:	4602      	mov	r2, r0
 80055be:	b918      	cbnz	r0, 80055c8 <__mdiff+0x60>
 80055c0:	4b31      	ldr	r3, [pc, #196]	@ (8005688 <__mdiff+0x120>)
 80055c2:	f240 2145 	movw	r1, #581	@ 0x245
 80055c6:	e7e3      	b.n	8005590 <__mdiff+0x28>
 80055c8:	f8d9 7010 	ldr.w	r7, [r9, #16]
 80055cc:	6926      	ldr	r6, [r4, #16]
 80055ce:	60c5      	str	r5, [r0, #12]
 80055d0:	f109 0310 	add.w	r3, r9, #16
 80055d4:	f109 0514 	add.w	r5, r9, #20
 80055d8:	f104 0e14 	add.w	lr, r4, #20
 80055dc:	f100 0b14 	add.w	fp, r0, #20
 80055e0:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 80055e4:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 80055e8:	9301      	str	r3, [sp, #4]
 80055ea:	46d9      	mov	r9, fp
 80055ec:	f04f 0c00 	mov.w	ip, #0
 80055f0:	9b01      	ldr	r3, [sp, #4]
 80055f2:	f85e 0b04 	ldr.w	r0, [lr], #4
 80055f6:	f853 af04 	ldr.w	sl, [r3, #4]!
 80055fa:	9301      	str	r3, [sp, #4]
 80055fc:	fa1f f38a 	uxth.w	r3, sl
 8005600:	4619      	mov	r1, r3
 8005602:	b283      	uxth	r3, r0
 8005604:	1acb      	subs	r3, r1, r3
 8005606:	0c00      	lsrs	r0, r0, #16
 8005608:	4463      	add	r3, ip
 800560a:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 800560e:	eb00 4023 	add.w	r0, r0, r3, asr #16
 8005612:	b29b      	uxth	r3, r3
 8005614:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8005618:	4576      	cmp	r6, lr
 800561a:	f849 3b04 	str.w	r3, [r9], #4
 800561e:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8005622:	d8e5      	bhi.n	80055f0 <__mdiff+0x88>
 8005624:	1b33      	subs	r3, r6, r4
 8005626:	3b15      	subs	r3, #21
 8005628:	f023 0303 	bic.w	r3, r3, #3
 800562c:	3415      	adds	r4, #21
 800562e:	3304      	adds	r3, #4
 8005630:	42a6      	cmp	r6, r4
 8005632:	bf38      	it	cc
 8005634:	2304      	movcc	r3, #4
 8005636:	441d      	add	r5, r3
 8005638:	445b      	add	r3, fp
 800563a:	461e      	mov	r6, r3
 800563c:	462c      	mov	r4, r5
 800563e:	4544      	cmp	r4, r8
 8005640:	d30e      	bcc.n	8005660 <__mdiff+0xf8>
 8005642:	f108 0103 	add.w	r1, r8, #3
 8005646:	1b49      	subs	r1, r1, r5
 8005648:	f021 0103 	bic.w	r1, r1, #3
 800564c:	3d03      	subs	r5, #3
 800564e:	45a8      	cmp	r8, r5
 8005650:	bf38      	it	cc
 8005652:	2100      	movcc	r1, #0
 8005654:	440b      	add	r3, r1
 8005656:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 800565a:	b191      	cbz	r1, 8005682 <__mdiff+0x11a>
 800565c:	6117      	str	r7, [r2, #16]
 800565e:	e79d      	b.n	800559c <__mdiff+0x34>
 8005660:	f854 1b04 	ldr.w	r1, [r4], #4
 8005664:	46e6      	mov	lr, ip
 8005666:	0c08      	lsrs	r0, r1, #16
 8005668:	fa1c fc81 	uxtah	ip, ip, r1
 800566c:	4471      	add	r1, lr
 800566e:	eb00 402c 	add.w	r0, r0, ip, asr #16
 8005672:	b289      	uxth	r1, r1
 8005674:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8005678:	f846 1b04 	str.w	r1, [r6], #4
 800567c:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8005680:	e7dd      	b.n	800563e <__mdiff+0xd6>
 8005682:	3f01      	subs	r7, #1
 8005684:	e7e7      	b.n	8005656 <__mdiff+0xee>
 8005686:	bf00      	nop
 8005688:	08006210 	.word	0x08006210
 800568c:	08006221 	.word	0x08006221

08005690 <__d2b>:
 8005690:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8005694:	460f      	mov	r7, r1
 8005696:	2101      	movs	r1, #1
 8005698:	ec59 8b10 	vmov	r8, r9, d0
 800569c:	4616      	mov	r6, r2
 800569e:	f7ff fccd 	bl	800503c <_Balloc>
 80056a2:	4604      	mov	r4, r0
 80056a4:	b930      	cbnz	r0, 80056b4 <__d2b+0x24>
 80056a6:	4602      	mov	r2, r0
 80056a8:	4b23      	ldr	r3, [pc, #140]	@ (8005738 <__d2b+0xa8>)
 80056aa:	4824      	ldr	r0, [pc, #144]	@ (800573c <__d2b+0xac>)
 80056ac:	f240 310f 	movw	r1, #783	@ 0x30f
 80056b0:	f000 f8e0 	bl	8005874 <__assert_func>
 80056b4:	f3c9 550a 	ubfx	r5, r9, #20, #11
 80056b8:	f3c9 0313 	ubfx	r3, r9, #0, #20
 80056bc:	b10d      	cbz	r5, 80056c2 <__d2b+0x32>
 80056be:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80056c2:	9301      	str	r3, [sp, #4]
 80056c4:	f1b8 0300 	subs.w	r3, r8, #0
 80056c8:	d023      	beq.n	8005712 <__d2b+0x82>
 80056ca:	4668      	mov	r0, sp
 80056cc:	9300      	str	r3, [sp, #0]
 80056ce:	f7ff fd7c 	bl	80051ca <__lo0bits>
 80056d2:	e9dd 1200 	ldrd	r1, r2, [sp]
 80056d6:	b1d0      	cbz	r0, 800570e <__d2b+0x7e>
 80056d8:	f1c0 0320 	rsb	r3, r0, #32
 80056dc:	fa02 f303 	lsl.w	r3, r2, r3
 80056e0:	430b      	orrs	r3, r1
 80056e2:	40c2      	lsrs	r2, r0
 80056e4:	6163      	str	r3, [r4, #20]
 80056e6:	9201      	str	r2, [sp, #4]
 80056e8:	9b01      	ldr	r3, [sp, #4]
 80056ea:	61a3      	str	r3, [r4, #24]
 80056ec:	2b00      	cmp	r3, #0
 80056ee:	bf0c      	ite	eq
 80056f0:	2201      	moveq	r2, #1
 80056f2:	2202      	movne	r2, #2
 80056f4:	6122      	str	r2, [r4, #16]
 80056f6:	b1a5      	cbz	r5, 8005722 <__d2b+0x92>
 80056f8:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 80056fc:	4405      	add	r5, r0
 80056fe:	603d      	str	r5, [r7, #0]
 8005700:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 8005704:	6030      	str	r0, [r6, #0]
 8005706:	4620      	mov	r0, r4
 8005708:	b003      	add	sp, #12
 800570a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800570e:	6161      	str	r1, [r4, #20]
 8005710:	e7ea      	b.n	80056e8 <__d2b+0x58>
 8005712:	a801      	add	r0, sp, #4
 8005714:	f7ff fd59 	bl	80051ca <__lo0bits>
 8005718:	9b01      	ldr	r3, [sp, #4]
 800571a:	6163      	str	r3, [r4, #20]
 800571c:	3020      	adds	r0, #32
 800571e:	2201      	movs	r2, #1
 8005720:	e7e8      	b.n	80056f4 <__d2b+0x64>
 8005722:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8005726:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 800572a:	6038      	str	r0, [r7, #0]
 800572c:	6918      	ldr	r0, [r3, #16]
 800572e:	f7ff fd2d 	bl	800518c <__hi0bits>
 8005732:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8005736:	e7e5      	b.n	8005704 <__d2b+0x74>
 8005738:	08006210 	.word	0x08006210
 800573c:	08006221 	.word	0x08006221

08005740 <__sread>:
 8005740:	b510      	push	{r4, lr}
 8005742:	460c      	mov	r4, r1
 8005744:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005748:	f000 f860 	bl	800580c <_read_r>
 800574c:	2800      	cmp	r0, #0
 800574e:	bfab      	itete	ge
 8005750:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8005752:	89a3      	ldrhlt	r3, [r4, #12]
 8005754:	181b      	addge	r3, r3, r0
 8005756:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 800575a:	bfac      	ite	ge
 800575c:	6563      	strge	r3, [r4, #84]	@ 0x54
 800575e:	81a3      	strhlt	r3, [r4, #12]
 8005760:	bd10      	pop	{r4, pc}

08005762 <__swrite>:
 8005762:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005766:	461f      	mov	r7, r3
 8005768:	898b      	ldrh	r3, [r1, #12]
 800576a:	05db      	lsls	r3, r3, #23
 800576c:	4605      	mov	r5, r0
 800576e:	460c      	mov	r4, r1
 8005770:	4616      	mov	r6, r2
 8005772:	d505      	bpl.n	8005780 <__swrite+0x1e>
 8005774:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005778:	2302      	movs	r3, #2
 800577a:	2200      	movs	r2, #0
 800577c:	f000 f834 	bl	80057e8 <_lseek_r>
 8005780:	89a3      	ldrh	r3, [r4, #12]
 8005782:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8005786:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800578a:	81a3      	strh	r3, [r4, #12]
 800578c:	4632      	mov	r2, r6
 800578e:	463b      	mov	r3, r7
 8005790:	4628      	mov	r0, r5
 8005792:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8005796:	f000 b85b 	b.w	8005850 <_write_r>

0800579a <__sseek>:
 800579a:	b510      	push	{r4, lr}
 800579c:	460c      	mov	r4, r1
 800579e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80057a2:	f000 f821 	bl	80057e8 <_lseek_r>
 80057a6:	1c43      	adds	r3, r0, #1
 80057a8:	89a3      	ldrh	r3, [r4, #12]
 80057aa:	bf15      	itete	ne
 80057ac:	6560      	strne	r0, [r4, #84]	@ 0x54
 80057ae:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 80057b2:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 80057b6:	81a3      	strheq	r3, [r4, #12]
 80057b8:	bf18      	it	ne
 80057ba:	81a3      	strhne	r3, [r4, #12]
 80057bc:	bd10      	pop	{r4, pc}

080057be <__sclose>:
 80057be:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80057c2:	f000 b801 	b.w	80057c8 <_close_r>
	...

080057c8 <_close_r>:
 80057c8:	b538      	push	{r3, r4, r5, lr}
 80057ca:	4d06      	ldr	r5, [pc, #24]	@ (80057e4 <_close_r+0x1c>)
 80057cc:	2300      	movs	r3, #0
 80057ce:	4604      	mov	r4, r0
 80057d0:	4608      	mov	r0, r1
 80057d2:	602b      	str	r3, [r5, #0]
 80057d4:	f7fb fe97 	bl	8001506 <_close>
 80057d8:	1c43      	adds	r3, r0, #1
 80057da:	d102      	bne.n	80057e2 <_close_r+0x1a>
 80057dc:	682b      	ldr	r3, [r5, #0]
 80057de:	b103      	cbz	r3, 80057e2 <_close_r+0x1a>
 80057e0:	6023      	str	r3, [r4, #0]
 80057e2:	bd38      	pop	{r3, r4, r5, pc}
 80057e4:	20000340 	.word	0x20000340

080057e8 <_lseek_r>:
 80057e8:	b538      	push	{r3, r4, r5, lr}
 80057ea:	4d07      	ldr	r5, [pc, #28]	@ (8005808 <_lseek_r+0x20>)
 80057ec:	4604      	mov	r4, r0
 80057ee:	4608      	mov	r0, r1
 80057f0:	4611      	mov	r1, r2
 80057f2:	2200      	movs	r2, #0
 80057f4:	602a      	str	r2, [r5, #0]
 80057f6:	461a      	mov	r2, r3
 80057f8:	f7fb feac 	bl	8001554 <_lseek>
 80057fc:	1c43      	adds	r3, r0, #1
 80057fe:	d102      	bne.n	8005806 <_lseek_r+0x1e>
 8005800:	682b      	ldr	r3, [r5, #0]
 8005802:	b103      	cbz	r3, 8005806 <_lseek_r+0x1e>
 8005804:	6023      	str	r3, [r4, #0]
 8005806:	bd38      	pop	{r3, r4, r5, pc}
 8005808:	20000340 	.word	0x20000340

0800580c <_read_r>:
 800580c:	b538      	push	{r3, r4, r5, lr}
 800580e:	4d07      	ldr	r5, [pc, #28]	@ (800582c <_read_r+0x20>)
 8005810:	4604      	mov	r4, r0
 8005812:	4608      	mov	r0, r1
 8005814:	4611      	mov	r1, r2
 8005816:	2200      	movs	r2, #0
 8005818:	602a      	str	r2, [r5, #0]
 800581a:	461a      	mov	r2, r3
 800581c:	f7fb fe3a 	bl	8001494 <_read>
 8005820:	1c43      	adds	r3, r0, #1
 8005822:	d102      	bne.n	800582a <_read_r+0x1e>
 8005824:	682b      	ldr	r3, [r5, #0]
 8005826:	b103      	cbz	r3, 800582a <_read_r+0x1e>
 8005828:	6023      	str	r3, [r4, #0]
 800582a:	bd38      	pop	{r3, r4, r5, pc}
 800582c:	20000340 	.word	0x20000340

08005830 <_sbrk_r>:
 8005830:	b538      	push	{r3, r4, r5, lr}
 8005832:	4d06      	ldr	r5, [pc, #24]	@ (800584c <_sbrk_r+0x1c>)
 8005834:	2300      	movs	r3, #0
 8005836:	4604      	mov	r4, r0
 8005838:	4608      	mov	r0, r1
 800583a:	602b      	str	r3, [r5, #0]
 800583c:	f7fb fe98 	bl	8001570 <_sbrk>
 8005840:	1c43      	adds	r3, r0, #1
 8005842:	d102      	bne.n	800584a <_sbrk_r+0x1a>
 8005844:	682b      	ldr	r3, [r5, #0]
 8005846:	b103      	cbz	r3, 800584a <_sbrk_r+0x1a>
 8005848:	6023      	str	r3, [r4, #0]
 800584a:	bd38      	pop	{r3, r4, r5, pc}
 800584c:	20000340 	.word	0x20000340

08005850 <_write_r>:
 8005850:	b538      	push	{r3, r4, r5, lr}
 8005852:	4d07      	ldr	r5, [pc, #28]	@ (8005870 <_write_r+0x20>)
 8005854:	4604      	mov	r4, r0
 8005856:	4608      	mov	r0, r1
 8005858:	4611      	mov	r1, r2
 800585a:	2200      	movs	r2, #0
 800585c:	602a      	str	r2, [r5, #0]
 800585e:	461a      	mov	r2, r3
 8005860:	f7fb fe35 	bl	80014ce <_write>
 8005864:	1c43      	adds	r3, r0, #1
 8005866:	d102      	bne.n	800586e <_write_r+0x1e>
 8005868:	682b      	ldr	r3, [r5, #0]
 800586a:	b103      	cbz	r3, 800586e <_write_r+0x1e>
 800586c:	6023      	str	r3, [r4, #0]
 800586e:	bd38      	pop	{r3, r4, r5, pc}
 8005870:	20000340 	.word	0x20000340

08005874 <__assert_func>:
 8005874:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8005876:	4614      	mov	r4, r2
 8005878:	461a      	mov	r2, r3
 800587a:	4b09      	ldr	r3, [pc, #36]	@ (80058a0 <__assert_func+0x2c>)
 800587c:	681b      	ldr	r3, [r3, #0]
 800587e:	4605      	mov	r5, r0
 8005880:	68d8      	ldr	r0, [r3, #12]
 8005882:	b954      	cbnz	r4, 800589a <__assert_func+0x26>
 8005884:	4b07      	ldr	r3, [pc, #28]	@ (80058a4 <__assert_func+0x30>)
 8005886:	461c      	mov	r4, r3
 8005888:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800588c:	9100      	str	r1, [sp, #0]
 800588e:	462b      	mov	r3, r5
 8005890:	4905      	ldr	r1, [pc, #20]	@ (80058a8 <__assert_func+0x34>)
 8005892:	f000 f87d 	bl	8005990 <fiprintf>
 8005896:	f000 f89a 	bl	80059ce <abort>
 800589a:	4b04      	ldr	r3, [pc, #16]	@ (80058ac <__assert_func+0x38>)
 800589c:	e7f4      	b.n	8005888 <__assert_func+0x14>
 800589e:	bf00      	nop
 80058a0:	20000018 	.word	0x20000018
 80058a4:	080064be 	.word	0x080064be
 80058a8:	08006490 	.word	0x08006490
 80058ac:	08006483 	.word	0x08006483

080058b0 <_calloc_r>:
 80058b0:	b570      	push	{r4, r5, r6, lr}
 80058b2:	fba1 5402 	umull	r5, r4, r1, r2
 80058b6:	b93c      	cbnz	r4, 80058c8 <_calloc_r+0x18>
 80058b8:	4629      	mov	r1, r5
 80058ba:	f7ff fa87 	bl	8004dcc <_malloc_r>
 80058be:	4606      	mov	r6, r0
 80058c0:	b928      	cbnz	r0, 80058ce <_calloc_r+0x1e>
 80058c2:	2600      	movs	r6, #0
 80058c4:	4630      	mov	r0, r6
 80058c6:	bd70      	pop	{r4, r5, r6, pc}
 80058c8:	220c      	movs	r2, #12
 80058ca:	6002      	str	r2, [r0, #0]
 80058cc:	e7f9      	b.n	80058c2 <_calloc_r+0x12>
 80058ce:	462a      	mov	r2, r5
 80058d0:	4621      	mov	r1, r4
 80058d2:	f7fe fbbd 	bl	8004050 <memset>
 80058d6:	e7f5      	b.n	80058c4 <_calloc_r+0x14>

080058d8 <_free_r>:
 80058d8:	b538      	push	{r3, r4, r5, lr}
 80058da:	4605      	mov	r5, r0
 80058dc:	2900      	cmp	r1, #0
 80058de:	d041      	beq.n	8005964 <_free_r+0x8c>
 80058e0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80058e4:	1f0c      	subs	r4, r1, #4
 80058e6:	2b00      	cmp	r3, #0
 80058e8:	bfb8      	it	lt
 80058ea:	18e4      	addlt	r4, r4, r3
 80058ec:	f7ff fb9a 	bl	8005024 <__malloc_lock>
 80058f0:	4a1d      	ldr	r2, [pc, #116]	@ (8005968 <_free_r+0x90>)
 80058f2:	6813      	ldr	r3, [r2, #0]
 80058f4:	b933      	cbnz	r3, 8005904 <_free_r+0x2c>
 80058f6:	6063      	str	r3, [r4, #4]
 80058f8:	6014      	str	r4, [r2, #0]
 80058fa:	4628      	mov	r0, r5
 80058fc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005900:	f7ff bb96 	b.w	8005030 <__malloc_unlock>
 8005904:	42a3      	cmp	r3, r4
 8005906:	d908      	bls.n	800591a <_free_r+0x42>
 8005908:	6820      	ldr	r0, [r4, #0]
 800590a:	1821      	adds	r1, r4, r0
 800590c:	428b      	cmp	r3, r1
 800590e:	bf01      	itttt	eq
 8005910:	6819      	ldreq	r1, [r3, #0]
 8005912:	685b      	ldreq	r3, [r3, #4]
 8005914:	1809      	addeq	r1, r1, r0
 8005916:	6021      	streq	r1, [r4, #0]
 8005918:	e7ed      	b.n	80058f6 <_free_r+0x1e>
 800591a:	461a      	mov	r2, r3
 800591c:	685b      	ldr	r3, [r3, #4]
 800591e:	b10b      	cbz	r3, 8005924 <_free_r+0x4c>
 8005920:	42a3      	cmp	r3, r4
 8005922:	d9fa      	bls.n	800591a <_free_r+0x42>
 8005924:	6811      	ldr	r1, [r2, #0]
 8005926:	1850      	adds	r0, r2, r1
 8005928:	42a0      	cmp	r0, r4
 800592a:	d10b      	bne.n	8005944 <_free_r+0x6c>
 800592c:	6820      	ldr	r0, [r4, #0]
 800592e:	4401      	add	r1, r0
 8005930:	1850      	adds	r0, r2, r1
 8005932:	4283      	cmp	r3, r0
 8005934:	6011      	str	r1, [r2, #0]
 8005936:	d1e0      	bne.n	80058fa <_free_r+0x22>
 8005938:	6818      	ldr	r0, [r3, #0]
 800593a:	685b      	ldr	r3, [r3, #4]
 800593c:	6053      	str	r3, [r2, #4]
 800593e:	4408      	add	r0, r1
 8005940:	6010      	str	r0, [r2, #0]
 8005942:	e7da      	b.n	80058fa <_free_r+0x22>
 8005944:	d902      	bls.n	800594c <_free_r+0x74>
 8005946:	230c      	movs	r3, #12
 8005948:	602b      	str	r3, [r5, #0]
 800594a:	e7d6      	b.n	80058fa <_free_r+0x22>
 800594c:	6820      	ldr	r0, [r4, #0]
 800594e:	1821      	adds	r1, r4, r0
 8005950:	428b      	cmp	r3, r1
 8005952:	bf04      	itt	eq
 8005954:	6819      	ldreq	r1, [r3, #0]
 8005956:	685b      	ldreq	r3, [r3, #4]
 8005958:	6063      	str	r3, [r4, #4]
 800595a:	bf04      	itt	eq
 800595c:	1809      	addeq	r1, r1, r0
 800595e:	6021      	streq	r1, [r4, #0]
 8005960:	6054      	str	r4, [r2, #4]
 8005962:	e7ca      	b.n	80058fa <_free_r+0x22>
 8005964:	bd38      	pop	{r3, r4, r5, pc}
 8005966:	bf00      	nop
 8005968:	2000033c 	.word	0x2000033c

0800596c <__ascii_mbtowc>:
 800596c:	b082      	sub	sp, #8
 800596e:	b901      	cbnz	r1, 8005972 <__ascii_mbtowc+0x6>
 8005970:	a901      	add	r1, sp, #4
 8005972:	b142      	cbz	r2, 8005986 <__ascii_mbtowc+0x1a>
 8005974:	b14b      	cbz	r3, 800598a <__ascii_mbtowc+0x1e>
 8005976:	7813      	ldrb	r3, [r2, #0]
 8005978:	600b      	str	r3, [r1, #0]
 800597a:	7812      	ldrb	r2, [r2, #0]
 800597c:	1e10      	subs	r0, r2, #0
 800597e:	bf18      	it	ne
 8005980:	2001      	movne	r0, #1
 8005982:	b002      	add	sp, #8
 8005984:	4770      	bx	lr
 8005986:	4610      	mov	r0, r2
 8005988:	e7fb      	b.n	8005982 <__ascii_mbtowc+0x16>
 800598a:	f06f 0001 	mvn.w	r0, #1
 800598e:	e7f8      	b.n	8005982 <__ascii_mbtowc+0x16>

08005990 <fiprintf>:
 8005990:	b40e      	push	{r1, r2, r3}
 8005992:	b503      	push	{r0, r1, lr}
 8005994:	4601      	mov	r1, r0
 8005996:	ab03      	add	r3, sp, #12
 8005998:	4805      	ldr	r0, [pc, #20]	@ (80059b0 <fiprintf+0x20>)
 800599a:	f853 2b04 	ldr.w	r2, [r3], #4
 800599e:	6800      	ldr	r0, [r0, #0]
 80059a0:	9301      	str	r3, [sp, #4]
 80059a2:	f000 f845 	bl	8005a30 <_vfiprintf_r>
 80059a6:	b002      	add	sp, #8
 80059a8:	f85d eb04 	ldr.w	lr, [sp], #4
 80059ac:	b003      	add	sp, #12
 80059ae:	4770      	bx	lr
 80059b0:	20000018 	.word	0x20000018

080059b4 <__ascii_wctomb>:
 80059b4:	4603      	mov	r3, r0
 80059b6:	4608      	mov	r0, r1
 80059b8:	b141      	cbz	r1, 80059cc <__ascii_wctomb+0x18>
 80059ba:	2aff      	cmp	r2, #255	@ 0xff
 80059bc:	d904      	bls.n	80059c8 <__ascii_wctomb+0x14>
 80059be:	228a      	movs	r2, #138	@ 0x8a
 80059c0:	601a      	str	r2, [r3, #0]
 80059c2:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80059c6:	4770      	bx	lr
 80059c8:	700a      	strb	r2, [r1, #0]
 80059ca:	2001      	movs	r0, #1
 80059cc:	4770      	bx	lr

080059ce <abort>:
 80059ce:	b508      	push	{r3, lr}
 80059d0:	2006      	movs	r0, #6
 80059d2:	f000 fa85 	bl	8005ee0 <raise>
 80059d6:	2001      	movs	r0, #1
 80059d8:	f7fb fd51 	bl	800147e <_exit>

080059dc <__sfputc_r>:
 80059dc:	6893      	ldr	r3, [r2, #8]
 80059de:	3b01      	subs	r3, #1
 80059e0:	2b00      	cmp	r3, #0
 80059e2:	b410      	push	{r4}
 80059e4:	6093      	str	r3, [r2, #8]
 80059e6:	da08      	bge.n	80059fa <__sfputc_r+0x1e>
 80059e8:	6994      	ldr	r4, [r2, #24]
 80059ea:	42a3      	cmp	r3, r4
 80059ec:	db01      	blt.n	80059f2 <__sfputc_r+0x16>
 80059ee:	290a      	cmp	r1, #10
 80059f0:	d103      	bne.n	80059fa <__sfputc_r+0x1e>
 80059f2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80059f6:	f000 b933 	b.w	8005c60 <__swbuf_r>
 80059fa:	6813      	ldr	r3, [r2, #0]
 80059fc:	1c58      	adds	r0, r3, #1
 80059fe:	6010      	str	r0, [r2, #0]
 8005a00:	7019      	strb	r1, [r3, #0]
 8005a02:	4608      	mov	r0, r1
 8005a04:	f85d 4b04 	ldr.w	r4, [sp], #4
 8005a08:	4770      	bx	lr

08005a0a <__sfputs_r>:
 8005a0a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005a0c:	4606      	mov	r6, r0
 8005a0e:	460f      	mov	r7, r1
 8005a10:	4614      	mov	r4, r2
 8005a12:	18d5      	adds	r5, r2, r3
 8005a14:	42ac      	cmp	r4, r5
 8005a16:	d101      	bne.n	8005a1c <__sfputs_r+0x12>
 8005a18:	2000      	movs	r0, #0
 8005a1a:	e007      	b.n	8005a2c <__sfputs_r+0x22>
 8005a1c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005a20:	463a      	mov	r2, r7
 8005a22:	4630      	mov	r0, r6
 8005a24:	f7ff ffda 	bl	80059dc <__sfputc_r>
 8005a28:	1c43      	adds	r3, r0, #1
 8005a2a:	d1f3      	bne.n	8005a14 <__sfputs_r+0xa>
 8005a2c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08005a30 <_vfiprintf_r>:
 8005a30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005a34:	460d      	mov	r5, r1
 8005a36:	b09d      	sub	sp, #116	@ 0x74
 8005a38:	4614      	mov	r4, r2
 8005a3a:	4698      	mov	r8, r3
 8005a3c:	4606      	mov	r6, r0
 8005a3e:	b118      	cbz	r0, 8005a48 <_vfiprintf_r+0x18>
 8005a40:	6a03      	ldr	r3, [r0, #32]
 8005a42:	b90b      	cbnz	r3, 8005a48 <_vfiprintf_r+0x18>
 8005a44:	f7fe face 	bl	8003fe4 <__sinit>
 8005a48:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8005a4a:	07d9      	lsls	r1, r3, #31
 8005a4c:	d405      	bmi.n	8005a5a <_vfiprintf_r+0x2a>
 8005a4e:	89ab      	ldrh	r3, [r5, #12]
 8005a50:	059a      	lsls	r2, r3, #22
 8005a52:	d402      	bmi.n	8005a5a <_vfiprintf_r+0x2a>
 8005a54:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8005a56:	f7fe fb32 	bl	80040be <__retarget_lock_acquire_recursive>
 8005a5a:	89ab      	ldrh	r3, [r5, #12]
 8005a5c:	071b      	lsls	r3, r3, #28
 8005a5e:	d501      	bpl.n	8005a64 <_vfiprintf_r+0x34>
 8005a60:	692b      	ldr	r3, [r5, #16]
 8005a62:	b99b      	cbnz	r3, 8005a8c <_vfiprintf_r+0x5c>
 8005a64:	4629      	mov	r1, r5
 8005a66:	4630      	mov	r0, r6
 8005a68:	f000 f938 	bl	8005cdc <__swsetup_r>
 8005a6c:	b170      	cbz	r0, 8005a8c <_vfiprintf_r+0x5c>
 8005a6e:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8005a70:	07dc      	lsls	r4, r3, #31
 8005a72:	d504      	bpl.n	8005a7e <_vfiprintf_r+0x4e>
 8005a74:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8005a78:	b01d      	add	sp, #116	@ 0x74
 8005a7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005a7e:	89ab      	ldrh	r3, [r5, #12]
 8005a80:	0598      	lsls	r0, r3, #22
 8005a82:	d4f7      	bmi.n	8005a74 <_vfiprintf_r+0x44>
 8005a84:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8005a86:	f7fe fb1b 	bl	80040c0 <__retarget_lock_release_recursive>
 8005a8a:	e7f3      	b.n	8005a74 <_vfiprintf_r+0x44>
 8005a8c:	2300      	movs	r3, #0
 8005a8e:	9309      	str	r3, [sp, #36]	@ 0x24
 8005a90:	2320      	movs	r3, #32
 8005a92:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8005a96:	f8cd 800c 	str.w	r8, [sp, #12]
 8005a9a:	2330      	movs	r3, #48	@ 0x30
 8005a9c:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8005c4c <_vfiprintf_r+0x21c>
 8005aa0:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8005aa4:	f04f 0901 	mov.w	r9, #1
 8005aa8:	4623      	mov	r3, r4
 8005aaa:	469a      	mov	sl, r3
 8005aac:	f813 2b01 	ldrb.w	r2, [r3], #1
 8005ab0:	b10a      	cbz	r2, 8005ab6 <_vfiprintf_r+0x86>
 8005ab2:	2a25      	cmp	r2, #37	@ 0x25
 8005ab4:	d1f9      	bne.n	8005aaa <_vfiprintf_r+0x7a>
 8005ab6:	ebba 0b04 	subs.w	fp, sl, r4
 8005aba:	d00b      	beq.n	8005ad4 <_vfiprintf_r+0xa4>
 8005abc:	465b      	mov	r3, fp
 8005abe:	4622      	mov	r2, r4
 8005ac0:	4629      	mov	r1, r5
 8005ac2:	4630      	mov	r0, r6
 8005ac4:	f7ff ffa1 	bl	8005a0a <__sfputs_r>
 8005ac8:	3001      	adds	r0, #1
 8005aca:	f000 80a7 	beq.w	8005c1c <_vfiprintf_r+0x1ec>
 8005ace:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8005ad0:	445a      	add	r2, fp
 8005ad2:	9209      	str	r2, [sp, #36]	@ 0x24
 8005ad4:	f89a 3000 	ldrb.w	r3, [sl]
 8005ad8:	2b00      	cmp	r3, #0
 8005ada:	f000 809f 	beq.w	8005c1c <_vfiprintf_r+0x1ec>
 8005ade:	2300      	movs	r3, #0
 8005ae0:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8005ae4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8005ae8:	f10a 0a01 	add.w	sl, sl, #1
 8005aec:	9304      	str	r3, [sp, #16]
 8005aee:	9307      	str	r3, [sp, #28]
 8005af0:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8005af4:	931a      	str	r3, [sp, #104]	@ 0x68
 8005af6:	4654      	mov	r4, sl
 8005af8:	2205      	movs	r2, #5
 8005afa:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005afe:	4853      	ldr	r0, [pc, #332]	@ (8005c4c <_vfiprintf_r+0x21c>)
 8005b00:	f7fa fb7e 	bl	8000200 <memchr>
 8005b04:	9a04      	ldr	r2, [sp, #16]
 8005b06:	b9d8      	cbnz	r0, 8005b40 <_vfiprintf_r+0x110>
 8005b08:	06d1      	lsls	r1, r2, #27
 8005b0a:	bf44      	itt	mi
 8005b0c:	2320      	movmi	r3, #32
 8005b0e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8005b12:	0713      	lsls	r3, r2, #28
 8005b14:	bf44      	itt	mi
 8005b16:	232b      	movmi	r3, #43	@ 0x2b
 8005b18:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8005b1c:	f89a 3000 	ldrb.w	r3, [sl]
 8005b20:	2b2a      	cmp	r3, #42	@ 0x2a
 8005b22:	d015      	beq.n	8005b50 <_vfiprintf_r+0x120>
 8005b24:	9a07      	ldr	r2, [sp, #28]
 8005b26:	4654      	mov	r4, sl
 8005b28:	2000      	movs	r0, #0
 8005b2a:	f04f 0c0a 	mov.w	ip, #10
 8005b2e:	4621      	mov	r1, r4
 8005b30:	f811 3b01 	ldrb.w	r3, [r1], #1
 8005b34:	3b30      	subs	r3, #48	@ 0x30
 8005b36:	2b09      	cmp	r3, #9
 8005b38:	d94b      	bls.n	8005bd2 <_vfiprintf_r+0x1a2>
 8005b3a:	b1b0      	cbz	r0, 8005b6a <_vfiprintf_r+0x13a>
 8005b3c:	9207      	str	r2, [sp, #28]
 8005b3e:	e014      	b.n	8005b6a <_vfiprintf_r+0x13a>
 8005b40:	eba0 0308 	sub.w	r3, r0, r8
 8005b44:	fa09 f303 	lsl.w	r3, r9, r3
 8005b48:	4313      	orrs	r3, r2
 8005b4a:	9304      	str	r3, [sp, #16]
 8005b4c:	46a2      	mov	sl, r4
 8005b4e:	e7d2      	b.n	8005af6 <_vfiprintf_r+0xc6>
 8005b50:	9b03      	ldr	r3, [sp, #12]
 8005b52:	1d19      	adds	r1, r3, #4
 8005b54:	681b      	ldr	r3, [r3, #0]
 8005b56:	9103      	str	r1, [sp, #12]
 8005b58:	2b00      	cmp	r3, #0
 8005b5a:	bfbb      	ittet	lt
 8005b5c:	425b      	neglt	r3, r3
 8005b5e:	f042 0202 	orrlt.w	r2, r2, #2
 8005b62:	9307      	strge	r3, [sp, #28]
 8005b64:	9307      	strlt	r3, [sp, #28]
 8005b66:	bfb8      	it	lt
 8005b68:	9204      	strlt	r2, [sp, #16]
 8005b6a:	7823      	ldrb	r3, [r4, #0]
 8005b6c:	2b2e      	cmp	r3, #46	@ 0x2e
 8005b6e:	d10a      	bne.n	8005b86 <_vfiprintf_r+0x156>
 8005b70:	7863      	ldrb	r3, [r4, #1]
 8005b72:	2b2a      	cmp	r3, #42	@ 0x2a
 8005b74:	d132      	bne.n	8005bdc <_vfiprintf_r+0x1ac>
 8005b76:	9b03      	ldr	r3, [sp, #12]
 8005b78:	1d1a      	adds	r2, r3, #4
 8005b7a:	681b      	ldr	r3, [r3, #0]
 8005b7c:	9203      	str	r2, [sp, #12]
 8005b7e:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8005b82:	3402      	adds	r4, #2
 8005b84:	9305      	str	r3, [sp, #20]
 8005b86:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8005c5c <_vfiprintf_r+0x22c>
 8005b8a:	7821      	ldrb	r1, [r4, #0]
 8005b8c:	2203      	movs	r2, #3
 8005b8e:	4650      	mov	r0, sl
 8005b90:	f7fa fb36 	bl	8000200 <memchr>
 8005b94:	b138      	cbz	r0, 8005ba6 <_vfiprintf_r+0x176>
 8005b96:	9b04      	ldr	r3, [sp, #16]
 8005b98:	eba0 000a 	sub.w	r0, r0, sl
 8005b9c:	2240      	movs	r2, #64	@ 0x40
 8005b9e:	4082      	lsls	r2, r0
 8005ba0:	4313      	orrs	r3, r2
 8005ba2:	3401      	adds	r4, #1
 8005ba4:	9304      	str	r3, [sp, #16]
 8005ba6:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005baa:	4829      	ldr	r0, [pc, #164]	@ (8005c50 <_vfiprintf_r+0x220>)
 8005bac:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8005bb0:	2206      	movs	r2, #6
 8005bb2:	f7fa fb25 	bl	8000200 <memchr>
 8005bb6:	2800      	cmp	r0, #0
 8005bb8:	d03f      	beq.n	8005c3a <_vfiprintf_r+0x20a>
 8005bba:	4b26      	ldr	r3, [pc, #152]	@ (8005c54 <_vfiprintf_r+0x224>)
 8005bbc:	bb1b      	cbnz	r3, 8005c06 <_vfiprintf_r+0x1d6>
 8005bbe:	9b03      	ldr	r3, [sp, #12]
 8005bc0:	3307      	adds	r3, #7
 8005bc2:	f023 0307 	bic.w	r3, r3, #7
 8005bc6:	3308      	adds	r3, #8
 8005bc8:	9303      	str	r3, [sp, #12]
 8005bca:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005bcc:	443b      	add	r3, r7
 8005bce:	9309      	str	r3, [sp, #36]	@ 0x24
 8005bd0:	e76a      	b.n	8005aa8 <_vfiprintf_r+0x78>
 8005bd2:	fb0c 3202 	mla	r2, ip, r2, r3
 8005bd6:	460c      	mov	r4, r1
 8005bd8:	2001      	movs	r0, #1
 8005bda:	e7a8      	b.n	8005b2e <_vfiprintf_r+0xfe>
 8005bdc:	2300      	movs	r3, #0
 8005bde:	3401      	adds	r4, #1
 8005be0:	9305      	str	r3, [sp, #20]
 8005be2:	4619      	mov	r1, r3
 8005be4:	f04f 0c0a 	mov.w	ip, #10
 8005be8:	4620      	mov	r0, r4
 8005bea:	f810 2b01 	ldrb.w	r2, [r0], #1
 8005bee:	3a30      	subs	r2, #48	@ 0x30
 8005bf0:	2a09      	cmp	r2, #9
 8005bf2:	d903      	bls.n	8005bfc <_vfiprintf_r+0x1cc>
 8005bf4:	2b00      	cmp	r3, #0
 8005bf6:	d0c6      	beq.n	8005b86 <_vfiprintf_r+0x156>
 8005bf8:	9105      	str	r1, [sp, #20]
 8005bfa:	e7c4      	b.n	8005b86 <_vfiprintf_r+0x156>
 8005bfc:	fb0c 2101 	mla	r1, ip, r1, r2
 8005c00:	4604      	mov	r4, r0
 8005c02:	2301      	movs	r3, #1
 8005c04:	e7f0      	b.n	8005be8 <_vfiprintf_r+0x1b8>
 8005c06:	ab03      	add	r3, sp, #12
 8005c08:	9300      	str	r3, [sp, #0]
 8005c0a:	462a      	mov	r2, r5
 8005c0c:	4b12      	ldr	r3, [pc, #72]	@ (8005c58 <_vfiprintf_r+0x228>)
 8005c0e:	a904      	add	r1, sp, #16
 8005c10:	4630      	mov	r0, r6
 8005c12:	f7fd fda3 	bl	800375c <_printf_float>
 8005c16:	4607      	mov	r7, r0
 8005c18:	1c78      	adds	r0, r7, #1
 8005c1a:	d1d6      	bne.n	8005bca <_vfiprintf_r+0x19a>
 8005c1c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8005c1e:	07d9      	lsls	r1, r3, #31
 8005c20:	d405      	bmi.n	8005c2e <_vfiprintf_r+0x1fe>
 8005c22:	89ab      	ldrh	r3, [r5, #12]
 8005c24:	059a      	lsls	r2, r3, #22
 8005c26:	d402      	bmi.n	8005c2e <_vfiprintf_r+0x1fe>
 8005c28:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8005c2a:	f7fe fa49 	bl	80040c0 <__retarget_lock_release_recursive>
 8005c2e:	89ab      	ldrh	r3, [r5, #12]
 8005c30:	065b      	lsls	r3, r3, #25
 8005c32:	f53f af1f 	bmi.w	8005a74 <_vfiprintf_r+0x44>
 8005c36:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005c38:	e71e      	b.n	8005a78 <_vfiprintf_r+0x48>
 8005c3a:	ab03      	add	r3, sp, #12
 8005c3c:	9300      	str	r3, [sp, #0]
 8005c3e:	462a      	mov	r2, r5
 8005c40:	4b05      	ldr	r3, [pc, #20]	@ (8005c58 <_vfiprintf_r+0x228>)
 8005c42:	a904      	add	r1, sp, #16
 8005c44:	4630      	mov	r0, r6
 8005c46:	f7fe f821 	bl	8003c8c <_printf_i>
 8005c4a:	e7e4      	b.n	8005c16 <_vfiprintf_r+0x1e6>
 8005c4c:	080064bf 	.word	0x080064bf
 8005c50:	080064c9 	.word	0x080064c9
 8005c54:	0800375d 	.word	0x0800375d
 8005c58:	08005a0b 	.word	0x08005a0b
 8005c5c:	080064c5 	.word	0x080064c5

08005c60 <__swbuf_r>:
 8005c60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005c62:	460e      	mov	r6, r1
 8005c64:	4614      	mov	r4, r2
 8005c66:	4605      	mov	r5, r0
 8005c68:	b118      	cbz	r0, 8005c72 <__swbuf_r+0x12>
 8005c6a:	6a03      	ldr	r3, [r0, #32]
 8005c6c:	b90b      	cbnz	r3, 8005c72 <__swbuf_r+0x12>
 8005c6e:	f7fe f9b9 	bl	8003fe4 <__sinit>
 8005c72:	69a3      	ldr	r3, [r4, #24]
 8005c74:	60a3      	str	r3, [r4, #8]
 8005c76:	89a3      	ldrh	r3, [r4, #12]
 8005c78:	071a      	lsls	r2, r3, #28
 8005c7a:	d501      	bpl.n	8005c80 <__swbuf_r+0x20>
 8005c7c:	6923      	ldr	r3, [r4, #16]
 8005c7e:	b943      	cbnz	r3, 8005c92 <__swbuf_r+0x32>
 8005c80:	4621      	mov	r1, r4
 8005c82:	4628      	mov	r0, r5
 8005c84:	f000 f82a 	bl	8005cdc <__swsetup_r>
 8005c88:	b118      	cbz	r0, 8005c92 <__swbuf_r+0x32>
 8005c8a:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
 8005c8e:	4638      	mov	r0, r7
 8005c90:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005c92:	6823      	ldr	r3, [r4, #0]
 8005c94:	6922      	ldr	r2, [r4, #16]
 8005c96:	1a98      	subs	r0, r3, r2
 8005c98:	6963      	ldr	r3, [r4, #20]
 8005c9a:	b2f6      	uxtb	r6, r6
 8005c9c:	4283      	cmp	r3, r0
 8005c9e:	4637      	mov	r7, r6
 8005ca0:	dc05      	bgt.n	8005cae <__swbuf_r+0x4e>
 8005ca2:	4621      	mov	r1, r4
 8005ca4:	4628      	mov	r0, r5
 8005ca6:	f7ff f995 	bl	8004fd4 <_fflush_r>
 8005caa:	2800      	cmp	r0, #0
 8005cac:	d1ed      	bne.n	8005c8a <__swbuf_r+0x2a>
 8005cae:	68a3      	ldr	r3, [r4, #8]
 8005cb0:	3b01      	subs	r3, #1
 8005cb2:	60a3      	str	r3, [r4, #8]
 8005cb4:	6823      	ldr	r3, [r4, #0]
 8005cb6:	1c5a      	adds	r2, r3, #1
 8005cb8:	6022      	str	r2, [r4, #0]
 8005cba:	701e      	strb	r6, [r3, #0]
 8005cbc:	6962      	ldr	r2, [r4, #20]
 8005cbe:	1c43      	adds	r3, r0, #1
 8005cc0:	429a      	cmp	r2, r3
 8005cc2:	d004      	beq.n	8005cce <__swbuf_r+0x6e>
 8005cc4:	89a3      	ldrh	r3, [r4, #12]
 8005cc6:	07db      	lsls	r3, r3, #31
 8005cc8:	d5e1      	bpl.n	8005c8e <__swbuf_r+0x2e>
 8005cca:	2e0a      	cmp	r6, #10
 8005ccc:	d1df      	bne.n	8005c8e <__swbuf_r+0x2e>
 8005cce:	4621      	mov	r1, r4
 8005cd0:	4628      	mov	r0, r5
 8005cd2:	f7ff f97f 	bl	8004fd4 <_fflush_r>
 8005cd6:	2800      	cmp	r0, #0
 8005cd8:	d0d9      	beq.n	8005c8e <__swbuf_r+0x2e>
 8005cda:	e7d6      	b.n	8005c8a <__swbuf_r+0x2a>

08005cdc <__swsetup_r>:
 8005cdc:	b538      	push	{r3, r4, r5, lr}
 8005cde:	4b29      	ldr	r3, [pc, #164]	@ (8005d84 <__swsetup_r+0xa8>)
 8005ce0:	4605      	mov	r5, r0
 8005ce2:	6818      	ldr	r0, [r3, #0]
 8005ce4:	460c      	mov	r4, r1
 8005ce6:	b118      	cbz	r0, 8005cf0 <__swsetup_r+0x14>
 8005ce8:	6a03      	ldr	r3, [r0, #32]
 8005cea:	b90b      	cbnz	r3, 8005cf0 <__swsetup_r+0x14>
 8005cec:	f7fe f97a 	bl	8003fe4 <__sinit>
 8005cf0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005cf4:	0719      	lsls	r1, r3, #28
 8005cf6:	d422      	bmi.n	8005d3e <__swsetup_r+0x62>
 8005cf8:	06da      	lsls	r2, r3, #27
 8005cfa:	d407      	bmi.n	8005d0c <__swsetup_r+0x30>
 8005cfc:	2209      	movs	r2, #9
 8005cfe:	602a      	str	r2, [r5, #0]
 8005d00:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8005d04:	81a3      	strh	r3, [r4, #12]
 8005d06:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8005d0a:	e033      	b.n	8005d74 <__swsetup_r+0x98>
 8005d0c:	0758      	lsls	r0, r3, #29
 8005d0e:	d512      	bpl.n	8005d36 <__swsetup_r+0x5a>
 8005d10:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8005d12:	b141      	cbz	r1, 8005d26 <__swsetup_r+0x4a>
 8005d14:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8005d18:	4299      	cmp	r1, r3
 8005d1a:	d002      	beq.n	8005d22 <__swsetup_r+0x46>
 8005d1c:	4628      	mov	r0, r5
 8005d1e:	f7ff fddb 	bl	80058d8 <_free_r>
 8005d22:	2300      	movs	r3, #0
 8005d24:	6363      	str	r3, [r4, #52]	@ 0x34
 8005d26:	89a3      	ldrh	r3, [r4, #12]
 8005d28:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8005d2c:	81a3      	strh	r3, [r4, #12]
 8005d2e:	2300      	movs	r3, #0
 8005d30:	6063      	str	r3, [r4, #4]
 8005d32:	6923      	ldr	r3, [r4, #16]
 8005d34:	6023      	str	r3, [r4, #0]
 8005d36:	89a3      	ldrh	r3, [r4, #12]
 8005d38:	f043 0308 	orr.w	r3, r3, #8
 8005d3c:	81a3      	strh	r3, [r4, #12]
 8005d3e:	6923      	ldr	r3, [r4, #16]
 8005d40:	b94b      	cbnz	r3, 8005d56 <__swsetup_r+0x7a>
 8005d42:	89a3      	ldrh	r3, [r4, #12]
 8005d44:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8005d48:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8005d4c:	d003      	beq.n	8005d56 <__swsetup_r+0x7a>
 8005d4e:	4621      	mov	r1, r4
 8005d50:	4628      	mov	r0, r5
 8005d52:	f000 f83f 	bl	8005dd4 <__smakebuf_r>
 8005d56:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005d5a:	f013 0201 	ands.w	r2, r3, #1
 8005d5e:	d00a      	beq.n	8005d76 <__swsetup_r+0x9a>
 8005d60:	2200      	movs	r2, #0
 8005d62:	60a2      	str	r2, [r4, #8]
 8005d64:	6962      	ldr	r2, [r4, #20]
 8005d66:	4252      	negs	r2, r2
 8005d68:	61a2      	str	r2, [r4, #24]
 8005d6a:	6922      	ldr	r2, [r4, #16]
 8005d6c:	b942      	cbnz	r2, 8005d80 <__swsetup_r+0xa4>
 8005d6e:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8005d72:	d1c5      	bne.n	8005d00 <__swsetup_r+0x24>
 8005d74:	bd38      	pop	{r3, r4, r5, pc}
 8005d76:	0799      	lsls	r1, r3, #30
 8005d78:	bf58      	it	pl
 8005d7a:	6962      	ldrpl	r2, [r4, #20]
 8005d7c:	60a2      	str	r2, [r4, #8]
 8005d7e:	e7f4      	b.n	8005d6a <__swsetup_r+0x8e>
 8005d80:	2000      	movs	r0, #0
 8005d82:	e7f7      	b.n	8005d74 <__swsetup_r+0x98>
 8005d84:	20000018 	.word	0x20000018

08005d88 <__swhatbuf_r>:
 8005d88:	b570      	push	{r4, r5, r6, lr}
 8005d8a:	460c      	mov	r4, r1
 8005d8c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005d90:	2900      	cmp	r1, #0
 8005d92:	b096      	sub	sp, #88	@ 0x58
 8005d94:	4615      	mov	r5, r2
 8005d96:	461e      	mov	r6, r3
 8005d98:	da0d      	bge.n	8005db6 <__swhatbuf_r+0x2e>
 8005d9a:	89a3      	ldrh	r3, [r4, #12]
 8005d9c:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8005da0:	f04f 0100 	mov.w	r1, #0
 8005da4:	bf14      	ite	ne
 8005da6:	2340      	movne	r3, #64	@ 0x40
 8005da8:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8005dac:	2000      	movs	r0, #0
 8005dae:	6031      	str	r1, [r6, #0]
 8005db0:	602b      	str	r3, [r5, #0]
 8005db2:	b016      	add	sp, #88	@ 0x58
 8005db4:	bd70      	pop	{r4, r5, r6, pc}
 8005db6:	466a      	mov	r2, sp
 8005db8:	f000 f848 	bl	8005e4c <_fstat_r>
 8005dbc:	2800      	cmp	r0, #0
 8005dbe:	dbec      	blt.n	8005d9a <__swhatbuf_r+0x12>
 8005dc0:	9901      	ldr	r1, [sp, #4]
 8005dc2:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8005dc6:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8005dca:	4259      	negs	r1, r3
 8005dcc:	4159      	adcs	r1, r3
 8005dce:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8005dd2:	e7eb      	b.n	8005dac <__swhatbuf_r+0x24>

08005dd4 <__smakebuf_r>:
 8005dd4:	898b      	ldrh	r3, [r1, #12]
 8005dd6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005dd8:	079d      	lsls	r5, r3, #30
 8005dda:	4606      	mov	r6, r0
 8005ddc:	460c      	mov	r4, r1
 8005dde:	d507      	bpl.n	8005df0 <__smakebuf_r+0x1c>
 8005de0:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8005de4:	6023      	str	r3, [r4, #0]
 8005de6:	6123      	str	r3, [r4, #16]
 8005de8:	2301      	movs	r3, #1
 8005dea:	6163      	str	r3, [r4, #20]
 8005dec:	b003      	add	sp, #12
 8005dee:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005df0:	ab01      	add	r3, sp, #4
 8005df2:	466a      	mov	r2, sp
 8005df4:	f7ff ffc8 	bl	8005d88 <__swhatbuf_r>
 8005df8:	9f00      	ldr	r7, [sp, #0]
 8005dfa:	4605      	mov	r5, r0
 8005dfc:	4639      	mov	r1, r7
 8005dfe:	4630      	mov	r0, r6
 8005e00:	f7fe ffe4 	bl	8004dcc <_malloc_r>
 8005e04:	b948      	cbnz	r0, 8005e1a <__smakebuf_r+0x46>
 8005e06:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005e0a:	059a      	lsls	r2, r3, #22
 8005e0c:	d4ee      	bmi.n	8005dec <__smakebuf_r+0x18>
 8005e0e:	f023 0303 	bic.w	r3, r3, #3
 8005e12:	f043 0302 	orr.w	r3, r3, #2
 8005e16:	81a3      	strh	r3, [r4, #12]
 8005e18:	e7e2      	b.n	8005de0 <__smakebuf_r+0xc>
 8005e1a:	89a3      	ldrh	r3, [r4, #12]
 8005e1c:	6020      	str	r0, [r4, #0]
 8005e1e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8005e22:	81a3      	strh	r3, [r4, #12]
 8005e24:	9b01      	ldr	r3, [sp, #4]
 8005e26:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8005e2a:	b15b      	cbz	r3, 8005e44 <__smakebuf_r+0x70>
 8005e2c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8005e30:	4630      	mov	r0, r6
 8005e32:	f000 f81d 	bl	8005e70 <_isatty_r>
 8005e36:	b128      	cbz	r0, 8005e44 <__smakebuf_r+0x70>
 8005e38:	89a3      	ldrh	r3, [r4, #12]
 8005e3a:	f023 0303 	bic.w	r3, r3, #3
 8005e3e:	f043 0301 	orr.w	r3, r3, #1
 8005e42:	81a3      	strh	r3, [r4, #12]
 8005e44:	89a3      	ldrh	r3, [r4, #12]
 8005e46:	431d      	orrs	r5, r3
 8005e48:	81a5      	strh	r5, [r4, #12]
 8005e4a:	e7cf      	b.n	8005dec <__smakebuf_r+0x18>

08005e4c <_fstat_r>:
 8005e4c:	b538      	push	{r3, r4, r5, lr}
 8005e4e:	4d07      	ldr	r5, [pc, #28]	@ (8005e6c <_fstat_r+0x20>)
 8005e50:	2300      	movs	r3, #0
 8005e52:	4604      	mov	r4, r0
 8005e54:	4608      	mov	r0, r1
 8005e56:	4611      	mov	r1, r2
 8005e58:	602b      	str	r3, [r5, #0]
 8005e5a:	f7fb fb60 	bl	800151e <_fstat>
 8005e5e:	1c43      	adds	r3, r0, #1
 8005e60:	d102      	bne.n	8005e68 <_fstat_r+0x1c>
 8005e62:	682b      	ldr	r3, [r5, #0]
 8005e64:	b103      	cbz	r3, 8005e68 <_fstat_r+0x1c>
 8005e66:	6023      	str	r3, [r4, #0]
 8005e68:	bd38      	pop	{r3, r4, r5, pc}
 8005e6a:	bf00      	nop
 8005e6c:	20000340 	.word	0x20000340

08005e70 <_isatty_r>:
 8005e70:	b538      	push	{r3, r4, r5, lr}
 8005e72:	4d06      	ldr	r5, [pc, #24]	@ (8005e8c <_isatty_r+0x1c>)
 8005e74:	2300      	movs	r3, #0
 8005e76:	4604      	mov	r4, r0
 8005e78:	4608      	mov	r0, r1
 8005e7a:	602b      	str	r3, [r5, #0]
 8005e7c:	f7fb fb5f 	bl	800153e <_isatty>
 8005e80:	1c43      	adds	r3, r0, #1
 8005e82:	d102      	bne.n	8005e8a <_isatty_r+0x1a>
 8005e84:	682b      	ldr	r3, [r5, #0]
 8005e86:	b103      	cbz	r3, 8005e8a <_isatty_r+0x1a>
 8005e88:	6023      	str	r3, [r4, #0]
 8005e8a:	bd38      	pop	{r3, r4, r5, pc}
 8005e8c:	20000340 	.word	0x20000340

08005e90 <_raise_r>:
 8005e90:	291f      	cmp	r1, #31
 8005e92:	b538      	push	{r3, r4, r5, lr}
 8005e94:	4605      	mov	r5, r0
 8005e96:	460c      	mov	r4, r1
 8005e98:	d904      	bls.n	8005ea4 <_raise_r+0x14>
 8005e9a:	2316      	movs	r3, #22
 8005e9c:	6003      	str	r3, [r0, #0]
 8005e9e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8005ea2:	bd38      	pop	{r3, r4, r5, pc}
 8005ea4:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8005ea6:	b112      	cbz	r2, 8005eae <_raise_r+0x1e>
 8005ea8:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8005eac:	b94b      	cbnz	r3, 8005ec2 <_raise_r+0x32>
 8005eae:	4628      	mov	r0, r5
 8005eb0:	f000 f830 	bl	8005f14 <_getpid_r>
 8005eb4:	4622      	mov	r2, r4
 8005eb6:	4601      	mov	r1, r0
 8005eb8:	4628      	mov	r0, r5
 8005eba:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005ebe:	f000 b817 	b.w	8005ef0 <_kill_r>
 8005ec2:	2b01      	cmp	r3, #1
 8005ec4:	d00a      	beq.n	8005edc <_raise_r+0x4c>
 8005ec6:	1c59      	adds	r1, r3, #1
 8005ec8:	d103      	bne.n	8005ed2 <_raise_r+0x42>
 8005eca:	2316      	movs	r3, #22
 8005ecc:	6003      	str	r3, [r0, #0]
 8005ece:	2001      	movs	r0, #1
 8005ed0:	e7e7      	b.n	8005ea2 <_raise_r+0x12>
 8005ed2:	2100      	movs	r1, #0
 8005ed4:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8005ed8:	4620      	mov	r0, r4
 8005eda:	4798      	blx	r3
 8005edc:	2000      	movs	r0, #0
 8005ede:	e7e0      	b.n	8005ea2 <_raise_r+0x12>

08005ee0 <raise>:
 8005ee0:	4b02      	ldr	r3, [pc, #8]	@ (8005eec <raise+0xc>)
 8005ee2:	4601      	mov	r1, r0
 8005ee4:	6818      	ldr	r0, [r3, #0]
 8005ee6:	f7ff bfd3 	b.w	8005e90 <_raise_r>
 8005eea:	bf00      	nop
 8005eec:	20000018 	.word	0x20000018

08005ef0 <_kill_r>:
 8005ef0:	b538      	push	{r3, r4, r5, lr}
 8005ef2:	4d07      	ldr	r5, [pc, #28]	@ (8005f10 <_kill_r+0x20>)
 8005ef4:	2300      	movs	r3, #0
 8005ef6:	4604      	mov	r4, r0
 8005ef8:	4608      	mov	r0, r1
 8005efa:	4611      	mov	r1, r2
 8005efc:	602b      	str	r3, [r5, #0]
 8005efe:	f7fb faae 	bl	800145e <_kill>
 8005f02:	1c43      	adds	r3, r0, #1
 8005f04:	d102      	bne.n	8005f0c <_kill_r+0x1c>
 8005f06:	682b      	ldr	r3, [r5, #0]
 8005f08:	b103      	cbz	r3, 8005f0c <_kill_r+0x1c>
 8005f0a:	6023      	str	r3, [r4, #0]
 8005f0c:	bd38      	pop	{r3, r4, r5, pc}
 8005f0e:	bf00      	nop
 8005f10:	20000340 	.word	0x20000340

08005f14 <_getpid_r>:
 8005f14:	f7fb ba9b 	b.w	800144e <_getpid>

08005f18 <sqrtf>:
 8005f18:	b508      	push	{r3, lr}
 8005f1a:	ed2d 8b02 	vpush	{d8}
 8005f1e:	eeb0 8a40 	vmov.f32	s16, s0
 8005f22:	f000 f817 	bl	8005f54 <__ieee754_sqrtf>
 8005f26:	eeb4 8a48 	vcmp.f32	s16, s16
 8005f2a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005f2e:	d60c      	bvs.n	8005f4a <sqrtf+0x32>
 8005f30:	eddf 8a07 	vldr	s17, [pc, #28]	@ 8005f50 <sqrtf+0x38>
 8005f34:	eeb4 8ae8 	vcmpe.f32	s16, s17
 8005f38:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005f3c:	d505      	bpl.n	8005f4a <sqrtf+0x32>
 8005f3e:	f7fe f893 	bl	8004068 <__errno>
 8005f42:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 8005f46:	2321      	movs	r3, #33	@ 0x21
 8005f48:	6003      	str	r3, [r0, #0]
 8005f4a:	ecbd 8b02 	vpop	{d8}
 8005f4e:	bd08      	pop	{r3, pc}
 8005f50:	00000000 	.word	0x00000000

08005f54 <__ieee754_sqrtf>:
 8005f54:	eeb1 0ac0 	vsqrt.f32	s0, s0
 8005f58:	4770      	bx	lr
	...

08005f5c <_init>:
 8005f5c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005f5e:	bf00      	nop
 8005f60:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8005f62:	bc08      	pop	{r3}
 8005f64:	469e      	mov	lr, r3
 8005f66:	4770      	bx	lr

08005f68 <_fini>:
 8005f68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005f6a:	bf00      	nop
 8005f6c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8005f6e:	bc08      	pop	{r3}
 8005f70:	469e      	mov	lr, r3
 8005f72:	4770      	bx	lr
